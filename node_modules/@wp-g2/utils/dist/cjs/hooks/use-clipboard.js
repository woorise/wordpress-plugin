"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useClipboard = useClipboard;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = require("react");

var _clipboard = require("../clipboard");

/**
 * Source:
 * https://github.com/chakra-ui/chakra-ui/blob/master/packages/hooks/src/use-clipboard.ts
 */

/**
 * @param {string} text Text to copy to the clipboard
 * @param {number} timeout
 * @return {{ hasCopied: boolean, onCopy: () => void, value: string }}
 */
function useClipboard(text, timeout) {
  if (timeout === void 0) {
    timeout = 1500;
  }

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      hasCopied = _useState2[0],
      setHasCopied = _useState2[1];

  var onCopy = (0, _react.useCallback)(function () {
    var didCopy = (0, _clipboard.copyToClipboard)(text);
    setHasCopied(didCopy);
  }, [text]);
  (0, _react.useEffect)(function () {
    if (hasCopied) {
      var id = setTimeout(function () {
        setHasCopied(false);
      }, timeout);
      return function () {
        return clearTimeout(id);
      };
    }

    return undefined;
  }, [timeout, hasCopied]);
  return {
    hasCopied: hasCopied,
    onCopy: onCopy,
    value: text
  };
}