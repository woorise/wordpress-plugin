import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { useCallback, useEffect, useState } from 'react';
import { copyToClipboard } from '../clipboard';
/**
 * Source:
 * https://github.com/chakra-ui/chakra-ui/blob/master/packages/hooks/src/use-clipboard.ts
 */

/**
 * @param {string} text Text to copy to the clipboard
 * @param {number} timeout
 * @return {{ hasCopied: boolean, onCopy: () => void, value: string }}
 */

export function useClipboard(text, timeout) {
  if (timeout === void 0) {
    timeout = 1500;
  }

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      hasCopied = _useState2[0],
      setHasCopied = _useState2[1];

  var onCopy = useCallback(function () {
    var didCopy = copyToClipboard(text);
    setHasCopied(didCopy);
  }, [text]);
  useEffect(function () {
    if (hasCopied) {
      var id = setTimeout(function () {
        setHasCopied(false);
      }, timeout);
      return function () {
        return clearTimeout(id);
      };
    }

    return undefined;
  }, [timeout, hasCopied]);
  return {
    hasCopied: hasCopied,
    onCopy: onCopy,
    value: text
  };
}