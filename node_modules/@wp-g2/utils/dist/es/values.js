import { is } from './is';
/**
 * Determines if a value is empty, null, or undefined.
 *
 * @param {any} value The value to check.
 * @return {boolean} Whether value is empty.
 */

export function isValueEmpty(value) {
  return !is.defined(value) || value === '';
}
/**
 * Attempts to get a defined/non-null value from a collection of arguments.
 *
 * @param {Array<any>} values Values to derive from.
 * @param {any} fallbackValue Fallback value if there are no defined values.
 * @return {any} A defined value or the fallback value.
 */

export function getDefinedValue(values, fallbackValue) {
  var _values$find;

  if (values === void 0) {
    values = [];
  }

  return (_values$find = values.find(is.defined)) != null ? _values$find : fallbackValue;
}