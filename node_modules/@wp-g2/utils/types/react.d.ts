/**
 * Gets a collection of available children elements from a React component's children prop.
 *
 * @param {import('react').ReactNode} children
 *
 * @return {import('react').ReactNodeArray} An array of available children.
 */
export function getValidChildren(children: import('react').ReactNode): import('react').ReactNodeArray;
/**
 * Gets the displayName of a React Component or element.
 *
 * @param {string | import('react').ComponentType} tagName
 *
 * @return {string} The display name of the Component / tagName.
 */
export function getDisplayName(tagName: string | import('react').ComponentType): string;
/**
 * Checks to see if a `children` prop is a render function prop.
 *
 * @param {*} children
 *
 * @return {boolean} True, if children is a render function prop.
 */
export function isRenderProp(children: any): boolean;
/**
 * Handles the rendering of a React component's children prop, which
 * may be a render function prop.
 *
 * @param {*} children Children to render.
 * @param {*} props Props to pass into a (potential) children render function.
 *
 * @return {*} The rendered children.
 */
export function renderChildren(children: any, props?: any): any;
export { default as mergeRefs } from "react-merge-refs";
export { default as hoistNonReactStatics } from "hoist-non-react-statics";
//# sourceMappingURL=react.d.ts.map