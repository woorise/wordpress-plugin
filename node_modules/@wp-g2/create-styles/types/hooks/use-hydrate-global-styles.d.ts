/**
 * @typedef UseHydrateGlobalStylesProps
 * @property {import('create-emotion').Emotion['injectGlobal']} injectGlobal injectGlobal function from the compiler (Emotion).
 * @property {import('../create-style-system/generate-theme').GenerateThemeResults} globalStyles Global style values to be injected.
 */
/**
 * Renders configs (global styles) from the Style system into the DOM on
 * initial render.
 *
 * This is a very important custom hook for the Style system.
 * This hook injects the global styles (theme configs, dark mode configs, etc...)
 * from the Style system into the DOM. It does so seamlessly (once) on initial
 * render, enabling the styled coreElements, components, and CSS compiler
 * to work without the need for Context Providers/Consumers.
 *
 * @param {UseHydrateGlobalStylesProps} props Props for the hook.
 */
export function useHydrateGlobalStyles({ globalStyles, injectGlobal }: UseHydrateGlobalStylesProps): void;
export type UseHydrateGlobalStylesProps = {
    /**
     * injectGlobal function from the compiler (Emotion).
     */
    injectGlobal: import('create-emotion').Emotion['injectGlobal'];
    /**
     * Global style values to be injected.
     */
    globalStyles: import('../create-style-system/generate-theme').GenerateThemeResults;
};
//# sourceMappingURL=use-hydrate-global-styles.d.ts.map