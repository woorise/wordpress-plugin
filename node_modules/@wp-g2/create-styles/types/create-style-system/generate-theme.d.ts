/**
 * @typedef GenerateThemeProps
 * @property {import('./utils').StyleConfigValues} config Default theme config.
 * @property {import('./utils').StyleConfigValues} darkModeConfig Dark mode theme config.
 * @property {import('./utils').StyleConfigValues} highContrastModeConfig High contrast mode theme config.
 * @property {import('./utils').StyleConfigValues} darkHighContrastModeConfig Dark high contrast mode theme config.
 */
/**
 * @typedef GenerateThemeResults
 * @property {import('./utils').StyleConfig} theme A set of theme style references.
 * @property {import('./utils').StyleConfig} globalVariables A set of global variables.
 * @property {string} globalCSSVariables The compiled CSS string for global variables.
 * @property {string} darkModeCSSVariables The compiled CSS string for global dark variables.
 * @property {string} highContrastModeCSSVariables The compiled CSS string for global high contrast variables.
 * @property {string} darkHighContrastModeCSSVariables The compiled CSS string for global dark high contrast variables.
 */
/**
 * Generates theme references and compiles CSS variables to be used by the Style System.
 *
 * @param {GenerateThemeProps} props Props to generate a Style system theme with.
 * @returns {GenerateThemeResults} A set of variables and content for the System.
 */
export function generateTheme({ config, darkModeConfig, highContrastModeConfig, darkHighContrastModeConfig, }: GenerateThemeProps): GenerateThemeResults;
export type GenerateThemeProps = {
    /**
     * Default theme config.
     */
    config: import('./utils').StyleConfigValues;
    /**
     * Dark mode theme config.
     */
    darkModeConfig: import('./utils').StyleConfigValues;
    /**
     * High contrast mode theme config.
     */
    highContrastModeConfig: import('./utils').StyleConfigValues;
    /**
     * Dark high contrast mode theme config.
     */
    darkHighContrastModeConfig: import('./utils').StyleConfigValues;
};
export type GenerateThemeResults = {
    /**
     * A set of theme style references.
     */
    theme: import('./utils').StyleConfig;
    /**
     * A set of global variables.
     */
    globalVariables: import('./utils').StyleConfig;
    /**
     * The compiled CSS string for global variables.
     */
    globalCSSVariables: string;
    /**
     * The compiled CSS string for global dark variables.
     */
    darkModeCSSVariables: string;
    /**
     * The compiled CSS string for global high contrast variables.
     */
    highContrastModeCSSVariables: string;
    /**
     * The compiled CSS string for global dark high contrast variables.
     */
    darkHighContrastModeCSSVariables: string;
};
//# sourceMappingURL=generate-theme.d.ts.map