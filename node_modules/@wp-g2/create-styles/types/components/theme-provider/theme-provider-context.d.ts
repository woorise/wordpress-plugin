/**
 * Combines parent ThemeProvider context values with the current ThemeProvider
 * context values. This mechanism allows for "mode" settings to cascade
 * throughout the React component render tree.
 */
export function useThemeProviderContextBridge(currentContextState?: {}): {
    isDark: null;
    isColorBlind: null;
    isReducedMotion: null;
    isHighContrast: null;
};
/**
 * Creates HTML attributes corresponding to ThemeProvider modes.
 */
export function useThemeProviderModeHtmlAttributes(currentContextState?: {}): {};
export const ThemeProviderContext: import("react").Context<{
    isDark: null;
    isColorBlind: null;
    isReducedMotion: null;
    isHighContrast: null;
}>;
export function useThemeProviderContext(): {
    isDark: null;
    isColorBlind: null;
    isReducedMotion: null;
    isHighContrast: null;
};
//# sourceMappingURL=theme-provider-context.d.ts.map