"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _data = require("@wordpress/data");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var IS_REDUCED_MOTION_STORE = 'g2/is-reduced-motion';
var DEFAULT_STATE = {
  isReducedMotion: false
};
/** @typedef {{ type: 'SET_IS_REDUCED_MOTION', isReducedMotion: boolean }} SetIsReducedMotion */

var actions = {
  /**
   * @param {boolean} isReducedMotion
   * @return {SetIsReducedMotion}
   */
  setIsReducedMotion: function setIsReducedMotion(
  /** @type {boolean} */
  isReducedMotion) {
    return {
      type: 'SET_IS_REDUCED_MOTION',
      isReducedMotion: isReducedMotion
    };
  }
};
/**
 * @type {import('@wordpress/data').Store<typeof DEFAULT_STATE>}
 */

(0, _data.registerStore)(IS_REDUCED_MOTION_STORE, {
  /**
   * @param {typeof DEFAULT_STATE} state
   * @param {SetIsReducedMotion | import('@wordpress/data').Action} action
   */
  reducer: function reducer(state, action) {
    if (state === void 0) {
      state = DEFAULT_STATE;
    }

    switch (action.type) {
      case 'SET_IS_REDUCED_MOTION':
        return _objectSpread(_objectSpread({}, state), {}, {
          isReducedMotion: action.isReducedMotion
        });

      default:
        return state;
    }
  },
  actions: actions,
  selectors: {
    getIsReducedMotion: function getIsReducedMotion(state) {
      return state.isReducedMotion;
    }
  }
});
var _default = IS_REDUCED_MOTION_STORE;
exports.default = _default;