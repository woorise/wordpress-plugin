"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createPlugins = createPlugins;

var _styledGriddie = _interopRequireDefault(require("styled-griddie"));

var _cssVariables = _interopRequireDefault(require("./css-variables"));

var _extraSpecificity = _interopRequireDefault(require("./extra-specificity"));

var _rtl = _interopRequireDefault(require("./rtl"));

var isProd = process.env.NODE_ENV === 'production';
/**
 * A collection of custom Stylis plugins to enhance the way the compiler (Emotion)
 * generates selectors and CSS rules.
 *
 * @param {object} options
 * @param {number} [options.specificityLevel=7]
 * @param {string} [options.key='css']
 * @param {boolean} [options.skipSupportedBrowsers]
 * @param {import('../../css-custom-properties').RootStore} [options.rootStore]
 * @return {import('@emotion/stylis').Plugin[]}
 */

function createPlugins(_ref) {
  var _ref$specificityLevel = _ref.specificityLevel,
      specificityLevel = _ref$specificityLevel === void 0 ? 7 : _ref$specificityLevel,
      _ref$key = _ref.key,
      key = _ref$key === void 0 ? 'css' : _ref$key,
      rootStore = _ref.rootStore,
      _ref$skipSupportedBro = _ref.skipSupportedBrowsers,
      skipSupportedBrowsers = _ref$skipSupportedBro === void 0 ? isProd : _ref$skipSupportedBro;
  return [_rtl.default, (0, _cssVariables.default)({
    skipSupportedBrowsers: skipSupportedBrowsers,
    rootStore: rootStore
  }), (0, _extraSpecificity.default)({
    level: specificityLevel,
    key: key
  }), // @ts-ignore styled-griddie imports StylisPlugin from `styled-components` which has different types from the actual one we're using here
  _styledGriddie.default];
}