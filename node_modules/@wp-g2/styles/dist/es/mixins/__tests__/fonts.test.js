import { get } from '../../core';
import { BASE_FONT_SIZE, getFontSize, getHeadingFontSize, PRESET_FONT_SIZES } from '../fonts';
describe('getFontSize', function () {
  it('should use the preset font size', function () {
    expect(getFontSize('title')).toEqual(getFontSize(PRESET_FONT_SIZES.title));
  });
  it('should accept a string number', function () {
    expect(getFontSize('1.5')).toEqual("calc((1.5 / " + BASE_FONT_SIZE + ") * " + get('fontSize') + ")");
  });
  it('should accept a number', function () {
    expect(getFontSize(1.5)).toEqual("calc((1.5 / " + BASE_FONT_SIZE + ") * " + get('fontSize') + ")");
  });
  it('should return valid css values if they are not number like', function () {
    expect(getFontSize('initial')).toEqual('initial');
  });
});
describe('getHeadingFontSize', function () {
  it('should return the heading size', function () {
    expect(getHeadingFontSize(1)).toEqual(get('fontSizeH1'));
  });
  it('should accept the heading size as a string', function () {
    expect(getHeadingFontSize('5')).toEqual(get('fontSizeH5'));
  });
  it('should return valid css values', function () {
    expect(getHeadingFontSize('initial')).toEqual('initial');
  });
  it('should return a font size if the passed in value does not correspond to a heading size', function () {
    expect(getHeadingFontSize('1.4')).toEqual(getFontSize('1.4'));
  });
});