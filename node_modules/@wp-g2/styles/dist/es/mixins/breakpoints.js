import _taggedTemplateLiteralLoose from "@babel/runtime/helpers/esm/taggedTemplateLiteralLoose";

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n\t\t\t@media (min-width: ", "px) {\n\t\t\t\t", "\n\t\t\t}\n\t\t"]);

  _templateObject2 = function () {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n\t\t\t\t@media (max-width: ", "px) {\n\t\t\t\t\t", "\n\t\t\t\t}\n\t\t\t"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

import { css } from '../style-system';
/**
 * @typedef {'lg' | 'md' | 'sm' | 'xs'} BreakpointSizes
 */

/**
 * @type {Record<BreakpointSizes, number>}
 */

var BREAKPOINT_SIZES = {
  lg: 992,
  md: 768,
  sm: 576,
  xs: 0
};
/**
 *
 * @param {BreakpointSizes} size
 */

export function getBreakpoint(size) {
  if (size === void 0) {
    size = 'md';
  }

  return function (strings) {
    for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      interpolations[_key - 1] = arguments[_key];
    }

    var interpolatedStyles = css.apply(void 0, [strings].concat(interpolations));

    if (size === 'xs') {
      return css(_templateObject(), BREAKPOINT_SIZES.sm - 1, interpolatedStyles);
    }

    var minWidth = BREAKPOINT_SIZES[size] || BREAKPOINT_SIZES.md;
    return css(_templateObject2(), minWidth, interpolatedStyles);
  };
}