"use strict";

var _core = require("../../core");

var _fonts = require("../fonts");

describe('getFontSize', function () {
  it('should use the preset font size', function () {
    expect((0, _fonts.getFontSize)('title')).toEqual((0, _fonts.getFontSize)(_fonts.PRESET_FONT_SIZES.title));
  });
  it('should accept a string number', function () {
    expect((0, _fonts.getFontSize)('1.5')).toEqual("calc((1.5 / " + _fonts.BASE_FONT_SIZE + ") * " + (0, _core.get)('fontSize') + ")");
  });
  it('should accept a number', function () {
    expect((0, _fonts.getFontSize)(1.5)).toEqual("calc((1.5 / " + _fonts.BASE_FONT_SIZE + ") * " + (0, _core.get)('fontSize') + ")");
  });
  it('should return valid css values if they are not number like', function () {
    expect((0, _fonts.getFontSize)('initial')).toEqual('initial');
  });
});
describe('getHeadingFontSize', function () {
  it('should return the heading size', function () {
    expect((0, _fonts.getHeadingFontSize)(1)).toEqual((0, _core.get)('fontSizeH1'));
  });
  it('should accept the heading size as a string', function () {
    expect((0, _fonts.getHeadingFontSize)('5')).toEqual((0, _core.get)('fontSizeH5'));
  });
  it('should return valid css values', function () {
    expect((0, _fonts.getHeadingFontSize)('initial')).toEqual('initial');
  });
  it('should return a font size if the passed in value does not correspond to a heading size', function () {
    expect((0, _fonts.getHeadingFontSize)('1.4')).toEqual((0, _fonts.getFontSize)('1.4'));
  });
});