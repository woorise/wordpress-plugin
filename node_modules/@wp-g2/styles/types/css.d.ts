/**
 * Retrieves a scaled values from the Style system based on a style key.
 *
 * @param {string} key The style key to scale.
 * @param {any} value The style value to scale.
 * @returns {any} The scaled value.
 */
export function getScaleValue(key: string, value: any): any;
/**
 * Transform a style object with scaled values from the Style system.
 *
 * @param {object} styles The style object to transform.
 * @returns {object} The style object with scaled values.
 */
export function getScaleStyles(styles?: object): object;
/**
 * Enhances the (create-system enhanced) CSS function to account for
 * scale functions within the Style system.
 *
 * @param {TemplateStringsArray | import('create-emotion').Interpolation<undefined>} template
 * @param {(import('create-emotion').Interpolation<undefined> | import('@wp-g2/create-styles').PolymorphicComponent<any, any>)[]} args The styles to compile.
 * @returns {ReturnType<compile>} The compiled styles.
 */
export function css(template: TemplateStringsArray | import('create-emotion').Interpolation<undefined>, ...args: (import('create-emotion').Interpolation<undefined> | import('@wp-g2/create-styles').PolymorphicComponent<any, any>)[]): ReturnType<{
    (template: TemplateStringsArray, ...args: import("create-emotion").Interpolation<undefined>[]): string;
    (...args: import("create-emotion").Interpolation<undefined>[]): string;
}>;
export namespace scales {
    const gridGap: string;
    const gridColumnGap: string;
    const gridRowGap: string;
    const gap: string;
    const columnGap: string;
    const rowGap: string;
}
//# sourceMappingURL=css.d.ts.map