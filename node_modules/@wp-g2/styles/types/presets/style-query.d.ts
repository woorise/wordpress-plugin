/**
 * Creates a style query for a Component. This namespace can be added to any
 * React component, allowing it to be targeted for custom style via
 * ui.$().css().
 *
 * @example
 * ```jsx
 * // Declaring a namespace for a component
 * <View {...ui.$('Olaf')} />
 * ```
 *
 * @example
 * ```jsx
 * // Targeting a namespaced component for styling
 * <View css={[ui.$('Olaf').css('background: white')]} />
 *   <View {...ui.$('Olaf')} />
 * </View/>
 * ```
 *
 * @param {string} ComponentName The namespace of the component
 * @returns {StyleQuery} The StyleQuery instance.
 */
export function $(ComponentName: string): StyleQuery;
/**
 * An experimental preset that allows for custom styling of components.
 * This is achieved by leveraging the namespacing system. The provided
 * css() method (which is the same as the one used in the style system)
 * targets the namespace, adding the CSS rules to that selector.
 *
 * @example
 * ```jsx
 * <View css={[ui.$('Button').css('transform: scale(2)')]}>
 *   <Button />
 * </View>
 * ```
 *
 * The StyleQuery class enables a more seamless workflow for namespace declaration
 * within a component as well as declaring CSS rules using a "chaining"
 * API, similar to jQuery.
 */
declare class StyleQuery {
    constructor(ComponentName: any);
    getSelector(): string;
    css(template: string | number | boolean | import("@emotion/utils").SerializedStyles | import("create-emotion").ComponentSelector | import("@emotion/serialize").Keyframes | TemplateStringsArray | import("create-emotion").ArrayInterpolation<undefined> | import("create-emotion").ObjectInterpolation<undefined> | null | undefined, ...args: (string | number | boolean | import("@emotion/utils").SerializedStyles | import("create-emotion").ComponentSelector | import("@emotion/serialize").Keyframes | import("create-emotion").ArrayInterpolation<undefined> | import("create-emotion").ObjectInterpolation<undefined> | import("@wp-g2/create-styles/types").PolymorphicComponent<any, any> | null | undefined)[]): string;
    "data-g2-component": any;
}
export {};
//# sourceMappingURL=style-query.d.ts.map