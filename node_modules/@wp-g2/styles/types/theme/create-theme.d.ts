/**
 * @param {(props: { get: typeof get, theme: typeof baseTheme, color: typeof colorize, space: typeof space }) => Record<string, string>} callback
 * @return {Record<string, string>}
 */
export function createTheme(callback: (props: {
    get: typeof get;
    theme: typeof baseTheme;
    color: typeof colorize;
    space: typeof space;
}) => Record<string, string>): Record<string, string>;
import { get } from "@wp-g2/create-styles/types/create-style-system/utils";
declare const baseTheme: Readonly<{
    switchBackdropBackgroundColor: string;
    switchBackdropBackgroundColorActive: string;
    switchBackdropBorderColor: string;
    switchBackdropBorderColorActive: string;
    switchBackdropBorderColorFocus: string;
    switchToggleBackgroundColor: string;
    switchToggleBackgroundColorActive: string;
    switchToggleBoxShadow: string;
    switchPaddingOffset: string;
    sliderThumbBorderColor: string;
    sliderThumbBoxShadow: string;
    sliderThumbBoxShadowSizeFocus: string;
    sliderThumbBoxShadowColorFocus: string;
    sliderThumbBackgroundColor: string;
    segmentedControlFontSize: string;
    segmentedControlBackgroundColor: string;
    segmentedControlBorderColor: string;
    segmentedControlBackdropBackgroundColor: string;
    segmentedControlBackdropBorderColor: string;
    segmentedControlBackdropBoxShadow: string;
    segmentedControlButtonColorActive: string;
    radioBoxShadow: string;
    radioSize: string;
    radioDotSize: string;
    panelHeaderPadding: string;
    panelBodyPadding: string;
    menuItemBorderWidth: string;
    menuItemFocusBackgroundColor: string;
    menuItemFocusBorderColor: string;
    menuItemFocusTextColor: string;
    menuItemFocusBoxShadow: string;
    menuItemActiveBackgroundColor: string;
    menuItemActiveBorderColor: string;
    menuItemActiveTextColor: string;
    menuItemActiveBoxShadow: string;
    menuItemHeight: string;
    menuItemHeightLarge: string;
    menuItemHeightSmall: string;
    menuItemHeightXLarge: string;
    menuItemHeightXSmall: string;
    menuItemHeightXXSmall: string;
    linkColor: string;
    linkColorHover: string;
    linkColorActive: string;
    linkColorFocus: string;
    gridBase: string;
    checkboxBoxShadow: string;
    checkboxSize: string;
    buttonPaddingXRatio: string;
    buttonPaddingX: string;
    buttonTextColor: string;
    buttonTextColorActive: string;
    buttonPrimaryColor: string;
    buttonPrimaryColorHover: string;
    buttonPrimaryColorActive: string;
    buttonPrimaryColorFocus: string;
    buttonPrimaryBorderColor: string;
    buttonPrimaryBorderColorHover: string;
    buttonPrimaryBorderColorFocus: string;
    buttonPrimaryBorderColorActive: string;
    buttonPrimaryTextColor: string;
    buttonPrimaryTextColorHover: string;
    buttonPrimaryTextColorActive: string;
    buttonPrimaryTextColorFocus: string;
    buttonSecondaryColor: string;
    buttonSecondaryColorHover: string;
    buttonSecondaryColorActive: string;
    buttonSecondaryColorFocus: string;
    buttonSecondaryBorderColor: string;
    buttonSecondaryTextColor: string;
    buttonSecondaryTextColorFocus: string;
    buttonSecondaryTextColorActive: string;
    buttonSecondaryBorderColorHover: string;
    buttonSecondaryBorderColorActive: string;
    buttonSecondaryBorderColorFocus: string;
    buttonTertiaryColor: string;
    buttonTertiaryColorHover: string;
    buttonTertiaryColorActive: string;
    buttonTertiaryColorFocus: string;
    buttonTertiaryBorderColor: string;
    buttonTertiaryTextColor: string;
    buttonTertiaryTextColorFocus: string;
    buttonTertiaryTextColorActive: string;
    buttonTertiaryBorderColorHover: string;
    buttonTertiaryBorderColorActive: string;
    buttonTertiaryBorderColorFocus: string;
    buttonControlActiveStateColor: string;
    buttonControlActiveStateColorHover: string;
    buttonControlActiveStateColorActive: string;
    buttonControlActiveStateColorFocus: string;
    buttonControlActiveStateTextColor: string;
    buttonControlActiveStateBorderColorFocus: string;
    buttonControlActiveStateBoxShadowFocus: string;
    transitionDuration: string;
    transitionDurationFast: string;
    transitionDurationFaster: string;
    transitionDurationFastest: string;
    transitionTimingFunction: string;
    transitionTimingFunctionControl: string;
    surfaceBackgroundColor: string;
    surfaceBackgroundSubtleColor: string;
    surfaceBackgroundTintColor: string;
    surfaceBorderColor: string;
    surfaceBorderBoldColor: string;
    surfaceBorderSubtleColor: string;
    surfaceBackgroundTertiaryColor: string;
    surfaceColor: string;
    fontFamily: string;
    fontFamilyMono: string;
    fontSize: string;
    fontSizeH1: string;
    fontSizeH2: string;
    fontSizeH3: string;
    fontSizeH4: string;
    fontSizeH5: string;
    fontSizeH6: string;
    fontSizeInputMobile: string;
    fontSizeMobile: string;
    fontSizeSmall: string;
    fontSizeXSmall: string;
    fontLineHeightBase: string;
    fontWeight: string;
    fontWeightHeading: string;
    flexGap: import("react").ReactText;
    flexItemMarginRight: string;
    elevationIntensity: number;
    controlBackgroundColor: string;
    controlBackgroundColorHover: string;
    controlBackgroundColorActive: string;
    controlBackgroundDimColor: string;
    controlBackgroundBrightColor: string;
    controlBorderColor: string;
    controlBorderColorHover: string;
    controlBorderColorSubtle: string;
    controlBorderRadius: string;
    controlBorderSubtleColor: string;
    controlBoxShadowFocusSize: string;
    controlBoxShadow: string;
    controlBoxShadowFocus: string;
    controlPseudoBoxShadowFocusWidth: string;
    controlPseudoBoxShadowFocusRingSize: string;
    controlPseudoBoxShadowFocusRingSizeSmall: string;
    controlPseudoBoxShadowFocus: string;
    controlPseudoBoxShadowFocusSmall: string;
    controlDestructivePseudoBoxShadowFocus: string;
    controlDestructivePseudoBoxShadowFocusSmall: string;
    controlDestructiveBorderColor: string;
    controlDestructiveBorderColorFocus: string;
    controlDestructiveBoxShadowFocus: string;
    controlHeight: string;
    controlHeightLarge: string;
    controlHeightSmall: string;
    controlHeightXLarge: string;
    controlHeightXSmall: string;
    controlHeightXXSmall: string;
    controlPaddingX: string;
    controlPaddingXLarge: string;
    controlPaddingXSmall: string;
    controlPrimaryTextColorActive: string;
    controlPrimaryTextColor: string;
    controlSurfaceBoxShadow: string;
    controlSurfaceColor: string;
    controlTextActiveColor: string;
    controlInnerControltextColor: string;
    cardBorderRadius: string;
    cardPaddingX: import("react").ReactText;
    cardPaddingY: import("react").ReactText;
    cardPadding: string;
    cardHeaderFooterPaddingY: import("react").ReactText;
    cardHeaderHeight: string;
    colorAdmin: string;
    colorDestructive: string;
    colorBodyBackground: string;
    colorDivider: string;
    colorPositive: string;
    colorScrollbarThumb: string;
    colorScrollbarThumbHover: string;
    colorScrollbarTrack: string;
    colorText: string;
    colorTextInverted: string;
    colorTextHeading: string;
    colorTextMuted: string;
    colorBackgroundBlue: string;
    colorBackgroundBlueText: string;
    colorBackgroundDarkGray: string;
    colorBackgroundDarkGrayText: string;
    colorBackgroundGreen: string;
    colorBackgroundGreenText: string;
    colorBackgroundLightGray: string;
    colorBackgroundLightGrayText: string;
    colorBackgroundOrange: string;
    colorBackgroundOrangeText: string;
    colorBackgroundPurple: string;
    colorBackgroundPurpleText: string;
    colorBackgroundRed: string;
    colorBackgroundRedText: string;
    colorBackgroundYellow: string;
    colorBackgroundYellowText: string;
    blue100: string;
    blue300: string;
    blue500: string;
    blue700: string;
    blue900: string;
    purple100: string;
    purple300: string;
    purple500: string;
    purple700: string;
    purple900: string;
    green100: string;
    green300: string;
    green500: string;
    green700: string;
    green900: string;
    yellow100: string;
    yellow300: string;
    yellow500: string;
    yellow700: string;
    yellow900: string;
    orange100: string;
    orange300: string;
    orange500: string;
    orange700: string;
    orange900: string;
    red100: string;
    red300: string;
    red500: string;
    red700: string;
    red900: string;
    lightGray100: string;
    lightGray300: string;
    lightGray500: string;
    lightGray700: string;
    lightGray900: string;
    darkGray100: string;
    darkGray300: string;
    darkGray500: string;
    darkGray700: string;
    darkGray900: string;
    black: string;
    blueberry: string;
    blueberryDark: string;
    greens: string;
    grey: string;
    greyBlack: string;
    lightBlue: string;
    lightGrey: string;
    lighterGrey: string;
    pomegrade: string;
    wordpressBlue: string;
    white: string;
}>;
import { colorize } from "@wp-g2/utils/types/colors";
import { space } from "../mixins/space";
export {};
//# sourceMappingURL=create-theme.d.ts.map