export const DARK_THEME: {
    buttonPrimaryTextColorActive: string;
    buttonControlActiveStateTextColor: string;
    colorBodyBackground: string;
    colorDivider: string;
    colorScrollbarThumb: string;
    colorScrollbarThumbHover: string;
    colorScrollbarTrack: string;
    colorText: string;
    colorTextMuted: string;
    colorTextInverted: string;
    colorTextHeading: string;
    controlBackgroundColor: string;
    controlBackgroundColorHover: string;
    controlBackgroundBrightColor: string;
    controlBackgroundDimColor: string;
    controlBorderSubtleColor: string;
    controlPrimaryTextColorActive: string;
    controlPrimaryTextColor: string;
    controlSurfaceColor: string;
    controlTextActiveColor: string;
    surfaceBackgroundColor: string;
    surfaceBackgroundSubtleColor: string;
    surfaceBackgroundTintColor: string;
    surfaceBackgroundTertiaryColor: string;
    surfaceBorderColor: string;
    surfaceBorderBoldColor: string;
    surfaceBorderSubtleColor: string;
    surfaceColor: string;
    colorBackgroundBlue: string;
    colorBackgroundBlueText: string;
    colorBackgroundDarkGray: string;
    colorBackgroundDarkGrayText: string;
    colorBackgroundGreen: string;
    colorBackgroundGreenText: string;
    colorBackgroundLightGray: string;
    colorBackgroundLightGrayText: string;
    colorBackgroundOrange: string;
    colorBackgroundOrangeText: string;
    colorBackgroundPurple: string;
    colorBackgroundPurpleText: string;
    colorBackgroundRed: string;
    colorBackgroundRedText: string;
    colorBackgroundYellow: string;
    colorBackgroundYellowText: string;
};
export const darkModeConfig: {
    buttonPrimaryTextColorActive: string;
    buttonControlActiveStateTextColor: string;
    colorBodyBackground: string;
    colorDivider: string;
    colorScrollbarThumb: string;
    colorScrollbarThumbHover: string;
    colorScrollbarTrack: string;
    colorText: string;
    colorTextMuted: string;
    colorTextInverted: string;
    colorTextHeading: string;
    controlBackgroundColor: string;
    controlBackgroundColorHover: string;
    controlBackgroundBrightColor: string;
    controlBackgroundDimColor: string;
    controlBorderSubtleColor: string;
    controlPrimaryTextColorActive: string;
    controlPrimaryTextColor: string;
    controlSurfaceColor: string;
    controlTextActiveColor: string;
    surfaceBackgroundColor: string;
    surfaceBackgroundSubtleColor: string;
    surfaceBackgroundTintColor: string;
    surfaceBackgroundTertiaryColor: string;
    surfaceBorderColor: string;
    surfaceBorderBoldColor: string;
    surfaceBorderSubtleColor: string;
    surfaceColor: string;
    colorBackgroundBlue: string;
    colorBackgroundBlueText: string;
    colorBackgroundDarkGray: string;
    colorBackgroundDarkGrayText: string;
    colorBackgroundGreen: string;
    colorBackgroundGreenText: string;
    colorBackgroundLightGray: string;
    colorBackgroundLightGrayText: string;
    colorBackgroundOrange: string;
    colorBackgroundOrangeText: string;
    colorBackgroundPurple: string;
    colorBackgroundPurpleText: string;
    colorBackgroundRed: string;
    colorBackgroundRedText: string;
    colorBackgroundYellow: string;
    colorBackgroundYellowText: string;
};
//# sourceMappingURL=dark-mode-config.d.ts.map