/**
 * @template T
 * @param {T | number} value
 * @return {T | string}
 */
export function space<T>(value: number | T): string | T;
export function getIsReducedMotion(): boolean;
/**
 * @param {Record<string, import('tinycolor2').ColorInput>} colors
 * @return {Record<string, import('tinycolor2').ColorInput>}
 */
export function createTextColors(colors: Record<string, import('tinycolor2').ColorInput>): Record<string, import('tinycolor2').ColorInput>;
/**
 *
 * @param {Record<string, import('tinycolor2').ColorInput>} colors
 * @param {boolean} [isDark=false]
 * @return {Record<string, import('tinycolor2').ColorInput>}
 */
export function createRgbaColors(colors: Record<string, import('tinycolor2').ColorInput>, isDark?: boolean | undefined): Record<string, import('tinycolor2').ColorInput>;
/**
 * @param {string} key
 * @param {import('tinycolor2').ColorInput} color
 * @return {Record<string, import('tinycolor2').ColorInput>}
 */
export function generateRgbColors(key: string, color: import('tinycolor2').ColorInput): Record<string, import('tinycolor2').ColorInput>;
/**
 * @param {import('tinycolor2').ColorInput} color
 */
export function generateColorAdminColors(color: import('tinycolor2').ColorInput): Record<string, colorize.ColorInput>;
/**
 * @param {import('tinycolor2').ColorInput} color
 */
export function generateColorDestructiveColors(color: import('tinycolor2').ColorInput): Record<string, colorize.ColorInput>;
import { colorize } from "@wp-g2/utils/types/colors";
//# sourceMappingURL=utils.d.ts.map