import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { chevronDown, chevronUp, minus, plus } from '@wordpress/icons';
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { cx, ui } from '@wp-g2/styles';
import { noop } from '@wp-g2/utils';
import React from 'react';
import { Button } from '../Button';
import { ControlGroup } from '../ControlGroup';
import * as styles from './Stepper.styles';

function Stepper(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'Stepper'),
      className = _useContextSystem.className,
      _useContextSystem$dir = _useContextSystem.direction,
      direction = _useContextSystem$dir === void 0 ? 'horizontal' : _useContextSystem$dir,
      _useContextSystem$onI = _useContextSystem.onIncrement,
      onIncrement = _useContextSystem$onI === void 0 ? noop : _useContextSystem$onI,
      _useContextSystem$onD = _useContextSystem.onDecrement,
      onDecrement = _useContextSystem$onD === void 0 ? noop : _useContextSystem$onD,
      size = _useContextSystem.size,
      otherProps = _objectWithoutProperties(_useContextSystem, ["className", "direction", "onIncrement", "onDecrement", "size"]);

  var isVertical = direction === 'vertical';
  var controlGroupDirection = isVertical ? 'column' : 'row';
  var classes = cx(!isVertical && styles.Stepper, className);
  var AddIcon = isVertical ? chevronUp : plus;
  var MinusIcon = isVertical ? chevronDown : minus;
  var buttons = isVertical ? [/*#__PURE__*/React.createElement(ControlButton, {
    icon: AddIcon,
    isVertical: isVertical,
    key: "plus",
    onClick: onIncrement,
    size: size
  }), /*#__PURE__*/React.createElement(ControlButton, {
    icon: MinusIcon,
    isVertical: isVertical,
    key: "minus",
    onClick: onDecrement,
    size: size
  })] : [/*#__PURE__*/React.createElement(ControlButton, {
    icon: MinusIcon,
    isVertical: isVertical,
    key: "minus",
    onClick: onDecrement,
    size: size
  }), /*#__PURE__*/React.createElement(ControlButton, {
    icon: AddIcon,
    isVertical: isVertical,
    key: "plus",
    onClick: onIncrement,
    size: size
  })];
  return /*#__PURE__*/React.createElement(ControlGroup, Object.assign({
    className: classes,
    direction: controlGroupDirection,
    isItemBlock: true
  }, otherProps, {
    ref: forwardedRef
  }), buttons);
}

var ControlButton = /*#__PURE__*/React.memo(function (_ref) {
  var isVertical = _ref.isVertical,
      size = _ref.size,
      props = _objectWithoutProperties(_ref, ["isVertical", "size"]);

  var buttonSize = isVertical ? 'half' : 'medium';

  if (size === 'large') {
    buttonSize = isVertical ? 'halfLarge' : 'large';
  }

  if (size === 'small') {
    buttonSize = isVertical ? 'halfSmall' : 'small';
  }

  return /*#__PURE__*/React.createElement(Button, Object.assign({}, ui.$('StepperButton'), props, {
    iconSize: 14,
    isBlock: true,
    isControl: true,
    size: buttonSize
  }));
});
export default contextConnect(Stepper, 'Stepper');