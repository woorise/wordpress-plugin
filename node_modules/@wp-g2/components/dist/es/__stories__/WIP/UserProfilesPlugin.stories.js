import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import { ContextSystemProvider } from '@wp-g2/context';
import { faker, Schema } from '@wp-g2/protokit';
import { ui } from '@wp-g2/styles';
import { arrayMove, useListState } from '@wp-g2/utils';
import React, { createContext, useContext, useState } from 'react';
import { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';
import { Avatar, Button, Card, CardBody, CardFooter, CardHeader, Container, FormGroup, Grid, Heading, HStack, Radio, RadioGroup, Select, Spacer, Surface, Tab, TabList, TabPanel, Tabs, Text, TextInput, View, VStack } from '../../index';
export default {
  title: 'Examples/WIP/UserProfilePlugin'
};
var AppContext = /*#__PURE__*/createContext({});

var useAppContext = function () {
  return useContext(AppContext);
};

var ContextSystemProviderValue = {
  FormGroup: {
    alignLabel: 'right',
    gap: 7
  },
  Radio: {
    gap: 2
  }
};
var userSchema = new Schema(function () {
  return {
    avatar: faker.image.avatar(),
    firstName: faker.name.firstName(),
    lastName: faker.name.lastName(),
    userName: faker.internet.userName(),
    nickName: faker.internet.userName(),
    displayName: faker.internet.userName(),
    website: faker.internet.url(),
    biography: faker.lorem.sentences(),
    avatarRating: 'G'
  };
});
var SectionComponents = {
  name: NameSection,
  about: AboutSection,
  status: StatusSection,
  avatar: AvatarSection
};

function Section(_ref) {
  var children = _ref.children;
  return children;
}

function SectionWrapper(_ref2) {
  var id = _ref2.id;

  var _useAppContext = useAppContext(),
      sectionsData = _useAppContext.sections;

  var sections = sectionsData[id];
  return /*#__PURE__*/React.createElement(Droppable, {
    droppableId: id
  }, function (provided) {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(VStack, Object.assign({
      ref: provided.innerRef
    }, provided.droppableProps, {
      spacing: 6
    }), sections.map(function (section, index) {
      var Component = SectionComponents[section];
      return /*#__PURE__*/React.createElement(Draggable, {
        draggableId: section,
        index: index,
        key: section
      }, function (provided) {
        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(View, Object.assign({
          ref: provided.innerRef
        }, provided.draggableProps, provided.dragHandleProps), /*#__PURE__*/React.createElement(Component, null)));
      });
    }), provided.placeholder), /*#__PURE__*/React.createElement(Spacer, {
      pb: 4
    }));
  });
}

function NameSection() {
  var _useAppContext2 = useAppContext(),
      update = _useAppContext2.update,
      user = _useAppContext2.user;

  return /*#__PURE__*/React.createElement(Section, null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(CardHeader, null, /*#__PURE__*/React.createElement(Heading, {
    size: 5
  }, "Name")), /*#__PURE__*/React.createElement(CardBody, null, /*#__PURE__*/React.createElement(Container, {
    alignment: "left",
    width: 640
  }, /*#__PURE__*/React.createElement(FormGroup, {
    label: "User Name"
  }, /*#__PURE__*/React.createElement(TextInput, {
    onChange: update('userName'),
    value: user.userName
  })), /*#__PURE__*/React.createElement(FormGroup, {
    label: "First Name"
  }, /*#__PURE__*/React.createElement(TextInput, {
    onChange: update('firstName'),
    value: user.firstName
  })), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Last Name"
  }, /*#__PURE__*/React.createElement(TextInput, {
    onChange: update('lastName'),
    value: user.lastName
  })), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Nickname (required)"
  }, /*#__PURE__*/React.createElement(TextInput, {
    onChange: update('nickName'),
    value: user.nickName
  })), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Display Name"
  }, /*#__PURE__*/React.createElement(Select, {
    options: [{
      value: user.userName,
      label: user.userName
    }, {
      value: user.nickName,
      label: user.nickName
    }, {
      value: user.firstName,
      label: user.firstName
    }]
  }))))));
}

function AboutSection() {
  var _useAppContext3 = useAppContext(),
      update = _useAppContext3.update,
      user = _useAppContext3.user;

  return /*#__PURE__*/React.createElement(Section, null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(CardHeader, null, /*#__PURE__*/React.createElement(Heading, {
    size: 5
  }, "About")), /*#__PURE__*/React.createElement(CardBody, null, /*#__PURE__*/React.createElement(Container, {
    alignment: "left",
    width: 640
  }, /*#__PURE__*/React.createElement(FormGroup, {
    label: "Website"
  }, /*#__PURE__*/React.createElement(TextInput, {
    onChange: update('website'),
    value: user.website
  })), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Biography"
  }, /*#__PURE__*/React.createElement(VStack, null, /*#__PURE__*/React.createElement(TextInput, {
    maxRows: 8,
    minRows: 4,
    multiline: 4,
    onChange: update('biography'),
    value: user.biography
  }), /*#__PURE__*/React.createElement(Text, {
    variant: "muted"
  }, "Share a little biographical information to fill out your profile. This may be shown publicly.")))))));
}

function StatusSection() {
  return /*#__PURE__*/React.createElement(Section, null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(CardHeader, null, /*#__PURE__*/React.createElement(Heading, {
    size: 5
  }, "Status")), /*#__PURE__*/React.createElement(CardBody, null, /*#__PURE__*/React.createElement(Text, null, "Registered on: ", /*#__PURE__*/React.createElement("strong", null, "August 25, 2020 7:54 pm"))), /*#__PURE__*/React.createElement(CardFooter, {
    justify: "flex-end"
  }, /*#__PURE__*/React.createElement(Button, null, "View User"), /*#__PURE__*/React.createElement(Button, {
    variant: "primary"
  }, "Update"))));
}

function AvatarSection() {
  var _useAppContext4 = useAppContext(),
      update = _useAppContext4.update,
      user = _useAppContext4.user;

  return /*#__PURE__*/React.createElement(Section, null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(CardHeader, null, /*#__PURE__*/React.createElement(Heading, {
    size: 5
  }, "Avatar")), /*#__PURE__*/React.createElement(CardBody, null, /*#__PURE__*/React.createElement(VStack, {
    spacing: 4
  }, /*#__PURE__*/React.createElement(HStack, {
    alignment: "center"
  }, /*#__PURE__*/React.createElement(Avatar, {
    size: 80,
    src: user.avatar
  })), /*#__PURE__*/React.createElement(HStack, {
    alignment: "left"
  }, /*#__PURE__*/React.createElement(Button, {
    onClick: function onClick() {
      return update('avatar')(faker.image.avatar());
    }
  }, "Choose From Media"), /*#__PURE__*/React.createElement(Button, {
    isDestructive: true,
    onClick: function onClick() {
      return update('avatar')(null);
    },
    variant: "tertiary"
  }, "Remove")), /*#__PURE__*/React.createElement(RadioGroup, {
    onChange: update('avatarRating'),
    value: user.avatarRating
  }, /*#__PURE__*/React.createElement(HStack, {
    alignment: "left",
    spacing: 5
  }, /*#__PURE__*/React.createElement(Radio, {
    label: "G",
    value: "G"
  }), /*#__PURE__*/React.createElement(Radio, {
    label: "PR",
    value: "PG"
  }), /*#__PURE__*/React.createElement(Radio, {
    label: "R",
    value: "R"
  }), /*#__PURE__*/React.createElement(Radio, {
    label: "X",
    value: "X"
  })))))));
}

function ProfilePanel() {
  return /*#__PURE__*/React.createElement(SectionWrapper, {
    id: "main"
  });
}

function AccountPanel() {
  return /*#__PURE__*/React.createElement(Text, null, "Account");
}

function OptionsPanel() {
  return /*#__PURE__*/React.createElement(Text, null, "Options");
}

function PermissionsPanel() {
  return /*#__PURE__*/React.createElement(Text, null, "Permissions");
}

function Sidebar() {
  return /*#__PURE__*/React.createElement(SectionWrapper, {
    id: "sidebar"
  });
}

function App() {
  var _useState = useState(userSchema.makeOne()),
      _useState2 = _slicedToArray(_useState, 2),
      user = _useState2[0],
      setUser = _useState2[1];

  var _useListState = useListState(['name', 'about']),
      _useListState2 = _slicedToArray(_useListState, 2),
      main = _useListState2[0],
      setMain = _useListState2[1];

  var _useListState3 = useListState(['status', 'avatar']),
      _useListState4 = _slicedToArray(_useListState3, 2),
      sidebar = _useListState4[0],
      setSidebar = _useListState4[1];

  return /*#__PURE__*/React.createElement(AppContext.Provider, {
    value: {
      user: user,
      setUser: setUser,
      update: function update(key) {
        return function (next) {
          return setUser(function (prev) {
            var _objectSpread2;

            return _objectSpread(_objectSpread({}, prev), {}, (_objectSpread2 = {}, _objectSpread2[key] = next, _objectSpread2));
          });
        };
      },
      sections: {
        main: main,
        sidebar: sidebar
      }
    }
  }, /*#__PURE__*/React.createElement(DragDropContext, {
    onDragEnd: function onDragEnd(_ref3) {
      var destination = _ref3.destination,
          source = _ref3.source;
      var updateFns = {
        main: setMain,
        sidebar: setSidebar
      }; // Sorting content

      if ((destination == null ? void 0 : destination.droppableId) === (source == null ? void 0 : source.droppableId)) {
        var updateFn = updateFns[source == null ? void 0 : source.droppableId];

        if (updateFn) {
          updateFn.move(source.index, destination.index);
        }

        return;
      }

      var prevSection = updateFns[source == null ? void 0 : source.droppableId];
      var nextSection = updateFns[destination == null ? void 0 : destination.droppableId];
      var next = prevSection.find({
        at: source.index
      });

      if (next && nextSection) {
        prevSection.remove({
          at: source.index
        });
        nextSection.insert({
          at: destination.index,
          item: next
        });
      }
    }
  }, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Tabs, null, /*#__PURE__*/React.createElement(TabList, null, /*#__PURE__*/React.createElement(HStack, {
    alignment: "left"
  }, /*#__PURE__*/React.createElement(Tab, {
    css: [ui.padding.x(3)]
  }, "Profile"), /*#__PURE__*/React.createElement(Tab, {
    css: [ui.padding.x(3)]
  }, "Account"), /*#__PURE__*/React.createElement(Tab, {
    css: [ui.padding.x(3)]
  }, "Options"), /*#__PURE__*/React.createElement(Tab, {
    css: [ui.padding.x(3)]
  }, "Permission"))), /*#__PURE__*/React.createElement(Surface, {
    css: [ui.padding(5)],
    variant: "secondary"
  }, /*#__PURE__*/React.createElement(ContextSystemProvider, {
    value: ContextSystemProviderValue
  }, /*#__PURE__*/React.createElement(Grid, {
    gap: 28,
    templateColumns: "1fr 280px"
  }, /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(TabPanel, null, /*#__PURE__*/React.createElement(ProfilePanel, null)), /*#__PURE__*/React.createElement(TabPanel, null, /*#__PURE__*/React.createElement(AccountPanel, null)), /*#__PURE__*/React.createElement(TabPanel, null, /*#__PURE__*/React.createElement(OptionsPanel, null)), /*#__PURE__*/React.createElement(TabPanel, null, /*#__PURE__*/React.createElement(PermissionsPanel, null))), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Sidebar, null)))))))));
}

export function _default() {
  return /*#__PURE__*/React.createElement(App, null);
}