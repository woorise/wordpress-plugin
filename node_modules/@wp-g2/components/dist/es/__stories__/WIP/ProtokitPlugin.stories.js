import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { faker, mockRequest, Schema, useData, useListData } from '@wp-g2/protokit';
import { ui } from '@wp-g2/styles';
import React, { useState } from 'react';
import { useDialogState } from 'reakit';
import { Alert, Alerts, Animated, AnimatedContainer, Avatar, Badge, Button, Card, CardBody, Container, FormGroup, Grid, Heading, HStack, Modal, ModalBody, ModalFooter, ModalHeader, SearchInput, Select, Spacer, Text, TextInput, View, VStack } from '../../index';
export default {
  title: 'Examples/WIP/Protokit/SamplePlugin'
};
var userSchema = new Schema(function () {
  return {
    biography: faker.lorem.paragraph(),
    firstName: faker.name.firstName(),
    lastName: faker.name.lastName(),
    userName: faker.internet.userName(),
    avatar: faker.random.arrayElement([faker.image.avatar(), null]),
    role: faker.random.arrayElement(['user', 'editor', 'admin'])
  };
});

var UserCard = function (_ref) {
  var user = _ref.user,
      props = _objectWithoutProperties(_ref, ["user"]);

  return /*#__PURE__*/React.createElement(Card, props, /*#__PURE__*/React.createElement(CardBody, null, /*#__PURE__*/React.createElement(HStack, {
    alignment: "topLeft",
    spacing: 3
  }, /*#__PURE__*/React.createElement(Avatar, {
    name: user.firstName + " " + user.lastName,
    size: "large",
    src: user.avatar
  }), /*#__PURE__*/React.createElement(VStack, null, /*#__PURE__*/React.createElement(VStack, {
    spacing: 1
  }, /*#__PURE__*/React.createElement(Text, {
    weight: "bold"
  }, user.firstName, " ", user.lastName), /*#__PURE__*/React.createElement(Text, {
    size: 11,
    variant: "muted"
  }, user.userName)), /*#__PURE__*/React.createElement(Badge, null, user.role)))));
};

var EditUser = function (_ref2) {
  var onClose = _ref2.onClose,
      userData = _ref2.user,
      usersFn = _ref2.usersFn;

  var _useData = useData(userData),
      _useData2 = _slicedToArray(_useData, 2),
      user = _useData2[0],
      userFns = _useData2[1];

  var name = user.firstName + " " + user.lastName;
  var bindToField = userFns.bindToField,
      hasChanges = userFns.hasChanges,
      reset = userFns.reset;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isLoading = _useState2[0],
      setIsLoading = _useState2[1];

  var _useState3 = useState(),
      _useState4 = _slicedToArray(_useState3, 2),
      error = _useState4[0],
      setError = _useState4[1];

  var applyChanges = /*#__PURE__*/function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
      return _regeneratorRuntime.wrap(function (_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              setIsLoading(true);
              setError();
              _context.prev = 2;
              _context.next = 5;
              return mockRequest({
                action: function () {
                  usersFn.update(user);
                },
                // status: 400,
                message: 'Could not save user data.',
                timeout: 300
              });

            case 5:
              onClose();
              _context.next = 11;
              break;

            case 8:
              _context.prev = 8;
              _context.t0 = _context["catch"](2);
              setError(_context.t0.message);

            case 11:
              setIsLoading(false);

            case 12:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[2, 8]]);
    }));

    return function () {
      return _ref3.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalHeader, {
    title: "Edit User"
  }), /*#__PURE__*/React.createElement(ModalBody, null, /*#__PURE__*/React.createElement(Alerts, null, !!error && /*#__PURE__*/React.createElement(Spacer, null, /*#__PURE__*/React.createElement(Alert, {
    status: "critical"
  }, /*#__PURE__*/React.createElement(Text, null, error)))), /*#__PURE__*/React.createElement(Grid, {
    templateColumns: '120px 1fr'
  }, /*#__PURE__*/React.createElement(View, {
    css: [ui.alignment.center]
  }, /*#__PURE__*/React.createElement(Avatar, {
    name: name,
    size: 80,
    src: user.avatar
  })), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(FormGroup, {
    label: "First name"
  }, /*#__PURE__*/React.createElement(TextInput, bindToField('firstName'))), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Last name"
  }, /*#__PURE__*/React.createElement(TextInput, bindToField('lastName'))), /*#__PURE__*/React.createElement(FormGroup, {
    label: "User name"
  }, /*#__PURE__*/React.createElement(TextInput, bindToField('userName'))), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Role"
  }, /*#__PURE__*/React.createElement(Select, Object.assign({}, bindToField('role'), {
    options: [{
      value: 'user',
      label: 'User'
    }, {
      value: 'editor',
      label: 'Editor'
    }, {
      value: 'admin',
      label: 'Admin'
    }]
  })))))), /*#__PURE__*/React.createElement(ModalFooter, null, /*#__PURE__*/React.createElement(Button, {
    onClick: function onClick() {
      onClose();
      reset();
    },
    variant: "tertiary"
  }, "Discard Changes"), /*#__PURE__*/React.createElement(Button, {
    disabled: !hasChanges(),
    isLoading: isLoading,
    onClick: applyChanges,
    variant: "primary"
  }, "Save Changes")));
};

function Example() {
  var _useState5 = useState(''),
      _useState6 = _slicedToArray(_useState5, 2),
      query = _useState6[0],
      setQuery = _useState6[1];

  var _useListData = useListData({
    schema: userSchema
  }),
      _useListData2 = _slicedToArray(_useListData, 2),
      users = _useListData2[0],
      usersFn = _useListData2[1];

  var _useState7 = useState(),
      _useState8 = _slicedToArray(_useState7, 2),
      currentUser = _useState8[0],
      setCurrentUser = _useState8[1];

  var dialog = useDialogState({
    animated: true
  });
  return /*#__PURE__*/React.createElement(Container, {
    width: 800
  }, /*#__PURE__*/React.createElement(Spacer, {
    mb: 6
  }, /*#__PURE__*/React.createElement(VStack, null, /*#__PURE__*/React.createElement(Heading, {
    size: 1
  }, "Users"), /*#__PURE__*/React.createElement(HStack, null, /*#__PURE__*/React.createElement(SearchInput, {
    onChange: function onChange(next) {
      usersFn.search(next);
      setQuery(next);
    },
    value: query
  }), /*#__PURE__*/React.createElement(Spacer, null), /*#__PURE__*/React.createElement(Button, {
    onClick: usersFn.loadMore
  }, "Load More")))), /*#__PURE__*/React.createElement(Grid, {
    columns: 3
  }, /*#__PURE__*/React.createElement(AnimatedContainer, null, users.map(function (user) {
    return /*#__PURE__*/React.createElement(Animated, {
      auto: true,
      key: user.id
    }, /*#__PURE__*/React.createElement(UserCard, {
      css: [{
        cursor: 'pointer'
      }, ui.animation.default, ui.zIndex(1), ui.hover([ui.scale(1.05)]), ui.active([ui.scale(0.92)])],
      onClick: function onClick() {
        setCurrentUser(user);
        dialog.show();
      },
      user: user
    }));
  }))), /*#__PURE__*/React.createElement(Modal, {
    dialog: dialog
  }, /*#__PURE__*/React.createElement(EditUser, {
    onClose: dialog.hide,
    user: currentUser,
    usersFn: usersFn
  })));
}

export var _default = function () {
  return /*#__PURE__*/React.createElement(Example, null);
};