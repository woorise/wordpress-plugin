import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _taggedTemplateLiteralLoose from "@babel/runtime/helpers/esm/taggedTemplateLiteralLoose";

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n\t", " {\n\t\t", " {\n\t\t\tposition: relative;\n\n\t\t\t&::before {\n\t\t\t\twidth: 12px;\n\t\t\t\tcontent: '';\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tleft: 50%;\n\t\t\t\ttransform: translateX(-50%);\n\t\t\t\tbackground: blue;\n\t\t\t\topacity: 0.05;\n\t\t\t\tpointer-events: none;\n\t\t\t\tz-index: 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t", ",\n\t", " {\n\t\t> * {\n\t\t\tposition: relative;\n\t\t\t&::before {\n\t\t\t\tbackground: pink;\n\t\t\t\tbottom: calc(", " * -1);\n\t\t\t\tcontent: '';\n\t\t\t\theight: ", ";\n\t\t\t\tleft: 0;\n\t\t\t\topacity: 0.15;\n\t\t\t\tpointer-events: none;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 0;\n\t\t\t\tz-index: 1;\n\t\t\t}\n\n\t\t\t&:last-child {\n\t\t\t\t&::before {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t", " {\n\t\t> * {\n\t\t\tposition: relative;\n\t\t\t&::before {\n\t\t\t\tbackground: pink;\n\t\t\t\tright: calc(", " * -1);\n\t\t\t\tcontent: '';\n\t\t\t\theight: ", ";\n\t\t\t\ttop: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\topacity: 0.15;\n\t\t\t\tpointer-events: none;\n\t\t\t\tposition: absolute;\n\t\t\t\tz-index: 1;\n\t\t\t}\n\n\t\t\t&:last-child {\n\t\t\t\t&::before {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

import { contextConnect, ContextSystemProvider, ns } from '@wp-g2/context';
import { FiChrome, FiCompass } from '@wp-g2/icons';
import { styled, ThemeProvider, ui } from '@wp-g2/styles';
import { useLocalState } from '@wp-g2/utils';
import React, { useState } from 'react';
import { Button, ColorControl, Container, FormGroup, Grid, Heading, HStack, Icon, ListGroup, ListGroupFooter, ListGroupHeader, ListGroups, MenuItem, NavigatorLink, SegmentedControl, Spacer, Subheading, Surface, Switch, Text, TextInput, View, VStack } from '../../index';
export default {
  title: 'Examples/WIP/ListGroups'
};

var selector = function (target) {
  var key = Object.keys(ns());
  var n = ns(target);
  return "[" + key + "=\"" + n[key] + "\"]";
};

var SpacingVisualizerView = styled.div(_templateObject(), selector('GridItem'), selector('Container'), selector('VStack'), selector('ListGroup'), ui.get('HStackSpacing'), ui.get('HStackSpacing'), selector('HStack'), ui.get('HStackSpacing'), ui.get('HStackSpacing'));

var SpacingVisualizer = function (_ref) {
  var children = _ref.children,
      visualize = _ref.visualize;
  if (!visualize) return children;
  return /*#__PURE__*/React.createElement(SpacingVisualizerView, null, children);
};

var BaseGridItem = function (_ref2, forwardedRef) {
  var children = _ref2.children,
      props = _objectWithoutProperties(_ref2, ["children"]);

  return /*#__PURE__*/React.createElement(Surface, Object.assign({
    border: true,
    css: [ui.frame.height('100%'), ui.padding(4)],
    variant: "tertiary"
  }, props, {
    ref: forwardedRef
  }), /*#__PURE__*/React.createElement(Container, {
    width: 300
  }, children));
};

var GridItem = contextConnect(BaseGridItem, 'GridItem');

var ExampleCluster = function (_ref3) {
  var _ref3$horizontal = _ref3.horizontal,
      horizontal = _ref3$horizontal === void 0 ? true : _ref3$horizontal;
  return /*#__PURE__*/React.createElement(GridItem, null, /*#__PURE__*/React.createElement(ContextSystemProvider, {
    value: {
      FormGroup: {
        horizontal: horizontal
      }
    }
  }, /*#__PURE__*/React.createElement(VStack, {
    spacing: 8
  }, /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Spacer, null, /*#__PURE__*/React.createElement(Subheading, null, "Site")), /*#__PURE__*/React.createElement(VStack, null, /*#__PURE__*/React.createElement(FormGroup, {
    label: "Title"
  }, /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Some Title"
  })), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Description"
  }, /*#__PURE__*/React.createElement(TextInput, {
    minRows: 3,
    multiline: true,
    placeholder: "Description..."
  })), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Socials"
  }, /*#__PURE__*/React.createElement(Grid, {
    columns: 2
  }, /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Twitter"
  }), /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Instagram"
  }))), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Base Colors"
  }, /*#__PURE__*/React.createElement(Grid, {
    columns: 2
  }, /*#__PURE__*/React.createElement(ColorControl, {
    color: "black"
  }, "Text"), /*#__PURE__*/React.createElement(ColorControl, {
    color: "#ddd"
  }, "Background"))), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Mobile Zoom"
  }, /*#__PURE__*/React.createElement(Switch, null)))), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Spacer, null, /*#__PURE__*/React.createElement(Subheading, null, "Colors")), !horizontal ? /*#__PURE__*/React.createElement(VStack, null, /*#__PURE__*/React.createElement(ColorControl, {
    color: "black"
  }, "Text"), /*#__PURE__*/React.createElement(ColorControl, {
    color: "#ddd"
  }, "Background"), /*#__PURE__*/React.createElement(ColorControl, {
    color: "#0f5"
  }, "Primary"), /*#__PURE__*/React.createElement(ColorControl, {
    color: "#0ff"
  }, "Accent")) : /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(ColorControl, {
    color: "black"
  }, "Text"), /*#__PURE__*/React.createElement(ColorControl, {
    color: "#ddd"
  }, "Background"), /*#__PURE__*/React.createElement(ColorControl, {
    color: "#0f5"
  }, "Primary"), /*#__PURE__*/React.createElement(ColorControl, {
    color: "#0ff"
  }, "Accent"))))));
};

var ExampleCluster2 = function (props) {
  return /*#__PURE__*/React.createElement(ListGroups, props, /*#__PURE__*/React.createElement(ListGroup, null, /*#__PURE__*/React.createElement(ListGroupHeader, null, "Title", /*#__PURE__*/React.createElement(Button, {
    size: "xSmall",
    variant: "tertiary"
  }, "Edit")), /*#__PURE__*/React.createElement(Grid, {
    columns: [1, 2]
  }, /*#__PURE__*/React.createElement(FormGroup, {
    label: "Action"
  }, /*#__PURE__*/React.createElement(Switch, null)), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Action"
  }, /*#__PURE__*/React.createElement(Switch, null)), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Action"
  }, /*#__PURE__*/React.createElement(Switch, null)), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Action"
  }, /*#__PURE__*/React.createElement(Switch, null)), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Action"
  }, /*#__PURE__*/React.createElement(Switch, null)))), /*#__PURE__*/React.createElement(ListGroup, {
    separator: false
  }, /*#__PURE__*/React.createElement(ListGroupHeader, null, "Title"), /*#__PURE__*/React.createElement(NavigatorLink, {
    href: "#",
    isBack: true
  }, /*#__PURE__*/React.createElement(MenuItem, {
    prefix: /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(FiChrome, null)
    })
  }, /*#__PURE__*/React.createElement(VStack, {
    spacing: 0
  }, /*#__PURE__*/React.createElement(Text, null, "Action"), /*#__PURE__*/React.createElement(Text, {
    size: "caption"
  }, "Help text.")))), /*#__PURE__*/React.createElement(NavigatorLink, {
    href: "#"
  }, /*#__PURE__*/React.createElement(MenuItem, {
    prefix: /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(FiCompass, null)
    })
  }, "Action")), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Title"
  }, /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Some Title"
  })), /*#__PURE__*/React.createElement(NavigatorLink, {
    href: "#"
  }, /*#__PURE__*/React.createElement(MenuItem, {
    as: "button",
    prefix: /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(FiCompass, null)
    }),
    suffix: /*#__PURE__*/React.createElement(Text, {
      isBlock: true,
      size: "caption"
    }, "Detail")
  }, "Action")), /*#__PURE__*/React.createElement(NavigatorLink, {
    href: "#"
  }, /*#__PURE__*/React.createElement(MenuItem, {
    as: "button",
    suffix: /*#__PURE__*/React.createElement(Text, {
      isBlock: true,
      size: "caption"
    }, "Detail")
  }, "Action")), /*#__PURE__*/React.createElement(MenuItem, {
    as: "button",
    suffix: /*#__PURE__*/React.createElement(Text, {
      isBlock: true,
      size: "caption"
    }, "Detail")
  }, "Action"), /*#__PURE__*/React.createElement(ListGroupFooter, null, "Some footer caption")));
};

var AllTheThings = function () {
  var _useLocalState = useLocalState('WIP/ListGroups/SpacingVisualizer', false),
      _useLocalState2 = _slicedToArray(_useLocalState, 2),
      visualize = _useLocalState2[0],
      setVisualize = _useLocalState2[1];

  var _useState = useState(4),
      _useState2 = _slicedToArray(_useState, 2),
      gridBase = _useState2[0],
      setGridBase = _useState2[1];

  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: {
      gridBase: ui.value.px(gridBase)
    }
  }, /*#__PURE__*/React.createElement(Spacer, {
    mb: 5
  }, /*#__PURE__*/React.createElement(HStack, null, /*#__PURE__*/React.createElement(Heading, {
    size: 1
  }, "ListGroup Examples"), /*#__PURE__*/React.createElement(FormGroup, {
    isInline: true,
    label: "Grid Base"
  }, /*#__PURE__*/React.createElement(SegmentedControl, {
    onChange: setGridBase,
    options: [{
      value: 2,
      label: '2px'
    }, {
      value: 4,
      label: '4px'
    }, {
      value: 6,
      label: '6px'
    }, {
      value: 8,
      label: '8px'
    }, {
      value: 10,
      label: '10px'
    }, {
      value: 12,
      label: '12px'
    }],
    value: gridBase
  })), /*#__PURE__*/React.createElement(FormGroup, {
    isInline: true,
    label: "Show Visualizer"
  }, /*#__PURE__*/React.createElement(Switch, {
    checked: visualize,
    onChange: setVisualize
  })))), /*#__PURE__*/React.createElement(SpacingVisualizer, {
    visualize: visualize
  }, /*#__PURE__*/React.createElement(Grid, {
    align: "flex-start",
    columns: [1, 2, 4],
    gap: 5
  }, /*#__PURE__*/React.createElement(ExampleCluster, null), /*#__PURE__*/React.createElement(ExampleCluster, {
    horizontal: false
  }), /*#__PURE__*/React.createElement(GridItem, null, /*#__PURE__*/React.createElement(ExampleCluster2, null)), /*#__PURE__*/React.createElement(GridItem, {
    css: [ui.background.secondary]
  }, /*#__PURE__*/React.createElement(ExampleCluster2, {
    inset: true
  })))));
};

export var _default = function () {
  return /*#__PURE__*/React.createElement(AllTheThings, null);
};