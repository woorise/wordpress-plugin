import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { ContextSystemProvider } from '@wp-g2/context';
import React from 'react';
import { Button, Container, FormGroup, Grid, ListGroup, ListGroupHeader, ListGroups, Select, Slider, Switch, TextInput, UnitInput, VStack } from '../../index';
export default {
  title: 'Examples/WIP/FormElementStates'
};

var ControlCluster = function (_ref) {
  var heading = _ref.heading,
      inputValue = _ref.inputValue,
      selectValue = _ref.selectValue,
      setInputValue = _ref.setInputValue,
      setSelectValue = _ref.setSelectValue,
      setSwitchValue = _ref.setSwitchValue,
      switchValue = _ref.switchValue,
      otherProps = _objectWithoutProperties(_ref, ["heading", "inputValue", "selectValue", "setInputValue", "setSelectValue", "setSwitchValue", "switchValue"]);

  return /*#__PURE__*/React.createElement(ListGroup, null, /*#__PURE__*/React.createElement(ListGroupHeader, null, heading), /*#__PURE__*/React.createElement(ContextSystemProvider, {
    value: {
      FormGroup: {
        horizontal: false
      }
    }
  }, /*#__PURE__*/React.createElement(Grid, {
    columns: 8
  }, /*#__PURE__*/React.createElement(FormGroup, {
    label: "Unit Input"
  }, /*#__PURE__*/React.createElement(UnitInput, Object.assign({}, otherProps, {
    onChange: setInputValue,
    value: inputValue
  }))), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Text Input"
  }, /*#__PURE__*/React.createElement(TextInput, Object.assign({}, otherProps, {
    onChange: setInputValue,
    value: inputValue
  }))), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Text Input + Stepper"
  }, /*#__PURE__*/React.createElement(TextInput, Object.assign({}, otherProps, {
    arrows: "stepper",
    onChange: setInputValue,
    type: "number",
    value: inputValue
  }))), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Slider"
  }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, otherProps, {
    onChange: setInputValue,
    value: inputValue
  }))), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Select"
  }, /*#__PURE__*/React.createElement(Select, Object.assign({}, otherProps, {
    onChange: setSelectValue,
    value: selectValue
  }), /*#__PURE__*/React.createElement("option", {
    label: "One",
    value: "one"
  }), /*#__PURE__*/React.createElement("option", {
    label: "Two",
    value: "two"
  }), /*#__PURE__*/React.createElement("option", {
    label: "Three",
    value: "three"
  }))), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Button"
  }, /*#__PURE__*/React.createElement(Button, {
    disabled: otherProps.disabled,
    isBlock: true,
    isDestructive: otherProps.error,
    isFocused: otherProps.isFocused,
    variant: "primary"
  }, "Button")), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Switch"
  }, /*#__PURE__*/React.createElement(Switch, {
    checked: switchValue,
    disabled: otherProps.disabled,
    isDestructive: otherProps.error,
    isFocused: otherProps.isFocused,
    onChange: setSwitchValue
  })))));
};

var Example = function () {
  var _React$useState = React.useState(1),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      inputValue = _React$useState2[0],
      setInputValue = _React$useState2[1];

  var _React$useState3 = React.useState('one'),
      _React$useState4 = _slicedToArray(_React$useState3, 2),
      selectValue = _React$useState4[0],
      setSelectValue = _React$useState4[1];

  var _React$useState5 = React.useState(false),
      _React$useState6 = _slicedToArray(_React$useState5, 2),
      switchValue = _React$useState6[0],
      setSwitchValue = _React$useState6[1];

  var clusterProps = {
    inputValue: inputValue,
    setInputValue: setInputValue,
    selectValue: selectValue,
    setSelectValue: setSelectValue,
    switchValue: switchValue,
    setSwitchValue: setSwitchValue
  };
  return /*#__PURE__*/React.createElement(Container, {
    css: "\n\t\t\t\tmargin-top: 10vh;\n\t\t\t\tmargin-bottom: 20vh;\n\t\t\t"
  }, /*#__PURE__*/React.createElement(ListGroups, {
    separator: true,
    spacing: 12
  }, /*#__PURE__*/React.createElement(ControlCluster, Object.assign({}, clusterProps, {
    heading: "Default"
  })), /*#__PURE__*/React.createElement(ControlCluster, Object.assign({}, clusterProps, {
    heading: "Focused",
    isFocused: true
  })), /*#__PURE__*/React.createElement(ControlCluster, Object.assign({}, clusterProps, {
    disabled: true,
    heading: "Disabled"
  })), /*#__PURE__*/React.createElement(ControlCluster, Object.assign({}, clusterProps, {
    error: true,
    heading: "Error"
  })), /*#__PURE__*/React.createElement(ControlCluster, Object.assign({}, clusterProps, {
    error: true,
    heading: "Error + Focused",
    isFocused: true
  })), /*#__PURE__*/React.createElement(ControlCluster, Object.assign({}, clusterProps, {
    disabled: true,
    error: true,
    heading: "Error + Disabled"
  }))));
};

export var _default = function () {
  return /*#__PURE__*/React.createElement(Example, null);
};