import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { ContextSystemProvider } from '@wp-g2/context';
import { StyleFrameProvider, ThemeProvider } from '@wp-g2/styles';
import React, { useEffect, useState } from 'react';
import Frame from 'react-frame-component';
import { Alert, Alerts, Button, Card, CardBody, FormGroup, Grid, HStack, Popover, Subheading, Surface, Text, TextInput, View, VStack } from '../../index';
export default {
  title: 'Examples/WIP/ContextRendering'
};

var Cluster = function () {
  return /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(CardBody, null, /*#__PURE__*/React.createElement(FormGroup, {
    label: "First Name"
  }, /*#__PURE__*/React.createElement(TextInput, {
    value: "Elsa"
  })))));
};

var Section = function (_ref) {
  var children = _ref.children,
      title = _ref.title,
      _ref$works = _ref.works,
      works = _ref$works === void 0 ? true : _ref$works;
  return /*#__PURE__*/React.createElement(Surface, {
    border: true,
    css: {
      padding: 20,
      paddingTop: 12
    }
  }, /*#__PURE__*/React.createElement(VStack, {
    alignment: "left"
  }, /*#__PURE__*/React.createElement(HStack, null, /*#__PURE__*/React.createElement(Subheading, null, title), /*#__PURE__*/React.createElement(Text, null, works ? '✅' : '❌')), children));
};

var Example = function () {
  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      now = _useState2[0],
      setNow = _useState2[1];

  useEffect(function () {
    setTimeout(function () {
      setNow(true);
    }, 3000);
  }, []);
  return /*#__PURE__*/React.createElement(Grid, {
    columns: 3
  }, /*#__PURE__*/React.createElement(Section, {
    title: "Default"
  }, /*#__PURE__*/React.createElement(Cluster, null), /*#__PURE__*/React.createElement(Alerts, null, now && /*#__PURE__*/React.createElement(Alert, {
    status: "success"
  }, /*#__PURE__*/React.createElement(Text, null, "New Element")))), /*#__PURE__*/React.createElement(Section, {
    title: "Dark"
  }, /*#__PURE__*/React.createElement(ThemeProvider, {
    isDark: true
  }, /*#__PURE__*/React.createElement(Surface, null, /*#__PURE__*/React.createElement(Cluster, null), /*#__PURE__*/React.createElement(Alerts, null, now && /*#__PURE__*/React.createElement(Alert, {
    status: "success"
  }, /*#__PURE__*/React.createElement(Text, null, "New Element")))))), /*#__PURE__*/React.createElement(Section, {
    title: "Custom Context"
  }, /*#__PURE__*/React.createElement(VStack, null, /*#__PURE__*/React.createElement(Subheading, null, "Inside Context"), /*#__PURE__*/React.createElement(ContextSystemProvider, {
    value: {
      FormGroup: {
        horizontal: false
      }
    }
  }, /*#__PURE__*/React.createElement(Cluster, null)), /*#__PURE__*/React.createElement(Subheading, null, "Outside Context"), /*#__PURE__*/React.createElement(Cluster, null))), /*#__PURE__*/React.createElement(Section, {
    title: "iFrame"
  }, /*#__PURE__*/React.createElement(Frame, {
    style: {
      width: '100%'
    }
  }, /*#__PURE__*/React.createElement(StyleFrameProvider, null, /*#__PURE__*/React.createElement(Cluster, null), /*#__PURE__*/React.createElement(Alerts, null, now && /*#__PURE__*/React.createElement(Alert, {
    status: "success"
  }, /*#__PURE__*/React.createElement(Text, null, "New Element")))))), /*#__PURE__*/React.createElement(Section, {
    title: "Dark + iFrame"
  }, /*#__PURE__*/React.createElement(Frame, {
    style: {
      width: '100%'
    }
  }, /*#__PURE__*/React.createElement(StyleFrameProvider, null, /*#__PURE__*/React.createElement(ThemeProvider, {
    isDark: true
  }, /*#__PURE__*/React.createElement(Surface, null, /*#__PURE__*/React.createElement(Cluster, null), /*#__PURE__*/React.createElement(Alerts, null, now && /*#__PURE__*/React.createElement(Alert, {
    status: "success"
  }, /*#__PURE__*/React.createElement(Text, null, "New Element")))))))), /*#__PURE__*/React.createElement(Section, {
    title: "Custom Context + iFrame"
  }, /*#__PURE__*/React.createElement(Frame, {
    style: {
      width: '100%'
    }
  }, /*#__PURE__*/React.createElement(StyleFrameProvider, null, /*#__PURE__*/React.createElement(VStack, null, /*#__PURE__*/React.createElement(Subheading, null, "Inside Context"), /*#__PURE__*/React.createElement(ContextSystemProvider, {
    value: {
      FormGroup: {
        horizontal: false
      }
    }
  }, /*#__PURE__*/React.createElement(Cluster, null)), /*#__PURE__*/React.createElement(Subheading, null, "Outside Context"), /*#__PURE__*/React.createElement(Cluster, null))))), /*#__PURE__*/React.createElement(Section, {
    title: "Popover"
  }, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(CardBody, null, /*#__PURE__*/React.createElement(Popover, {
    hideOnClickOutside: false,
    placement: "bottom-start",
    trigger: /*#__PURE__*/React.createElement(Button, null, "Popover"),
    visible: false
  }, /*#__PURE__*/React.createElement(Cluster, null))))), /*#__PURE__*/React.createElement(Section, {
    title: "Popover + Dark"
  }, /*#__PURE__*/React.createElement(ThemeProvider, {
    isDark: true
  }, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(CardBody, null, /*#__PURE__*/React.createElement(Popover, {
    hideOnClickOutside: false,
    placement: "bottom-start",
    trigger: /*#__PURE__*/React.createElement(Button, null, "Popover"),
    visible: false
  }, /*#__PURE__*/React.createElement(Cluster, null)))))), /*#__PURE__*/React.createElement(View, null));
};

export var _default = function () {
  return /*#__PURE__*/React.createElement(Example, null);
};