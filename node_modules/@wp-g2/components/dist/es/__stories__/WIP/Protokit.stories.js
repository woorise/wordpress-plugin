import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { faker, mockRequest, Schema, useListData } from '@wp-g2/protokit';
import { ui } from '@wp-g2/styles';
import React, { useState } from 'react';
import { Alert, Alerts, Animated, AnimatedContainer, Button, Card, CardBody, Container, FormGroup, Grid, HStack, SearchInput, Spacer, Spinner, Switch, Text, VStack } from '../../index';
export default {
  title: 'Examples/WIP/Protokit/ListData'
};
var itemSchema = new Schema(function () {
  return {
    description: faker.lorem.paragraph(),
    title: faker.name.firstName()
  };
});

var Example = function () {
  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isLoading = _useState2[0],
      setIsLoading = _useState2[1];

  var _useState3 = useState(false),
      _useState4 = _slicedToArray(_useState3, 2),
      isError = _useState4[0],
      setIsError = _useState4[1];

  var _useState5 = useState(false),
      _useState6 = _slicedToArray(_useState5, 2),
      fail = _useState6[0],
      setFail = _useState6[1];

  var _useState7 = useState(''),
      _useState8 = _slicedToArray(_useState7, 2),
      search = _useState8[0],
      setSearch = _useState8[1];

  var _useListData = useListData({
    initialCount: 20,
    schema: itemSchema
  }),
      _useListData2 = _slicedToArray(_useListData, 2),
      data = _useListData2[0],
      fns = _useListData2[1];

  var handleOnLoadMore = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
      return _regeneratorRuntime.wrap(function (_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              setIsLoading(true);
              setIsError(false);
              _context.prev = 2;
              _context.next = 5;
              return mockRequest({
                data: function () {
                  return fns.loadMore({
                    limit: 10
                  });
                },
                status: fail ? 400 : 200,
                timeout: 300
              });

            case 5:
              _context.next = 10;
              break;

            case 7:
              _context.prev = 7;
              _context.t0 = _context["catch"](2);
              setIsError(true);

            case 10:
              setIsLoading(false);

            case 11:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[2, 7]]);
    }));

    return function () {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/React.createElement(Container, {
    width: 800
  }, /*#__PURE__*/React.createElement(VStack, null, /*#__PURE__*/React.createElement(Alerts, null, isError && /*#__PURE__*/React.createElement(Alert, {
    isDismissable: true,
    onDismiss: function onDismiss() {
      return setIsError(false);
    },
    status: "critical"
  }, /*#__PURE__*/React.createElement(Text, null, "Bad data :("))), /*#__PURE__*/React.createElement(HStack, null, /*#__PURE__*/React.createElement(HStack, {
    alignment: "left"
  }, /*#__PURE__*/React.createElement(Button, {
    disabled: isLoading,
    onClick: handleOnLoadMore
  }, "Load More"), /*#__PURE__*/React.createElement(SearchInput, {
    onChange: function onChange(next) {
      setSearch(next);
      fns.search(next);
    },
    value: search
  }), isLoading && /*#__PURE__*/React.createElement(Spinner, null)), /*#__PURE__*/React.createElement(Spacer, null), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Force Fail",
    templateColumns: "1fr auto"
  }, /*#__PURE__*/React.createElement(Switch, {
    checked: fail,
    onChange: setFail
  }))), /*#__PURE__*/React.createElement(Grid, {
    columns: [2, 3]
  }, /*#__PURE__*/React.createElement(AnimatedContainer, null, data.map(function (item, index) {
    return /*#__PURE__*/React.createElement(Animated, {
      auto: true,
      key: item.id,
      transition: {// This should feel easier...
        // delay: 0.05 * (index - data.length + limit),
      }
    }, /*#__PURE__*/React.createElement(Card, {
      css: [ui.frame.height(100), {
        cursor: 'pointer',
        userSelect: 'none',
        zIndex: 2
      }, ui.hover([ui.scale(1.1), ui.offset.y(-10), ui.shadow({
        radius: 20
      })]), ui.active(ui.scale(0.9)), ui.animation.default],
      onClick: function onClick() {
        return fns.remove({
          id: item.id
        });
      }
    }, /*#__PURE__*/React.createElement(CardBody, null, /*#__PURE__*/React.createElement(VStack, null, /*#__PURE__*/React.createElement(Text, {
      weight: "bold"
    }, index, ". ", item.title), /*#__PURE__*/React.createElement(Text, {
      numberOfLines: 2,
      size: "caption",
      truncate: true,
      variant: "muted"
    }, item.description)))));
  })))));
};

export var _default = function () {
  return /*#__PURE__*/React.createElement(Example, null);
};