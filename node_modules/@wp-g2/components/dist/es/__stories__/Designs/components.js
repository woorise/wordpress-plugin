import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { get, SUPPORTED_COLORS as COLORS, ui } from '@wp-g2/styles';
import { getOptimalTextColor, useClipboard } from '@wp-g2/utils';
import React from 'react';
import { Card, CardBody, Container, Grid, Heading, HStack, Spacer, Text, View, VStack } from '../../index';
var GRADES = [100, 300, 500, 700, 900];
var ALPHAS = [10, 20, 30, 40, 50, 60, 70, 80, 90];

var ColorItem = function (_ref) {
  var color = _ref.color,
      grade = _ref.grade,
      rgba = _ref.rgba;

  var _React$useState = React.useState(),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      hex = _React$useState2[0],
      setHex = _React$useState2[1];

  var ref = React.useRef();

  var _useClipboard = useClipboard(hex),
      hasCopied = _useClipboard.hasCopied,
      onCopy = _useClipboard.onCopy;

  React.useEffect(function () {
    var computedBg = window.getComputedStyle(ref.current).background;
    var colorObj = ui.color(computedBg);
    setHex(rgba ? colorObj.toRgbString() : colorObj.toHexString());
  }, [rgba]);
  var textColor = rgba ? 'black' : getOptimalTextColor(hex);
  return /*#__PURE__*/React.createElement(CardBody, {
    key: grade,
    onClick: onCopy,
    ref: ref,
    style: {
      background: get("" + color + grade),
      color: textColor,
      cursor: 'pointer'
    }
  }, /*#__PURE__*/React.createElement(HStack, null, /*#__PURE__*/React.createElement(View, null, color, grade), /*#__PURE__*/React.createElement(View, {
    css: {
      textAlign: 'right'
    }
  }, hasCopied ? 'Copied' : hex)));
};

var ColorSet = function (_ref2) {
  var color = _ref2.color,
      _ref2$grades = _ref2.grades,
      grades = _ref2$grades === void 0 ? GRADES : _ref2$grades,
      rgba = _ref2.rgba;
  return /*#__PURE__*/React.createElement(Card, null, grades.map(function (grade) {
    return /*#__PURE__*/React.createElement(ColorItem, {
      color: color,
      grade: grade,
      key: grade,
      rgba: rgba
    });
  }));
};

export var Colors = function () {
  return /*#__PURE__*/React.createElement(Container, {
    css: {
      margin: '5vh auto 20vh'
    }
  }, /*#__PURE__*/React.createElement(VStack, {
    spacing: 8
  }, /*#__PURE__*/React.createElement(VStack, null, /*#__PURE__*/React.createElement(Heading, {
    size: 2
  }, "Admin"), /*#__PURE__*/React.createElement(Grid, {
    columns: [1, 2, 4]
  }, /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(ColorSet, {
    color: 'colorAdmin',
    grades: ['']
  })), /*#__PURE__*/React.createElement(ColorSet, {
    color: 'colorAdminRgba',
    grades: ALPHAS,
    rgba: true
  }))), /*#__PURE__*/React.createElement(VStack, null, /*#__PURE__*/React.createElement(Heading, {
    size: 2
  }, "Colors"), /*#__PURE__*/React.createElement(Grid, {
    columns: [1, 2, 4]
  }, COLORS.map(function (color) {
    return /*#__PURE__*/React.createElement(ColorSet, {
      color: color,
      key: color
    });
  })))));
};

var TypographyItem = function (_ref3) {
  var _ref3$base = _ref3.base,
      base = _ref3$base === void 0 ? 13 : _ref3$base,
      _ref3$fontFamily = _ref3.fontFamily,
      fontFamily = _ref3$fontFamily === void 0 ? 'System' : _ref3$fontFamily,
      fontSize = _ref3.fontSize,
      _ref3$multiplier = _ref3.multiplier,
      multiplier = _ref3$multiplier === void 0 ? 1 : _ref3$multiplier,
      _ref3$title = _ref3.title,
      title = _ref3$title === void 0 ? 'Body' : _ref3$title;
  var size = parseFloat(base * multiplier).toFixed(2).replace('.00', '');
  var roundedSize = Math.round(base * multiplier);
  return /*#__PURE__*/React.createElement(VStack, {
    spacing: 1
  }, /*#__PURE__*/React.createElement(Text, {
    size: "caption"
  }, /*#__PURE__*/React.createElement("strong", null, title)), /*#__PURE__*/React.createElement(VStack, null, /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Text, {
    size: fontSize
  }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit.")), /*#__PURE__*/React.createElement(HStack, {
    alignment: "left",
    spacing: 8
  }, /*#__PURE__*/React.createElement(Text, {
    css: {
      width: 80
    },
    size: "caption"
  }, /*#__PURE__*/React.createElement("strong", null, "Size:"), " ", roundedSize, "px"), /*#__PURE__*/React.createElement(Text, {
    css: {
      width: 160
    },
    size: "caption"
  }, /*#__PURE__*/React.createElement("strong", null, "Multiplier:"), " Base (", base, "px) *", ' ', multiplier), /*#__PURE__*/React.createElement(Text, {
    css: {
      width: 100
    },
    size: "caption"
  }, /*#__PURE__*/React.createElement("strong", null, "Exact Size:"), " ", size, "px"), /*#__PURE__*/React.createElement(Text, {
    size: "caption"
  }, /*#__PURE__*/React.createElement("strong", null, "Line Height:"), " 1.2"), /*#__PURE__*/React.createElement(Text, {
    size: "caption"
  }, /*#__PURE__*/React.createElement("strong", null, "Font:"), " ", fontFamily))));
};

var HeadingItem = function (_ref4) {
  var _ref4$fontFamily = _ref4.fontFamily,
      fontFamily = _ref4$fontFamily === void 0 ? 'System' : _ref4$fontFamily,
      _ref4$title = _ref4.title,
      title = _ref4$title === void 0 ? 'Body' : _ref4$title,
      _ref4$weight = _ref4.weight,
      weight = _ref4$weight === void 0 ? 400 : _ref4$weight;
  return /*#__PURE__*/React.createElement(VStack, {
    spacing: 1
  }, /*#__PURE__*/React.createElement(Text, {
    size: "caption"
  }, /*#__PURE__*/React.createElement("strong", null, title)), /*#__PURE__*/React.createElement(VStack, null, /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Text, {
    weight: weight
  }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit.")), /*#__PURE__*/React.createElement(HStack, {
    alignment: "left",
    spacing: 8
  }, /*#__PURE__*/React.createElement(Text, {
    css: {
      width: 80
    },
    size: "caption"
  }, /*#__PURE__*/React.createElement("strong", null, "Weight:"), " ", weight), /*#__PURE__*/React.createElement(Text, {
    size: "caption"
  }, /*#__PURE__*/React.createElement("strong", null, "Line Height:"), " 1.2"), /*#__PURE__*/React.createElement(Text, {
    size: "caption"
  }, /*#__PURE__*/React.createElement("strong", null, "Font:"), " ", fontFamily))));
};

export var Typography = function () {
  return /*#__PURE__*/React.createElement(Container, {
    css: {
      margin: '5vh auto 40vh'
    }
  }, /*#__PURE__*/React.createElement(Spacer, {
    mb: 8
  }, /*#__PURE__*/React.createElement(Heading, {
    size: 2
  }, "Typography")), /*#__PURE__*/React.createElement(Spacer, {
    mb: 4
  }, /*#__PURE__*/React.createElement(Heading, {
    size: 4
  }, "Sizes")), /*#__PURE__*/React.createElement(Spacer, {
    mb: 20
  }, /*#__PURE__*/React.createElement(VStack, {
    spacing: 10
  }, /*#__PURE__*/React.createElement(TypographyItem, {
    fontSize: ui.get('fontSizeH1'),
    multiplier: 2.44,
    title: "H1"
  }), /*#__PURE__*/React.createElement(TypographyItem, {
    fontSize: ui.get('fontSizeH2'),
    multiplier: 1.95,
    title: "H2"
  }), /*#__PURE__*/React.createElement(TypographyItem, {
    fontSize: ui.get('fontSizeH3'),
    multiplier: 1.56,
    title: "H3"
  }), /*#__PURE__*/React.createElement(TypographyItem, {
    fontSize: ui.get('fontSizeH4'),
    multiplier: 1.25,
    title: "H4"
  }), /*#__PURE__*/React.createElement(TypographyItem, {
    fontSize: ui.get('fontSizeH5'),
    multiplier: 1,
    title: "H5"
  }), /*#__PURE__*/React.createElement(TypographyItem, {
    fontSize: ui.get('fontSizeH6'),
    multiplier: 0.8,
    title: "H6"
  }), /*#__PURE__*/React.createElement(TypographyItem, null), /*#__PURE__*/React.createElement(TypographyItem, {
    fontSize: ui.get('fontSizeSmall'),
    multiplier: 0.92,
    title: "Small"
  }))), /*#__PURE__*/React.createElement(Spacer, {
    mb: 4
  }, /*#__PURE__*/React.createElement(Heading, {
    size: 4
  }, "Weights")), /*#__PURE__*/React.createElement(VStack, {
    spacing: 10
  }, /*#__PURE__*/React.createElement(HeadingItem, {
    title: "Heading",
    weight: 600
  }), /*#__PURE__*/React.createElement(HeadingItem, null)));
};