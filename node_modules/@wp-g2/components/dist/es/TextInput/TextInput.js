import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect } from '@wp-g2/context';
import { ui } from '@wp-g2/styles';
import { mergeRefs } from '@wp-g2/utils';
import React from 'react';
import { View } from '../View';
import TextInputArrows from './TextInputArrows';
import TextInputSteppers from './TextInputSteppers';
import { useTextInput } from './useTextInput';
/**
 *
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').Props, 'input'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function TextInput(props, forwardedRef) {
  var _useTextInput = useTextInput(props),
      __store = _useTextInput.__store,
      arrows = _useTextInput.arrows,
      decrement = _useTextInput.decrement,
      disabled = _useTextInput.disabled,
      dragHandlersRef = _useTextInput.dragHandlersRef,
      increment = _useTextInput.increment,
      inputProps = _useTextInput.inputProps,
      inputRef = _useTextInput.inputRef,
      isTypeNumeric = _useTextInput.isTypeNumeric,
      prefix = _useTextInput.prefix,
      suffix = _useTextInput.suffix,
      otherProps = _objectWithoutProperties(_useTextInput, ["__store", "arrows", "decrement", "disabled", "dragHandlersRef", "increment", "inputProps", "inputRef", "isTypeNumeric", "prefix", "suffix"]);

  return /*#__PURE__*/React.createElement(View, Object.assign({}, otherProps, {
    disabled: disabled
  }, ui.$('TextInputWrapper')), prefix, /*#__PURE__*/React.createElement(View, Object.assign({}, ui.$('TextInput'), {
    autoComplete: "off",
    spellCheck: false
  }, inputProps, {
    disabled: disabled,
    ref: mergeRefs([inputRef, forwardedRef])
  })), suffix, arrows === true && isTypeNumeric && /*#__PURE__*/React.createElement(TextInputArrows, {
    decrement: decrement,
    dragHandlersRef: dragHandlersRef,
    increment: increment
  }), arrows === 'stepper' && isTypeNumeric && /*#__PURE__*/React.createElement(TextInputSteppers, {
    decrement: decrement,
    disabled: !!disabled,
    dragHandlersRef: dragHandlersRef,
    increment: increment
  }));
}
/**
 * `TextInput` is a form component that users can enter content into.
 *
 * @example
 * ```jsx
 * import { TextInput } from `@wp-g2/components`
 *
 * function Example() {
 *   return <TextInput placeholder="First name" />
 * }
 * ```
 */


var ConnectedTextInput = contextConnect(TextInput, 'TextInput');
export default ConnectedTextInput;