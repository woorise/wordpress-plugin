import { render } from '@testing-library/react';
import React from 'react';
import { TextInput } from '../index';
describe('props', function () {
  test('should render correctly', function () {
    var _render = render( /*#__PURE__*/React.createElement(TextInput, {
      id: "text-input"
    })),
        container = _render.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render align', function () {
    var _render2 = render( /*#__PURE__*/React.createElement(TextInput, {
      align: "flex-start",
      id: "text-input"
    })),
        container = _render2.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render disabled', function () {
    var _render3 = render( /*#__PURE__*/React.createElement(TextInput, {
      disabled: true,
      id: "text-input"
    })),
        container = _render3.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render defaultValue', function () {
    var _render4 = render( /*#__PURE__*/React.createElement(TextInput, {
      defaultValue: "Olaf",
      id: "text-input"
    })),
        container = _render4.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render gap', function () {
    var _render5 = render( /*#__PURE__*/React.createElement(TextInput, {
      gap: 4,
      id: "text-input"
    })),
        container = _render5.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render isRounded', function () {
    var _render6 = render( /*#__PURE__*/React.createElement(TextInput, {
      id: "text-input",
      isRounded: true
    })),
        container = _render6.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render seamless', function () {
    var _render7 = render( /*#__PURE__*/React.createElement(TextInput, {
      id: "text-input",
      seamless: true
    })),
        container = _render7.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render justify', function () {
    var _render8 = render( /*#__PURE__*/React.createElement(TextInput, {
      id: "text-input",
      justify: "space-around"
    })),
        container = _render8.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render multiline', function () {
    var _render9 = render( /*#__PURE__*/React.createElement(TextInput, {
      id: "text-input",
      isResizable: true,
      multiline: true
    })),
        container = _render9.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render prefix', function () {
    var _render10 = render( /*#__PURE__*/React.createElement(TextInput, {
      id: "text-input",
      prefix: /*#__PURE__*/React.createElement("span", null, "prefix")
    })),
        container = _render10.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render size', function () {
    var _render11 = render( /*#__PURE__*/React.createElement(TextInput, {
      id: "text-input",
      size: "small"
    })),
        container = _render11.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render suffix', function () {
    var _render12 = render( /*#__PURE__*/React.createElement(TextInput, {
      id: "text-input",
      suffix: /*#__PURE__*/React.createElement("span", null, "suffix")
    })),
        container = _render12.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render value', function () {
    var _render13 = render( /*#__PURE__*/React.createElement(TextInput, {
      id: "text-input",
      value: "Olaf"
    })),
        container = _render13.container;

    expect(container.firstChild).toMatchSnapshot();
  });
});