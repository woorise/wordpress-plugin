import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { css, cx } from '@wp-g2/styles';
import { noop } from '@wp-g2/utils';
import React from 'react';
import { Text } from '../Text';
import * as styles from './Tag.styles';
import { TAG_COLORS } from './Tag.utils';
import TagRemoveButton from './TagRemoveButton';
var TagView = styles.TagView;

function Tag(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'Tag'),
      children = _useContextSystem.children,
      _useContextSystem$col = _useContextSystem.color,
      color = _useContextSystem$col === void 0 ? 'standard' : _useContextSystem$col,
      _useContextSystem$dis = _useContextSystem.display,
      display = _useContextSystem$dis === void 0 ? 'inline-flex' : _useContextSystem$dis,
      href = _useContextSystem.href,
      _useContextSystem$onR = _useContextSystem.onRemove,
      onRemove = _useContextSystem$onR === void 0 ? noop : _useContextSystem$onR,
      removeButtonText = _useContextSystem.removeButtonText,
      className = _useContextSystem.className,
      otherProps = _objectWithoutProperties(_useContextSystem, ["children", "color", "display", "href", "onRemove", "removeButtonText", "className"]);

  var tagColor = TAG_COLORS[color] || TAG_COLORS.standard;
  var sx = {};
  sx.base = css({
    display: display
  });
  var classes = cx(sx.base, styles.getBackground({
    color: tagColor
  }), styles.getBackgroundText({
    color: tagColor
  }), className);
  var asProp = href ? 'a' : 'span';
  return /*#__PURE__*/React.createElement(TagView, Object.assign({}, otherProps, {
    as: asProp,
    className: classes,
    href: href,
    ref: forwardedRef
  }), /*#__PURE__*/React.createElement(Text, {
    className: styles.text,
    color: "currentColor",
    isBlock: true,
    lineHeight: 1,
    truncate: true
  }, children), /*#__PURE__*/React.createElement(TagRemoveButton, {
    onClick: onRemove,
    removeButtonText: removeButtonText
  }));
}

export default contextConnect(Tag, 'Tag');