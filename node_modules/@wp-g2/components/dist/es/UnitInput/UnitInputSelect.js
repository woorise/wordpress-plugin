import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { __ } from '@wordpress/i18n';
import { cx, ui } from '@wp-g2/styles';
import '@wp-g2/utils';
import React from 'react';
import { View } from '../View';
import * as styles from './UnitInput.styles';
import { UNITS } from './UnitInput.utils';

function UnitInputSelect(_ref) {
  var disabled = _ref.disabled,
      onSelectChange = _ref.onSelectChange,
      unit = _ref.unit;

  var _React$useState = React.useState(false),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      isFocused = _React$useState2[0],
      setFocused = _React$useState2[1];

  var handleOnChange = React.useCallback(function (event) {
    onSelectChange(event.target.value);
  }, [onSelectChange]);
  var handleOnBlur = React.useCallback(function () {
    return setFocused(false);
  }, []);
  var handleOnFocused = React.useCallback(function () {
    return setFocused(true);
  }, []);
  var handleOnStopPropagation = React.useCallback(function (event) {
    event.stopPropagation();
  }, []);
  if (!unit) return null;
  return /*#__PURE__*/React.createElement(View, {
    className: styles.UnitInputSelect
  }, /*#__PURE__*/React.createElement(View, {
    className: cx([styles.UnitInputSelectUnit, isFocused && styles.unitSelectFocused, disabled && styles.disabled])
  }, unit, /*#__PURE__*/React.createElement(View, Object.assign({}, ui.$('UnitInputSelect'), {
    as: "select",
    className: styles.UnitInputSelectElement,
    disabled: disabled,
    onBlur: handleOnBlur,
    onChange: handleOnChange,
    onClick: handleOnStopPropagation,
    onFocus: handleOnFocused,
    onMouseDown: handleOnStopPropagation,
    title: __('Change unit'),
    value: unit
  }), UNITS.map(function (i) {
    return /*#__PURE__*/React.createElement("option", {
      key: i,
      value: i
    }, i);
  }))));
}

export default /*#__PURE__*/React.memo(UnitInputSelect);