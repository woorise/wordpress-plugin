import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { css, cx, ui } from '@wp-g2/styles';
import { getValidChildren } from '@wp-g2/utils';
import React from 'react';
import { View } from '../View';
import * as styles from './ZStack.styles';
var ZStackView = styles.ZStackView;

function ZStack(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'ZStack'),
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      _useContextSystem$isL = _useContextSystem.isLayered,
      isLayered = _useContextSystem$isL === void 0 ? true : _useContextSystem$isL,
      _useContextSystem$isR = _useContextSystem.isReversed,
      isReversed = _useContextSystem$isR === void 0 ? false : _useContextSystem$isR,
      _useContextSystem$off = _useContextSystem.offset,
      offset = _useContextSystem$off === void 0 ? 0 : _useContextSystem$off,
      otherProps = _objectWithoutProperties(_useContextSystem, ["children", "className", "isLayered", "isReversed", "offset"]);

  var validChildren = getValidChildren(children);
  var childrenCount = validChildren.length - 1;
  var clonedChildren = validChildren.map(function (child, index) {
    var zIndex = isReversed ? childrenCount - index : index;
    var classes = cx(isLayered ? styles.positionAbsolute : styles.positionRelative, css({
      marginLeft: !isLayered && offset * -1
    }));
    return /*#__PURE__*/React.createElement(View, Object.assign({}, ui.$('ZStackItem'), {
      className: classes,
      key: child.key,
      style: {
        zIndex: zIndex
      }
    }), child);
  });
  var classes = cx(css({
    paddingLeft: !isLayered ? offset : null
  }), className);
  return /*#__PURE__*/React.createElement(ZStackView, Object.assign({}, otherProps, {
    className: classes,
    ref: forwardedRef
  }), clonedChildren);
}

export default contextConnect(ZStack, 'ZStack');