import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { cx } from '@wp-g2/styles';
import { noop } from '@wp-g2/utils';
import React from 'react';
import { BaseButton } from '../BaseButton';
import { useButtonGroupContext } from '../ButtonGroup';
import * as styles from './Button.styles';
/**
 * @typedef {'primary' | 'secondary' | 'tertiary' | 'plain' | 'link'} ButtonVariant
 */

/**
 * @typedef OwnProps
 * @property {ButtonVariant} [variant='secondary'] Determinds the `Button` variant to render.
 */

/**
 * @typedef {import('../BaseButton/types').Props & OwnProps} Props
 */

/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<Props, 'button'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function Button(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'Button'),
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      currentColor = _useContextSystem.currentColor,
      icon = _useContextSystem.icon,
      _useContextSystem$isA = _useContextSystem.isActive,
      isActiveProp = _useContextSystem$isA === void 0 ? false : _useContextSystem$isA,
      _useContextSystem$isC = _useContextSystem.isControl,
      isControl = _useContextSystem$isC === void 0 ? false : _useContextSystem$isC,
      _useContextSystem$isS = _useContextSystem.isSubtle,
      isSubtle = _useContextSystem$isS === void 0 ? false : _useContextSystem$isS,
      _useContextSystem$onC = _useContextSystem.onClick,
      onClick = _useContextSystem$onC === void 0 ? noop : _useContextSystem$onC,
      _useContextSystem$siz = _useContextSystem.size,
      size = _useContextSystem$siz === void 0 ? 'medium' : _useContextSystem$siz,
      _useContextSystem$var = _useContextSystem.variant,
      variant = _useContextSystem$var === void 0 ? 'secondary' : _useContextSystem$var,
      otherProps = _objectWithoutProperties(_useContextSystem, ["children", "className", "currentColor", "icon", "isActive", "isControl", "isSubtle", "onClick", "size", "variant"]);

  var _useButtonGroupContex = useButtonGroupContext(),
      buttonGroup = _useButtonGroupContex.buttonGroup,
      enableSelectNone = _useButtonGroupContex.enableSelectNone;

  var isWithinButtonGroup = !!buttonGroup;
  var isButtonGroupActive = isWithinButtonGroup && (buttonGroup == null ? void 0 : buttonGroup.state) === otherProps.value;
  var handleOnClickWithinButtonGroup = React.useCallback(function (event) {
    if (isWithinButtonGroup && enableSelectNone && isButtonGroupActive && buttonGroup) {
      event.preventDefault();
      event.stopPropagation();
      buttonGroup.setState(undefined);
    }
  }, [buttonGroup, enableSelectNone, isButtonGroupActive, isWithinButtonGroup]);
  var handleOnClick = React.useCallback(function (event) {
    onClick(event);
    handleOnClickWithinButtonGroup(event);
  }, [handleOnClickWithinButtonGroup, onClick]);
  var classes = cx(styles.Button, styles[variant], styles[size], isControl && styles.control, isSubtle && styles.subtle, isSubtle && isControl && styles.subtleControl, isButtonGroupActive && styles.subtleControlActive, !!icon && !children && styles.icon, currentColor && styles.currentColor, className);
  return /*#__PURE__*/React.createElement(BaseButton, Object.assign({
    className: classes,
    icon: icon,
    isActive: isActiveProp || isButtonGroupActive,
    onClick: handleOnClick,
    ref: forwardedRef
  }, otherProps), children);
}
/**
 * `Button` is a component used to trigger an action or event, such as submitting a Form, opening a Dialog, canceling an action, or performing a delete operation.
 *
 * @example
 * ```jsx
 * import { Button } from `@wp-g2/components`
 *
 * function Example() {
 *   return <Button variant="secondary">Let It Go</Button>;
 * }
 * ```
 */


var ConnectedButton = contextConnect(Button, 'Button');
export default ConnectedButton;