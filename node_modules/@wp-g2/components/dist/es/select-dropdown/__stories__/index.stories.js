import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { ui } from '@wp-g2/styles';
import React from 'react';
import { Grid } from '../../Grid';
import { Text } from '../../Text';
import { View } from '../../View';
import { SelectDropdown } from '../index';
export default {
  component: SelectDropdown,
  title: 'Components/SelectDropdown'
};
var options = [{
  name: 'Small',
  value: 'small',
  size: 11
}, {
  name: 'Medium',
  value: 'medium',
  size: 15
}, {
  name: 'Large',
  value: 'large',
  size: 21
}];
export var _default = function () {
  var _React$useState = React.useState(options[1]),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      value = _React$useState2[0],
      setValue = _React$useState2[1];

  var handleOnChange = function (next) {
    console.log(next.selectedItem);
    setValue(next.selectedItem);
  };

  var renderItem = React.useCallback(function (_ref) {
    var name = _ref.name,
        size = _ref.size;
    return /*#__PURE__*/React.createElement("div", {
      style: {
        fontSize: size
      }
    }, name);
  }, []);
  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(SelectDropdown, {
    isPreviewable: true,
    onChange: handleOnChange,
    options: options,
    placeholder: "Element",
    renderItem: renderItem,
    value: value
  }), /*#__PURE__*/React.createElement(SelectDropdown, {
    onChange: handleOnChange,
    options: options,
    placeholder: "Element",
    renderItem: renderItem,
    value: value
  })));
};
export var _inlineRendering = function () {
  var _React$useState3 = React.useState(options[1]),
      _React$useState4 = _slicedToArray(_React$useState3, 2),
      value = _React$useState4[0],
      setValue = _React$useState4[1];

  var handleOnChange = function (next) {
    return setValue(next.selectedItem);
  };

  var renderItem = React.useCallback(function (_ref2) {
    var name = _ref2.name,
        size = _ref2.size;
    return /*#__PURE__*/React.createElement("div", {
      style: {
        fontSize: size
      }
    }, name);
  }, []);
  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Text, {
    adjustLineHeightForInnerControls: true,
    size: value.size
  }, "A vacation is when you take a trip to some", ' ', /*#__PURE__*/React.createElement(SelectDropdown, {
    isInline: true,
    onChange: handleOnChange,
    options: options,
    placeholder: "Element",
    renderItem: renderItem,
    value: value
  }), ' ', "place with your. A vacation is when you take a trip to some", ' ', /*#__PURE__*/React.createElement(SelectDropdown, {
    isInline: true,
    onChange: handleOnChange,
    options: options,
    placeholder: "Element",
    renderItem: renderItem,
    value: value
  }), ' ', "place with your."));
};
var presets = [{
  name: '0px',
  value: '0px',
  size: 0
}, {
  name: '4px',
  value: '4px',
  size: 4
}, {
  name: '8px',
  value: '8px',
  size: 8
}, {
  name: '12px',
  value: '12px',
  size: 12
}, {
  name: '16px',
  value: '16px',
  size: 16
}, {
  name: '20px',
  value: '20px',
  size: 20
}];
export var _preview = function () {
  var _React$useState5 = React.useState(presets[2]),
      _React$useState6 = _slicedToArray(_React$useState5, 2),
      value = _React$useState6[0],
      setValue = _React$useState6[1];

  return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(SelectDropdown, {
    isPreviewable: true,
    onChange: function handleOnChange(next) {
      setValue(next.selectedItem);
    },
    options: presets,
    placeholder: "Element",
    value: value
  }), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(View, {
    css: {
      background: 'rgba(0, 0, 255, 0.1)',
      border: '2px solid rgba(0, 0, 255, 0.1)',
      display: 'inline-block'
    },
    style: {
      padding: value == null ? void 0 : value.size
    }
  }, /*#__PURE__*/React.createElement(View, {
    css: [{
      background: 'blue',
      color: 'white',
      width: 50,
      height: 50
    }, ui.alignment.content.center]
  }, value.value))));
};