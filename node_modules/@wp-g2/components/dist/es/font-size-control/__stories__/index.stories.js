import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import React from 'react';
import { Grid } from '../../Grid';
import { FontSizeControl } from '../index';
export default {
  component: FontSizeControl,
  title: 'Components/FontSizeControl'
};
var fontSizes = [{
  name: 'Small',
  slug: 'small',
  size: 12
}, {
  name: 'Normallllllllllllllllllllllll Normalllllllllllllllllll',
  slug: 'normal',
  size: 16
}, {
  name: 'Big',
  slug: 'big',
  size: 26
}];
export var _default = function () {
  var _React$useState = React.useState(undefined),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      value = _React$useState2[0],
      setValue = _React$useState2[1];

  var handleOnChange = function (next) {
    setValue(next);
  };

  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Grid, {
    templateColumns: "260px 260px 1fr"
  }, /*#__PURE__*/React.createElement(FontSizeControl, {
    fontSizes: fontSizes,
    isPreviewable: true,
    onChange: handleOnChange,
    placeholder: "Element",
    value: value,
    withSlider: true
  }), /*#__PURE__*/React.createElement(FontSizeControl, {
    fontSizes: fontSizes,
    onChange: handleOnChange,
    placeholder: "Element",
    value: value
  })));
};
export var _periodicRerender = function () {
  var _React$useState3 = React.useState(0),
      _React$useState4 = _slicedToArray(_React$useState3, 2),
      timer = _React$useState4[0],
      setTimer = _React$useState4[1];

  var _React$useState5 = React.useState(undefined),
      _React$useState6 = _slicedToArray(_React$useState5, 2),
      value = _React$useState6[0],
      setValue = _React$useState6[1];

  React.useEffect(function () {
    var timeout = setTimeout(function () {
      setTimer(timer + 1);
    }, 1000);
    return function () {
      return clearTimeout(timeout);
    };
  }, [timer]);
  var renderItem = React.useCallback(function (_ref) {
    var name = _ref.name,
        size = _ref.size;
    return /*#__PURE__*/React.createElement("div", {
      style: {
        fontSize: size
      }
    }, name);
  }, []);
  return /*#__PURE__*/React.createElement("div", null, timer, /*#__PURE__*/React.createElement(Grid, {
    templateColumns: "260px 260px 1fr"
  }, /*#__PURE__*/React.createElement(FontSizeControl, {
    fontSizes: fontSizes,
    onChange: function handleOnChange(next) {
      console.log('handleOnChange', next, value);
      setValue(next);
    },
    renderItem: renderItem,
    value: value
  })));
};