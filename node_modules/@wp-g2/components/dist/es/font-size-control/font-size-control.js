import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { __ } from '@wordpress/i18n';
import { contextConnect } from '@wp-g2/context';
import React from 'react';
import { View } from '../View';
import { VisuallyHidden } from '../VisuallyHidden';
import { VStack } from '../VStack';
import FontSizeControlSelect from './font-size-control-select';
import FontSizeControlSlider from './font-size-control-slider';
import { useFontSizeControl } from './use-font-size-control';

function FontSizeControl(props, forwardedRef) {
  var _useFontSizeControl = useFontSizeControl(props),
      _useFontSizeControl$c = _useFontSizeControl.customLabel,
      customLabel = _useFontSizeControl$c === void 0 ? __('Custom') : _useFontSizeControl$c,
      disableCustomFontSizes = _useFontSizeControl.disableCustomFontSizes,
      disabled = _useFontSizeControl.disabled,
      label = _useFontSizeControl.label,
      max = _useFontSizeControl.max,
      min = _useFontSizeControl.min,
      options = _useFontSizeControl.options,
      inputValue = _useFontSizeControl.inputValue,
      isDefaultValue = _useFontSizeControl.isDefaultValue,
      value = _useFontSizeControl.value,
      onChange = _useFontSizeControl.onChange,
      onReset = _useFontSizeControl.onReset,
      onInputChange = _useFontSizeControl.onInputChange,
      selectDropdownProps = _useFontSizeControl.selectDropdownProps,
      size = _useFontSizeControl.size,
      withSlider = _useFontSizeControl.withSlider,
      withNumberInput = _useFontSizeControl.withNumberInput,
      withSelect = _useFontSizeControl.withSelect,
      otherProps = _objectWithoutProperties(_useFontSizeControl, ["customLabel", "disableCustomFontSizes", "disabled", "label", "max", "min", "options", "inputValue", "isDefaultValue", "value", "onChange", "onReset", "onInputChange", "selectDropdownProps", "size", "withSlider", "withNumberInput", "withSelect"]);

  if (!options) return null;
  return /*#__PURE__*/React.createElement(View, Object.assign({
    as: "fieldset"
  }, otherProps), /*#__PURE__*/React.createElement(VisuallyHidden, {
    as: "legend"
  }, label), /*#__PURE__*/React.createElement(VStack, {
    spacing: 3
  }, /*#__PURE__*/React.createElement(FontSizeControlSelect, Object.assign({}, selectDropdownProps, {
    customLabel: customLabel,
    disabled: disabled,
    inputValue: inputValue,
    isDefaultValue: isDefaultValue,
    label: label,
    max: max,
    min: min,
    onChange: onChange,
    onInputChange: onInputChange,
    onReset: onReset,
    options: options,
    ref: forwardedRef,
    size: size,
    value: value,
    withNumberInput: withNumberInput,
    withSelect: withSelect
  })), /*#__PURE__*/React.createElement(FontSizeControlSlider, {
    disabled: disabled,
    max: max,
    min: min,
    onChange: onInputChange,
    size: size,
    value: inputValue,
    withSlider: withSlider
  })));
}

export default contextConnect(FontSizeControl, 'FontSizeControl');