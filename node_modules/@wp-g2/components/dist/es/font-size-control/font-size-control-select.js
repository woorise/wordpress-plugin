import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { __ } from '@wordpress/i18n';
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { noop } from '@wp-g2/utils';
import React from 'react';
import { Button } from '../Button';
import { FormGroup } from '../FormGroup';
import { HStack } from '../HStack';
import { SelectDropdown } from '../select-dropdown';
import { TextInput } from '../TextInput';
import { View } from '../View';
import * as styles from './font-size-control-styles';

function FontSizeControlSelect(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'FontSizeControlSelect'),
      customLabel = _useContextSystem.customLabel,
      disabled = _useContextSystem.disabled,
      inputValue = _useContextSystem.inputValue,
      isDefaultValue = _useContextSystem.isDefaultValue,
      label = _useContextSystem.label,
      max = _useContextSystem.max,
      min = _useContextSystem.min,
      _useContextSystem$onC = _useContextSystem.onChange,
      onChange = _useContextSystem$onC === void 0 ? noop : _useContextSystem$onC,
      _useContextSystem$onI = _useContextSystem.onInputChange,
      onInputChange = _useContextSystem$onI === void 0 ? noop : _useContextSystem$onI,
      _useContextSystem$onR = _useContextSystem.onReset,
      onReset = _useContextSystem$onR === void 0 ? noop : _useContextSystem$onR,
      _useContextSystem$opt = _useContextSystem.options,
      options = _useContextSystem$opt === void 0 ? [] : _useContextSystem$opt,
      size = _useContextSystem.size,
      value = _useContextSystem.value,
      withNumberInput = _useContextSystem.withNumberInput,
      withSelect = _useContextSystem.withSelect,
      otherProps = _objectWithoutProperties(_useContextSystem, ["customLabel", "disabled", "inputValue", "isDefaultValue", "label", "max", "min", "onChange", "onInputChange", "onReset", "options", "size", "value", "withNumberInput", "withSelect"]);

  var renderItem = React.useCallback(function (_ref) {
    var name = _ref.name,
        style = _ref.style;
    return /*#__PURE__*/React.createElement("span", {
      style: style
    }, name);
  }, []);
  return /*#__PURE__*/React.createElement(HStack, {
    alignment: "left",
    wrap: true
  }, withSelect && /*#__PURE__*/React.createElement(View, {
    className: styles.SelectDropdownWrapper
  }, /*#__PURE__*/React.createElement(FormGroup, {
    label: label
  }, /*#__PURE__*/React.createElement(SelectDropdown, Object.assign({
    disabled: disabled,
    max: 260,
    onChange: onChange,
    options: options,
    ref: forwardedRef,
    renderItem: renderItem,
    size: size,
    value: value
  }, otherProps)))), withNumberInput && /*#__PURE__*/React.createElement(View, {
    className: styles.NumberInputWrapper
  }, /*#__PURE__*/React.createElement(FormGroup, {
    label: customLabel
  }, /*#__PURE__*/React.createElement(TextInput, {
    disabled: disabled,
    max: max,
    min: min,
    onChange: onInputChange,
    size: size,
    type: "number",
    value: inputValue
  }))), /*#__PURE__*/React.createElement(View, {
    className: styles.ResetButtonWrapper
  }, /*#__PURE__*/React.createElement(Button, {
    disabled: isDefaultValue,
    isBlock: true,
    onClick: onReset
  }, __('Reset'))));
}

export default contextConnect(FontSizeControlSelect, 'FontSizeControlSelect');