import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect } from '@wp-g2/context';
import React from 'react';
import { Flex } from '../Flex';
import { Grid } from '../Grid';
import { useControlGroup } from './useControlGroup';
/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').Props, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function ControlGroup(props, forwardedRef) {
  var _useControlGroup = useControlGroup(props),
      children = _useControlGroup.children,
      _useControlGroup$dire = _useControlGroup.direction,
      direction = _useControlGroup$dire === void 0 ? 'row' : _useControlGroup$dire,
      templateColumns = _useControlGroup.templateColumns,
      otherProps = _objectWithoutProperties(_useControlGroup, ["children", "direction", "templateColumns"]);

  if (!!templateColumns) {
    return /*#__PURE__*/React.createElement(Grid, Object.assign({
      gap: 0,
      templateColumns: templateColumns
    }, otherProps, {
      ref: forwardedRef
    }), children);
  }

  return /*#__PURE__*/React.createElement(Flex, Object.assign({
    direction: direction,
    gap: "-1px"
  }, otherProps, {
    ref: forwardedRef
  }), children);
}
/**
 * `ControlGroup` is a layout component that contains control elements (e.g. `TextInput` or `Select`).
 *
 * @example
 * ```jsx
 * import { Button, ControlGroup, TextInput } from `@wp-g2/components`
 * import { ui } from `@wp-g2/styles`
 *
 * function Example() {
 *   return (
 *     <ControlGroup>
 *       <TextInput placeholder="First name" />
 *       <Button variant="primary" />
 *     </ControlGroup>
 *   );
 * }
 * ```
 */


var ConnectedControlGroup = contextConnect(ControlGroup, 'ControlGroup');
export default ConnectedControlGroup;