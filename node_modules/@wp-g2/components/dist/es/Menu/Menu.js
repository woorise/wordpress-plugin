import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { cx } from '@wp-g2/styles';
import React from 'react';
import { Menu as ReakitMenu } from 'reakit';
import { usePopoverResizeUpdater } from '../Popover/Popover.utils';
import { View } from '../View';
import { MenuContext } from './Menu.Context';
import * as styles from './Menu.styles';
/**
 * `Menu` is an actionable component that displays a list of actions, links, or informative content.
 *
 * @example
 * ```jsx
 * <Menu>
 *  <MenuItem>...</MenuItem>
 *  <MenuItem>...</MenuItem>
 *  <MenuItem>...</MenuItem>
 * </Menu>
 * ```
 *
 * @see https://reakit.io/docs/menu/#menu
 *
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').Props, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function Menu(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'Menu'),
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      menu = _useContextSystem.menu,
      otherProps = _objectWithoutProperties(_useContextSystem, ["children", "className", "menu"]);

  var resizeListener = usePopoverResizeUpdater({
    onResize: menu == null ? void 0 : menu.unstable_update
  });
  var classes = cx(styles.Menu, className);
  var Component = menu ? ReakitMenu : View;
  return /*#__PURE__*/React.createElement(MenuContext.Provider, {
    value: {
      menu: menu
    }
  }, /*#__PURE__*/React.createElement(Component, Object.assign({
    hideOnClickOutside: false
  }, menu || {}, otherProps, {
    className: classes,
    ref: forwardedRef
  }), resizeListener, children));
}
/**
 * `Menu` is an actionable component that displays a list of actions, links, or informative content.
 *
 * @example
 * ```jsx
 * <Menu>
 *  <MenuItem>...</MenuItem>
 *  <MenuItem>...</MenuItem>
 *  <MenuItem>...</MenuItem>
 * </Menu>
 * ```
 *
 * @see https://reakit.io/docs/menu/#menu
 */


var ConnectedMenu = contextConnect(Menu, 'Menu');
export default ConnectedMenu;