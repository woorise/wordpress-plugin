import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { css, cx } from '@wp-g2/styles';
import React from 'react';
import { Text } from '../Text';
import * as styles from './Badge.styles';
import { BADGE_COLORS } from './Badge.utils';
var BadgeView = styles.BadgeView;

function Badge(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'Badge'),
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      _useContextSystem$col = _useContextSystem.color,
      colorProp = _useContextSystem$col === void 0 ? 'standard' : _useContextSystem$col,
      _useContextSystem$dis = _useContextSystem.display,
      display = _useContextSystem$dis === void 0 ? 'inline-flex' : _useContextSystem$dis,
      _useContextSystem$isB = _useContextSystem.isBold,
      isBold = _useContextSystem$isB === void 0 ? false : _useContextSystem$isB,
      _useContextSystem$isR = _useContextSystem.isRounded,
      isRounded = _useContextSystem$isR === void 0 ? false : _useContextSystem$isR,
      _useContextSystem$tru = _useContextSystem.truncate,
      truncate = _useContextSystem$tru === void 0 ? true : _useContextSystem$tru,
      otherProps = _objectWithoutProperties(_useContextSystem, ["children", "className", "color", "display", "isBold", "isRounded", "truncate"]);

  var badgeColor = BADGE_COLORS[colorProp] || BADGE_COLORS.standard;
  var sx = {};
  sx.base = css({
    display: display
  });
  var classes = cx(sx.base, truncate && styles.truncate, styles.getBackground({
    color: badgeColor,
    isBold: isBold
  }), styles.getBackgroundText({
    color: badgeColor,
    isBold: isBold
  }), isRounded && styles.rounded, className);
  return /*#__PURE__*/React.createElement(BadgeView, Object.assign({}, otherProps, {
    className: classes,
    ref: forwardedRef
  }), /*#__PURE__*/React.createElement(Text, {
    className: styles.text,
    color: "currentColor",
    isBlock: true,
    lineHeight: 1,
    size: 10,
    truncate: true,
    upperCase: true,
    weight: 700
  }, children));
}

export default contextConnect(Badge, 'Badge');