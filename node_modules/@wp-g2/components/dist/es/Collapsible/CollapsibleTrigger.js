import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { cx } from '@wp-g2/styles';
import React from 'react';
import { Disclosure } from 'reakit';
import { useCollapsibleContext } from './Collapsible.Context';
import * as styles from './Collapsible.styles';

function CollapsibleTrigger(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'CollapsibleTrigger'),
      className = _useContextSystem.className,
      otherProps = _objectWithoutProperties(_useContextSystem, ["className"]);

  var _useCollapsibleContex = useCollapsibleContext(),
      disclosure = _useCollapsibleContex.disclosure;

  var classes = cx(styles.CollapsibleTrigger, className);
  return /*#__PURE__*/React.createElement(Disclosure, Object.assign({}, otherProps, disclosure, {
    className: classes,
    ref: forwardedRef
  }));
}

export default contextConnect(CollapsibleTrigger, 'CollapsibleTrigger');