import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import { alignCenter, alignLeft, alignRight, formatBold, grid, typography } from '@wordpress/icons';
import { ui } from '@wp-g2/styles';
import React, { useState } from 'react';
import { Animated, AnimatedContainer, Button, Card, CardBody, ColorControl, Container, FormGroup, Grid, Icon, SegmentedControl, Select, Spacer, Stepper, Subheading, Switch, Text, TextField, View, VStack } from '../../index';
import { ListGroup, ListGroupFooter, ListGroupHeader, ListGroups } from '../index';
export default {
  component: ListGroup,
  title: 'Components/ListGroup'
};

var Example = function () {
  var _useState = useState({
    colorText: true,
    colorBackground: true,
    fontFamily: true,
    fontWeight: true,
    fontSize: true,
    alignment: true
  }),
      _useState2 = _slicedToArray(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  var settings = Object.entries(state);

  var toggle = function (k) {
    return setState(function (prev) {
      var _objectSpread2;

      return _objectSpread(_objectSpread({}, prev), {}, (_objectSpread2 = {}, _objectSpread2[k] = !state[k], _objectSpread2));
    });
  };

  var align = [{
    label: /*#__PURE__*/React.createElement(Icon, {
      icon: alignLeft,
      size: 14
    }),
    value: 'left'
  }, {
    label: /*#__PURE__*/React.createElement(Icon, {
      icon: alignCenter,
      size: 14
    }),
    value: 'center'
  }, {
    label: /*#__PURE__*/React.createElement(Icon, {
      icon: alignRight,
      size: 14
    }),
    value: 'right'
  }];
  var alignment = state.alignment,
      colorBackground = state.colorBackground,
      colorText = state.colorText,
      fontFamily = state.fontFamily,
      fontSize = state.fontSize,
      fontWeight = state.fontWeight;
  var hasColor = [colorText, colorBackground].filter(Boolean).length;
  var hasTypography = [fontFamily, fontSize, fontWeight].filter(Boolean).length;
  var hasFormatting = [alignment].filter(Boolean).length;
  return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Container, {
    width: 260
  }, /*#__PURE__*/React.createElement(AnimatedContainer, null, /*#__PURE__*/React.createElement(ListGroups, null, hasColor && /*#__PURE__*/React.createElement(ListGroup, null, /*#__PURE__*/React.createElement(ListGroupHeader, null, "Colors"), /*#__PURE__*/React.createElement(Grid, {
    columns: 2
  }, colorText && /*#__PURE__*/React.createElement(ColorControl, {
    color: "black"
  }, "Text"), colorBackground && /*#__PURE__*/React.createElement(ColorControl, {
    color: "#ddd"
  }, "Background"))), hasTypography && /*#__PURE__*/React.createElement(ListGroup, null, /*#__PURE__*/React.createElement(ListGroupHeader, null, "Typography", /*#__PURE__*/React.createElement(Button, {
    icon: grid,
    size: "small",
    variant: "tertiary"
  })), fontFamily && /*#__PURE__*/React.createElement(Animated, {
    auto: true,
    key: "fontFamily",
    layout: true
  }, /*#__PURE__*/React.createElement(FormGroup, {
    label: "Family"
  }, /*#__PURE__*/React.createElement(Select, null, /*#__PURE__*/React.createElement("option", null, "Barlow")))), /*#__PURE__*/React.createElement(Grid, null, fontWeight && /*#__PURE__*/React.createElement(Animated, {
    auto: true,
    key: "fontWeight",
    layout: true
  }, /*#__PURE__*/React.createElement(Select, {
    prefix: /*#__PURE__*/React.createElement(View, {
      style: {
        width: 24,
        height: 24,
        padding: 4
      }
    }, /*#__PURE__*/React.createElement(Icon, {
      icon: formatBold,
      size: 16
    }))
  }, /*#__PURE__*/React.createElement("option", null, "Normal"))), fontSize && /*#__PURE__*/React.createElement(Animated, {
    auto: true,
    key: "fontSize",
    layout: true
  }, /*#__PURE__*/React.createElement(Select, {
    prefix: /*#__PURE__*/React.createElement(View, {
      style: {
        width: 24,
        height: 24,
        padding: 4
      }
    }, /*#__PURE__*/React.createElement(Icon, {
      icon: typography,
      size: 16
    }))
  }, /*#__PURE__*/React.createElement("option", null, "16px"))))), hasFormatting && /*#__PURE__*/React.createElement(ListGroup, null, /*#__PURE__*/React.createElement(ListGroupHeader, null, "Formatting"), /*#__PURE__*/React.createElement(FormGroup, {
    label: "Alignment"
  }, /*#__PURE__*/React.createElement(SegmentedControl, {
    options: align
  })))))), /*#__PURE__*/React.createElement(Container, {
    width: 260
  }, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(CardBody, null, /*#__PURE__*/React.createElement(ListGroup, null, /*#__PURE__*/React.createElement(ListGroupHeader, null, "Controls"), settings.map(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        k = _ref2[0],
        v = _ref2[1];

    return /*#__PURE__*/React.createElement(FormGroup, {
      key: k,
      label: k,
      templateColumns: "1fr 80px"
    }, /*#__PURE__*/React.createElement(Switch, {
      checked: v,
      onChange: function onChange() {
        return toggle(k);
      }
    }));
  }))))));
};

export var _default = function () {
  return /*#__PURE__*/React.createElement(Example, null);
};