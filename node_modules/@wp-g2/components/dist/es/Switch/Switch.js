import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect } from '@wp-g2/context';
import { ui } from '@wp-g2/styles';
import React from 'react';
import { View } from '../View';
import { VisuallyHidden } from '../VisuallyHidden';
import * as styles from './Switch.styles';
import Backdrop from './SwitchBackdrop';
import Toggle from './SwitchToggle';
import { useSwitch } from './useSwitch';

function Switch(props, forwardedRef) {
  var _useSwitch = useSwitch(props),
      Component = _useSwitch.Component,
      checked = _useSwitch.checked,
      disabled = _useSwitch.disabled,
      error = _useSwitch.error,
      id = _useSwitch.id,
      isFocused = _useSwitch.isFocused,
      label = _useSwitch.label,
      onBlur = _useSwitch.onBlur,
      onChange = _useSwitch.onChange,
      onFocus = _useSwitch.onFocus,
      size = _useSwitch.size,
      type = _useSwitch.type,
      otherProps = _objectWithoutProperties(_useSwitch, ["Component", "checked", "disabled", "error", "id", "isFocused", "label", "onBlur", "onChange", "onFocus", "size", "type"]);

  return /*#__PURE__*/React.createElement(View, Object.assign({
    as: "label"
  }, otherProps, {
    htmlFor: id
  }), /*#__PURE__*/React.createElement(Component, Object.assign({}, otherProps, {
    checked: checked,
    className: styles.inputHidden,
    disabled: disabled,
    id: id,
    onBlur: onBlur,
    onChange: onChange,
    onFocus: onFocus,
    ref: forwardedRef
  }, ui.$('SwitchInput'))), /*#__PURE__*/React.createElement(Backdrop, {
    error: error,
    isFocused: isFocused,
    size: size
  }), /*#__PURE__*/React.createElement(Toggle, {
    size: size
  }), /*#__PURE__*/React.createElement(VisuallyHidden, ui.$('SwitchLabel'), label));
}

export default contextConnect(Switch, 'Switch');