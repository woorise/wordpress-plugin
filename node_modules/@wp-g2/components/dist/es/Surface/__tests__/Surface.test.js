import { render } from '@testing-library/react';
import React from 'react';
import { Surface } from '../index';
describe('props', function () {
  test('should render correctly', function () {
    var _render = render( /*#__PURE__*/React.createElement(Surface, null, "Some people are worth melting for.")),
        container = _render.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render variants', function () {
    var _render2 = render( /*#__PURE__*/React.createElement(Surface, {
      variant: "secondary"
    }, "Some people are worth melting for.")),
        container = _render2.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render borders', function () {
    var _render3 = render( /*#__PURE__*/React.createElement(Surface, {
      border: true
    }, "Some people are worth melting for.")),
        container = _render3.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render borderLeft', function () {
    var _render4 = render( /*#__PURE__*/React.createElement(Surface, {
      borderLeft: true
    }, "Some people are worth melting for.")),
        container = _render4.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render borderRight', function () {
    var _render5 = render( /*#__PURE__*/React.createElement(Surface, {
      borderRight: true
    }, "Some people are worth melting for.")),
        container = _render5.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render borderTop', function () {
    var _render6 = render( /*#__PURE__*/React.createElement(Surface, {
      borderTop: true
    }, "Some people are worth melting for.")),
        container = _render6.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render borderBottom', function () {
    var _render7 = render( /*#__PURE__*/React.createElement(Surface, {
      borderBottom: true
    }, "Some people are worth melting for.")),
        container = _render7.container;

    expect(container.firstChild).toMatchSnapshot();
  });
});