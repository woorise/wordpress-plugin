import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { cx } from '@wp-g2/styles';
import React, { useMemo } from 'react';
import { usePopoverContext } from '../Popover';
import { Scrollable } from '../Scrollable';
import { View } from '../View';
import * as styles from './Card.styles';
/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').CardBodyProps, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function CardBody(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'CardBody'),
      className = _useContextSystem.className,
      _useContextSystem$scr = _useContextSystem.scrollable,
      scrollable = _useContextSystem$scr === void 0 ? true : _useContextSystem$scr,
      otherProps = _objectWithoutProperties(_useContextSystem, ["className", "scrollable"]);

  var _usePopoverContext = usePopoverContext(),
      popover = _usePopoverContext.popover;

  var classes = useMemo(function () {
    return cx(styles.Body, styles.borderRadius, popover && styles.popoverBody, className);
  }, [className, popover]);

  if (scrollable) {
    return /*#__PURE__*/React.createElement(Scrollable, Object.assign({}, otherProps, {
      className: classes,
      ref: forwardedRef
    }));
  }

  return /*#__PURE__*/React.createElement(View, Object.assign({}, otherProps, {
    className: classes,
    ref: forwardedRef
  }));
}
/**
 * `CardBody` is a layout component, rendering the contents of a `Card`.
 * Multiple `CardBody` components can be used within `Card` if needed.
 *
 * @example
 * ```jsx
 * <Card>
 * 	<CardBody>
 * 		...
 * 	</CardBody>
 * </Card>
 * ```
 */


var ConnectedCardBody = contextConnect(CardBody, 'CardBody');
export default ConnectedCardBody;