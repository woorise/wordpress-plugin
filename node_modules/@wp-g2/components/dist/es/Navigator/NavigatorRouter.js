import React, { useEffect } from 'react';
import { useNavigatorHistory } from './Navigator.hooks';
import { MemoryRouter } from './Router';

function NavigatorRouter(_ref) {
  var children = _ref.children,
      initialPath = _ref.initialPath;
  var history = useNavigatorHistory(); // Would only exist if nested within another <Navigator />

  var location = history == null ? void 0 : history.location; // Redirect on load

  useEffect(function () {}); // No parent router

  if (!location) {
    var initialEntry = initialPath ? [initialPath] : undefined;
    return /*#__PURE__*/React.createElement(MemoryRouter, {
      initialEntries: initialEntry
    }, children);
  }

  return children;
}

export default /*#__PURE__*/React.memo(NavigatorRouter);