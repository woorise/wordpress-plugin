import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect } from '@wp-g2/context';
import { css, cx } from '@wp-g2/styles';
import React from 'react';
import { VStack } from '../VStack';
import { ColorPickerContext } from './ColorPicker.Context';
import * as styles from './ColorPicker.styles';
import { ColorPickerElement } from './ColorPickerElement';
import { ColorPickerInputs } from './ColorPickerInputs';
import { ColorPickerSelect } from './ColorPickerSelect';
import { useColorPicker } from './useColorPicker';
var ColorPickerView = styles.ColorPickerView;
/**
 * @typedef {import('./useColorPicker').ColorPickerProps} Props
 */

/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<Props, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function ColorPicker(props, forwardedRef) {
  var _useColorPicker = useColorPicker(props),
      className = _useColorPicker.className,
      store = _useColorPicker.store,
      width = _useColorPicker.width,
      otherProps = _objectWithoutProperties(_useColorPicker, ["className", "store", "width"]);

  var disableAlpha = store.disableAlpha;
  var classes = cx(disableAlpha && styles.disableAlpha, className);
  var vStackClasses = cx(css({
    width: width
  }));
  return /*#__PURE__*/React.createElement(ColorPickerContext.Provider, {
    value: store
  }, /*#__PURE__*/React.createElement(VStack, {
    alignment: "top",
    className: vStackClasses,
    isExpanded: false
  }, /*#__PURE__*/React.createElement(ColorPickerView, Object.assign({}, otherProps, {
    className: classes,
    ref: forwardedRef
  }), /*#__PURE__*/React.createElement(ColorPickerElement, {
    width: width
  })), /*#__PURE__*/React.createElement(VStack, {
    alignment: "top",
    isExpanded: false
  }, /*#__PURE__*/React.createElement(ColorPickerSelect, null), /*#__PURE__*/React.createElement(ColorPickerInputs, null))));
}

export default contextConnect(ColorPicker, 'ColorPicker');