import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { __ } from '@wordpress/i18n';
import { ui } from '@wp-g2/styles';
import React from 'react';
import { FormGroup } from '../FormGroup';
import { Text } from '../Text';
import { TextInput } from '../TextInput';
import { useBaseDragHandlers } from '../TextInput/useTextInputState.utils';
import { useColorPickerContext } from './ColorPicker.Context';
export var ColorInputHex = /*#__PURE__*/React.memo(function (_ref) {
  var _ref$label = _ref.label,
      label = _ref$label === void 0 ? __('Hex') : _ref$label,
      otherProps = _objectWithoutProperties(_ref, ["label"]);

  var store = useColorPickerContext();
  var _ref2 = [store.colorValues.hex(), store.changeValues.hex, store.increment, store.decrement],
      value = _ref2[0],
      setValue = _ref2[1],
      increment = _ref2[2],
      decrement = _ref2[3];
  var dragHandlers = useBaseDragHandlers({
    increment: increment,
    decrement: decrement,
    isTypeNumeric: true,
    dragAxis: 'y'
  });
  var handleOnChange = React.useCallback(function (next) {
    setValue(ui.color(next).toHexString());
  }, [setValue]);
  var handleOnValidate = React.useCallback(function (next) {
    return ui.color(next).isValid();
  }, []);
  return /*#__PURE__*/React.createElement(FormGroup, {
    horizontal: true,
    label: label
  }, /*#__PURE__*/React.createElement(TextInput, Object.assign({}, otherProps, dragHandlers, {
    onChange: handleOnChange,
    prefix: /*#__PURE__*/React.createElement(Text, {
      variant: "muted"
    }, "#"),
    validate: handleOnValidate,
    value: value
  })));
});