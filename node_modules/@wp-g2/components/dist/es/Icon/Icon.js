import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { css, cx } from '@wp-g2/styles';
import React, { useMemo } from 'react';
import { View } from '../View';
import * as styles from './Icon.styles';
/**
 * @typedef Props
 * @property {import('react').CSSProperties['fill']} [fill='currentColor']
 * @property {number} [height]
 * @property {import('react').ReactElement} icon
 * @property {boolean} [inline]
 * @property {number | string} [size=20]
 * @property {keyof styles} [variant]
 * @property {number} [width]
 */

/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<Props, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function Icon(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'Icon'),
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      _useContextSystem$fil = _useContextSystem.fill,
      fill = _useContextSystem$fil === void 0 ? 'currentColor' : _useContextSystem$fil,
      height = _useContextSystem.height,
      icon = _useContextSystem.icon,
      inline = _useContextSystem.inline,
      _useContextSystem$siz = _useContextSystem.size,
      size = _useContextSystem$siz === void 0 ? 20 : _useContextSystem$siz,
      variant = _useContextSystem.variant,
      width = _useContextSystem.width,
      otherProps = _objectWithoutProperties(_useContextSystem, ["children", "className", "fill", "height", "icon", "inline", "size", "variant", "width"]);

  var classes = useMemo(function () {
    var sx = {}; // https://github.com/ItsJonQ/g2/issues/136

    sx.fill = css({
      color: fill,
      fill: 'currentColor'
    });
    sx.size = css({
      height: height || size,
      width: width || size
    });
    return cx(styles.Wrapper, sx.fill, sx.size, inline && styles.inline, variant && styles[variant], className);
  }, [className, fill, height, inline, size, variant, width]);
  if (!icon) return null;
  var IconComponent = /*#__PURE__*/React.cloneElement(icon, {
    height: size,
    ref: forwardedRef,
    size: size,
    width: size
  });
  return /*#__PURE__*/React.createElement(View, Object.assign({}, otherProps, {
    className: classes
  }), IconComponent);
}

export default contextConnect(Icon, 'Icon');