import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { cx } from '@wp-g2/styles';
import React from 'react';
import { CollapsibleContent } from '../Collapsible';
import { usePanelContext } from './Panel.Context';
import * as styles from './Panel.styles';
var PanelBodyView = styles.PanelBodyView;

function PanelBody(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'PanelBody'),
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      otherProps = _objectWithoutProperties(_useContextSystem, ["children", "className"]);

  var _usePanelContext = usePanelContext(),
      collapsible = _usePanelContext.collapsible,
      seamless = _usePanelContext.seamless;

  var classes = cx(seamless && styles.seamless, !collapsible && styles.nonCollapsibleBody, className);

  if (!collapsible) {
    return /*#__PURE__*/React.createElement(PanelBodyView, Object.assign({}, otherProps, {
      className: classes,
      ref: forwardedRef
    }), children);
  }

  return /*#__PURE__*/React.createElement(CollapsibleContent, {
    ref: forwardedRef
  }, /*#__PURE__*/React.createElement(PanelBodyView, Object.assign({}, otherProps, {
    className: classes
  }), children));
}

export default contextConnect(PanelBody, 'PanelBody');