import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { css, cx, ui } from '@wp-g2/styles';
import React from 'react';
import { Icon } from '../Icon';
import { View } from '../View';
import * as styles from './ArrowIndicator.styles';
var ArrowIndicatorView = styles.ArrowIndicatorView;

function ArrowIndicator(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'ArrowIndicator'),
      className = _useContextSystem.className,
      _useContextSystem$dir = _useContextSystem.direction,
      direction = _useContextSystem$dir === void 0 ? 'right' : _useContextSystem$dir,
      height = _useContextSystem.height,
      _useContextSystem$ico = _useContextSystem.iconSize,
      iconSize = _useContextSystem$ico === void 0 ? 5 : _useContextSystem$ico,
      _useContextSystem$siz = _useContextSystem.size,
      size = _useContextSystem$siz === void 0 ? 24 : _useContextSystem$siz,
      width = _useContextSystem.width,
      otherProps = _objectWithoutProperties(_useContextSystem, ["className", "direction", "height", "iconSize", "size", "width"]);

  var rotations = {
    down: 90,
    left: 180,
    right: 0,
    up: 270
  };
  var rotate = rotations[direction] || rotations.right;
  var classes = cx(css({
    height: height || size,
    width: width || size
  }), ui.rotate(rotate), ui.animation.default, className);
  return /*#__PURE__*/React.createElement(ArrowIndicatorView, Object.assign({}, otherProps, {
    className: classes,
    ref: forwardedRef
  }), /*#__PURE__*/React.createElement(View, {
    animate: {
      rotate: rotate
    }
  }, /*#__PURE__*/React.createElement(Icon, {
    icon: /*#__PURE__*/React.createElement("svg", {
      fill: "currentColor",
      height: "24",
      viewBox: "0 0 24 24",
      width: "24",
      xmlns: "http://www.w3.org/2000/svg"
    }, /*#__PURE__*/React.createElement("path", {
      d: "M21 12l-18 12v-24z"
    })),
    size: iconSize
  })));
}

export default contextConnect(ArrowIndicator, 'ArrowIndicator');