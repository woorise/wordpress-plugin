import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { alignCenter, alignJustify, alignLeft, alignRight } from '@wordpress/icons';
import React from 'react';
import { Icon, Spacer, View } from '../../index';
import { SegmentedControl } from '../index';
export default {
  component: SegmentedControl,
  title: 'Components/SegmentedControl'
};
var align = [{
  label: /*#__PURE__*/React.createElement(Icon, {
    icon: alignLeft,
    size: 14
  }),
  value: 'left'
}, {
  label: /*#__PURE__*/React.createElement(Icon, {
    icon: alignCenter,
    size: 14
  }),
  value: 'center'
}, {
  label: /*#__PURE__*/React.createElement(Icon, {
    icon: alignRight,
    size: 14
  }),
  value: 'right'
}, {
  label: /*#__PURE__*/React.createElement(Icon, {
    icon: alignJustify,
    size: 14
  }),
  value: 'justify'
}];
export var _default = function () {
  var _React$useState = React.useState(align[0].value),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      alignState = _React$useState2[0],
      setAlignState = _React$useState2[1];

  return /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Spacer, {
    css: {
      width: [null, 300]
    }
  }, /*#__PURE__*/React.createElement(SegmentedControl, {
    isBlock: true,
    onChange: setAlignState,
    options: align,
    value: alignState
  })), /*#__PURE__*/React.createElement(Spacer, {
    css: {
      width: [null, 300]
    }
  }, /*#__PURE__*/React.createElement(SegmentedControl, {
    isBlock: true,
    onChange: setAlignState,
    options: align,
    value: alignState
  })), /*#__PURE__*/React.createElement(Spacer, null, /*#__PURE__*/React.createElement(SegmentedControl, {
    options: [{
      label: 'Horizontal',
      value: 'horizontal'
    }, {
      label: 'Vertical',
      value: 'vertical'
    }]
  })), /*#__PURE__*/React.createElement(Spacer, null, /*#__PURE__*/React.createElement(SegmentedControl, {
    isAdaptiveWidth: true,
    options: [{
      label: 'Short',
      value: 'short'
    }, {
      label: 'Looooooooooooong',
      value: 'long'
    }]
  })));
};