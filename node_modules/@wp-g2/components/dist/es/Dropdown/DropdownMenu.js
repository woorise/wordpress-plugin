import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { css, cx } from '@wp-g2/styles';
import React from 'react';
import { Menu } from '../Menu';
import { useDropdownContext } from './Dropdown.Context';
import * as styles from './Dropdown.styles';
import DropdownMenuCard from './DropdownMenuCard';
/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').DropdownMenuProps, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function DropdownMenu(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'DropdownMenu'),
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      _useContextSystem$ele = _useContextSystem.elevation,
      elevation = _useContextSystem$ele === void 0 ? 3 : _useContextSystem$ele,
      _useContextSystem$hid = _useContextSystem.hideOnClickOutside,
      hideOnClickOutside = _useContextSystem$hid === void 0 ? true : _useContextSystem$hid,
      maxWidth = _useContextSystem.maxWidth,
      _useContextSystem$min = _useContextSystem.minWidth,
      minWidth = _useContextSystem$min === void 0 ? 200 : _useContextSystem$min,
      otherProps = _objectWithoutProperties(_useContextSystem, ["children", "className", "elevation", "hideOnClickOutside", "maxWidth", "minWidth"]);

  var _useDropdownContext = useDropdownContext(),
      label = _useDropdownContext.label,
      menu = _useDropdownContext.menu;

  var classes = React.useMemo(function () {
    return cx(styles.DropdownMenu, css({
      maxWidth: maxWidth,
      minWidth: minWidth
    }), className);
  }, [maxWidth, minWidth, className]);
  return /*#__PURE__*/React.createElement(Menu, Object.assign({
    "aria-label": label
  }, otherProps, {
    className: classes,
    hideOnClickOutside: hideOnClickOutside,
    menu: menu,
    ref: forwardedRef
  }), ((menu == null ? void 0 : menu.visible) || (menu == null ? void 0 : menu.animating)) && /*#__PURE__*/React.createElement(DropdownMenuCard, {
    elevation: elevation
  }, children));
}
/**
 * `DropdownMenu` is an actionable component that contains actions (`DropdownMenuItem`) within a `Dropdown`.
 *
 * @example
 * ```jsx
 * <Dropdown>
 *  <DropdownTrigger>Edit</DropdownTrigger>
 *  <DropdownMenu>
 *    <DropdownMenuItem>...</DropdownMenuItem>
 *    <DropdownMenuItem>...</DropdownMenuItem>
 *    <DropdownMenuItem>...</DropdownMenuItem>
 *  </DropdownMenu>
 * </Dropdown>
 * ```
 *
 * @see https://reakit.io/docs/menu/#menu
 */


var ConnectedDropdownMenu = contextConnect(DropdownMenu, 'DropdownMenu');
export default ConnectedDropdownMenu;