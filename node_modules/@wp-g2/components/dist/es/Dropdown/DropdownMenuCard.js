import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect, ContextSystemProvider, useContextSystem } from '@wp-g2/context';
import { cx } from '@wp-g2/styles';
import React from 'react';
import { Card } from '../Card';
import { Scrollable } from '../Scrollable';
import * as styles from './Dropdown.styles';
/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('../Card/types').CardProps, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function DropdownMenuCard(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'DropdownMenuCard'),
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      _useContextSystem$ele = _useContextSystem.elevation,
      elevation = _useContextSystem$ele === void 0 ? 3 : _useContextSystem$ele,
      otherProps = _objectWithoutProperties(_useContextSystem, ["children", "className", "elevation"]);

  var classes = cx(styles.Card, className);
  return /*#__PURE__*/React.createElement(Card, Object.assign({
    className: classes,
    elevation: elevation
  }, otherProps, {
    ref: forwardedRef
  }), /*#__PURE__*/React.createElement(Scrollable, {
    className: styles.Scrollable
  }, /*#__PURE__*/React.createElement(ContextSystemProvider, {
    value: {
      MenuItem: {
        isOffset: false
      }
    }
  }, children)));
}

export default contextConnect(DropdownMenuCard, 'DropdownMenuCard');