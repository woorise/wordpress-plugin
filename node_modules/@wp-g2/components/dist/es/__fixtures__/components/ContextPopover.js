import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import React, { useLayoutEffect, useRef, useState } from 'react';
import { CardBody, CardHeader, Popover, Text, View } from '../../index';
export var ContextPopover = function (_ref) {
  var children = _ref.children,
      title = _ref.title,
      trigger = _ref.trigger;

  var _useState = useState(0),
      _useState2 = _slicedToArray(_useState, 2),
      offset = _useState2[0],
      setOffset = _useState2[1];

  var triggerRef = useRef();
  useLayoutEffect(function () {
    requestAnimationFrame(function () {
      var node = triggerRef.current;

      if (node) {
        setOffset(node.offsetLeft);
      }
    });
  }, []);
  return /*#__PURE__*/React.createElement(Popover, {
    maxWidth: 280,
    placement: "right-start",
    style: {
      right: offset
    },
    trigger: /*#__PURE__*/React.createElement(View, {
      css: {
        outline: 'none'
      },
      ref: triggerRef
    }, trigger),
    unstable_offset: [0, 12]
  }, /*#__PURE__*/React.createElement(CardHeader, null, /*#__PURE__*/React.createElement(Text, {
    weight: 600
  }, title)), /*#__PURE__*/React.createElement(CardBody, null, children));
};