import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { contextConnect, useContextSystem } from '@wp-g2/context';
import React from 'react';
import { FormGroupContent, FormGroupContext, useFormGroup } from '../FormGroup';
import { Grid } from '../Grid';
import { View } from '../View';

function BaseChoice(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'BaseChoice'),
      children = _useContextSystem.children,
      gap = _useContextSystem.gap,
      help = _useContextSystem.help,
      label = _useContextSystem.label,
      labelHidden = _useContextSystem.labelHidden,
      _useContextSystem$spa = _useContextSystem.spacing,
      spacing = _useContextSystem$spa === void 0 ? 1 : _useContextSystem$spa,
      _useContextSystem$tem = _useContextSystem.templateColumns,
      templateColumns = _useContextSystem$tem === void 0 ? 'auto 1fr' : _useContextSystem$tem,
      _useContextSystem$tru = _useContextSystem.truncate,
      truncate = _useContextSystem$tru === void 0 ? true : _useContextSystem$tru,
      otherProps = _objectWithoutProperties(_useContextSystem, ["children", "gap", "help", "label", "labelHidden", "spacing", "templateColumns", "truncate"]);

  var _useFormGroup = useFormGroup(otherProps),
      id = _useFormGroup.contentProps.id;

  var contextProps = React.useMemo(function () {
    return {
      id: id,
      horizontal: true
    };
  }, [id]);
  if (!label) return children;
  return /*#__PURE__*/React.createElement(Grid, Object.assign({
    gap: gap,
    templateColumns: templateColumns
  }, otherProps, {
    ref: forwardedRef
  }), /*#__PURE__*/React.createElement(FormGroupContext.Provider, {
    value: contextProps
  }, children, /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(FormGroupContent, {
    id: id,
    help: help,
    label: label,
    labelHidden: labelHidden,
    spacing: spacing,
    truncate: truncate
  }))));
}

export default contextConnect(BaseChoice, 'BaseChoice');