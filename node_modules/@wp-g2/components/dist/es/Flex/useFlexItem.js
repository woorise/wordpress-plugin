import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import { useContextSystem } from '@wp-g2/context';
import { css, cx, ui } from '@wp-g2/styles';
import * as styles from './Flex.styles';
/**
 * @typedef FlexItemProps
 * @property {import('react').CSSProperties['display']} display
 * @property {boolean} [isBlock=false]
 */

/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<FlexItemProps, 'div'>} props
 */

export function useFlexItem(props) {
  var _useContextSystem = useContextSystem(props, 'FlexItem'),
      className = _useContextSystem.className,
      displayProp = _useContextSystem.display,
      _useContextSystem$isB = _useContextSystem.isBlock,
      isBlock = _useContextSystem$isB === void 0 ? false : _useContextSystem$isB,
      otherProps = _objectWithoutProperties(_useContextSystem, ["className", "display", "isBlock"]);

  var sx = {};
  sx.Base = css({
    display: displayProp || ui.get('FlexItemDisplay') // marginBottom: ui.get('FlexItemMarginBottom'),
    // marginLeft: ui.get('FlexItemMarginLeft'),
    // marginRight: ui.get('FlexItemMarginRight'),

  });
  var classes = cx(styles.Item, sx.Base, isBlock && styles.block, className);
  return _objectSpread(_objectSpread({}, otherProps), {}, {
    className: classes
  });
}