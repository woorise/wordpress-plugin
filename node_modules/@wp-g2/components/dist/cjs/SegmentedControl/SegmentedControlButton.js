"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _styles = require("@wp-g2/styles");

var _react = _interopRequireDefault(require("react"));

var _reakit = require("reakit");

var styles = _interopRequireWildcard(require("./SegmentedControl.styles"));

var ButtonContentView = styles.ButtonContentView,
    ButtonView = styles.ButtonView,
    LabelPlaceholderView = styles.LabelPlaceholderView,
    LabelView = styles.LabelView,
    SeparatorView = styles.SeparatorView;

function SegmentedControlButton(_ref) {
  var className = _ref.className,
      forwardedRef = _ref.forwardedRef,
      _ref$isBlock = _ref.isBlock,
      isBlock = _ref$isBlock === void 0 ? false : _ref$isBlock,
      label = _ref.label,
      showSeparator = _ref.showSeparator,
      value = _ref.value,
      props = (0, _objectWithoutProperties2.default)(_ref, ["className", "forwardedRef", "isBlock", "label", "showSeparator", "value"]);
  var isActive = props.state === value;
  var labelViewClasses = (0, _styles.cx)(isBlock && styles.labelBlock);
  var classes = (0, _styles.cx)(isActive && styles.buttonActive, className);
  return /*#__PURE__*/_react.default.createElement(LabelView, Object.assign({
    className: labelViewClasses,
    "data-active": isActive
  }, _styles.ui.$('SegmentedControlButtonLabel')), /*#__PURE__*/_react.default.createElement(_reakit.Radio, Object.assign({}, props, {
    as: ButtonView,
    className: classes,
    "data-value": value,
    ref: forwardedRef,
    value: value
  }), /*#__PURE__*/_react.default.createElement(ButtonContentView, _styles.ui.$('SegmentedControlButtonContent'), label), /*#__PURE__*/_react.default.createElement(LabelPlaceholderView, Object.assign({
    "aria-hidden": true
  }, _styles.ui.$('SegmentedControlButtonContentPlaceholder')), label)), /*#__PURE__*/_react.default.createElement(SegmentedControlSeparator, {
    isActive: !showSeparator
  }));
}

var SegmentedControlSeparator = /*#__PURE__*/_react.default.memo(function (_ref2) {
  var isActive = _ref2.isActive;
  var classes = (0, _styles.cx)(isActive && styles.separatorActive);
  return /*#__PURE__*/_react.default.createElement(SeparatorView, Object.assign({
    "aria-hidden": true,
    className: classes
  }, _styles.ui.$('SegmentedControlButtonSeparator')));
});

var _default = /*#__PURE__*/_react.default.memo(SegmentedControlButton);

exports.default = _default;