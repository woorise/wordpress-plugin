"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = require("@testing-library/react");

var _context = require("@wp-g2/context");

var _react2 = _interopRequireDefault(require("react"));

var Components = _interopRequireWildcard(require("../index"));

var _Object$keys = Object.keys((0, _context.ns)()),
    _Object$keys2 = (0, _slicedToArray2.default)(_Object$keys, 1),
    NAMESPACE = _Object$keys2[0];

var excludeList = ['Accordion', 'Alerts', 'Collapsible', 'CollapsibleContent', 'CollapsibleTrigger', 'ColorField', 'ColorPicker', 'ColorSwatch', 'MediaQuery', 'NavigationStack', 'NavigationStackNext', 'NavigationStackPrevious', 'NavigationStackScreen', 'NavigationStackScreens', 'Navigator', 'NavigatorBack', 'NavigatorLink', 'NavigatorRouter', 'NavigatorScreen', 'NavigatorScreens', 'NavigatorSwitch', 'Panel', 'PanelBody', 'PanelHeader', 'Portal', 'Sortable', 'UnitInput'];
var TestableComponents = Object.entries(Components).filter(function (_ref) {
  var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
      key = _ref2[0],
      value = _ref2[1];

  // A quick test to see if the value is a React component.
  return value.$$typeof && value.__contextSystemKey__ && !key.includes('Context') && !excludeList.includes(key);
});
describe('props', function () {
  test.each(TestableComponents)("should render %s", function (name, Component) {
    var _render = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(Component, {
      id: name
    })),
        container = _render.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test.each(TestableComponents)("should render %s with css prop", function (name, Component) {
    var _render2 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_react2.default.Fragment, null, /*#__PURE__*/_react2.default.createElement(Component, {
      id: name
    }), /*#__PURE__*/_react2.default.createElement(Component, {
      css: ["\n\t\t\t\t\t\t\tbackground: red;\n\t\t\t\t\t\t", {
        padding: 27
      }],
      id: name
    }))),
        container = _render2.container;

    var _container$querySelec = container.querySelectorAll("[" + NAMESPACE + "=\"" + name + "\"]"),
        _container$querySelec2 = (0, _slicedToArray2.default)(_container$querySelec, 2),
        first = _container$querySelec2[0],
        second = _container$querySelec2[1];
    /**
     * Skipping these components since their css/classNames not used
     * on the targeted namespaced node.
     */


    var shouldSkip = ['SearchInput', 'UnitInput', 'Select', 'Switch', 'TextInput'].includes(name);

    if (!shouldSkip && second) {
      var firstClasses = first.classList.toString();
      var secondClasses = second.classList.toString();
      expect(firstClasses).not.toEqual(secondClasses);
      expect(first).toMatchSnapshot();
      expect(second).toMatchSnapshot();
    }
  });
});