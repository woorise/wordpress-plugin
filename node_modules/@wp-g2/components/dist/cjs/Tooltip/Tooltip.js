"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _utils = require("@wp-g2/utils");

var _react = _interopRequireDefault(require("react"));

var _reakit = require("reakit");

var _Tooltip = require("./Tooltip.Context");

var _TooltipContent = _interopRequireDefault(require("./TooltipContent"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function Tooltip(props, forwardedRef) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'Tooltip'),
      _useContextSystem$ani = _useContextSystem.animated,
      animated = _useContextSystem$ani === void 0 ? true : _useContextSystem$ani,
      _useContextSystem$ani2 = _useContextSystem.animationDuration,
      animationDuration = _useContextSystem$ani2 === void 0 ? 160 : _useContextSystem$ani2,
      baseId = _useContextSystem.baseId,
      children = _useContextSystem.children,
      content = _useContextSystem.content,
      _useContextSystem$foc = _useContextSystem.focusable,
      focusable = _useContextSystem$foc === void 0 ? true : _useContextSystem$foc,
      _useContextSystem$gut = _useContextSystem.gutter,
      gutter = _useContextSystem$gut === void 0 ? 4 : _useContextSystem$gut,
      id = _useContextSystem.id,
      _useContextSystem$mod = _useContextSystem.modal,
      modal = _useContextSystem$mod === void 0 ? true : _useContextSystem$mod,
      placement = _useContextSystem.placement,
      _useContextSystem$vis = _useContextSystem.visible,
      visible = _useContextSystem$vis === void 0 ? false : _useContextSystem$vis,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["animated", "animationDuration", "baseId", "children", "content", "focusable", "gutter", "id", "modal", "placement", "visible"]);

  var tooltip = (0, _reakit.useTooltipState)(_objectSpread({
    animated: animated ? animationDuration : undefined,
    baseId: baseId || id,
    gutter: gutter,
    placement: placement,
    unstable_portal: modal,
    visible: visible
  }, otherProps));

  var contextProps = _react.default.useMemo(function () {
    return {
      tooltip: tooltip
    };
  }, [tooltip]);

  var childRef = children == null ? void 0 : children.ref;

  var refs = _react.default.useMemo(function () {
    return (0, _utils.mergeRefs)([forwardedRef, childRef]);
  }, [childRef, forwardedRef]);

  return /*#__PURE__*/_react.default.createElement(_Tooltip.TooltipContext.Provider, {
    value: contextProps
  }, content && /*#__PURE__*/_react.default.createElement(_TooltipContent.default, null, content), children && /*#__PURE__*/_react.default.createElement(_reakit.TooltipReference, Object.assign({}, tooltip, children.props, {
    ref: refs
  }), function (referenceProps) {
    if (!focusable) {
      referenceProps.tabIndex = undefined;
    }

    return /*#__PURE__*/_react.default.cloneElement(children, referenceProps);
  }));
}

var _default = (0, _context.contextConnect)(Tooltip, 'Tooltip');

exports.default = _default;