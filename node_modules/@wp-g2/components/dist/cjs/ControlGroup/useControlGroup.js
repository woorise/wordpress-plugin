"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useControlGroup = useControlGroup;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var _utils = require("@wp-g2/utils");

var _react = _interopRequireDefault(require("react"));

var _ControlGroup = require("./ControlGroup.Context");

var styles = _interopRequireWildcard(require("./ControlGroup.styles"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').Props, 'div'>} props
 */
function useControlGroup(props) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'ControlGroup'),
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      _useContextSystem$dir = _useContextSystem.direction,
      direction = _useContextSystem$dir === void 0 ? 'row' : _useContextSystem$dir,
      templateColumns = _useContextSystem.templateColumns,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["children", "className", "direction", "templateColumns"]);

  var validChildren = (0, _utils.getValidChildren)(children);
  var isVertical = direction === 'column';
  var classes = (0, _styles.cx)(styles.itemFocus, !!templateColumns && styles.itemGrid, className);
  var clonedChildren = validChildren && validChildren.map(function (child, index) {
    var isFirst = index === 0;
    var isLast = index + 1 === validChildren.length;
    var isMiddle = !isFirst && !isLast; // @ts-ignore

    var _key = (child == null ? void 0 : child.key) || index;

    var contextStyles = (0, _styles.cx)(isFirst ? isVertical ? styles.firstRow : styles.first : undefined, isMiddle && styles.middle, isLast ? isVertical ? styles.lastRow : styles.last : undefined);
    return /*#__PURE__*/_react.default.createElement(_ControlGroup.ControlGroupContext.Provider, {
      key: _key,
      value: {
        isFirst: isFirst,
        isLast: isLast,
        isMiddle: isMiddle,
        isOnly: isFirst && isLast,
        isVertical: isVertical,
        styles: contextStyles
      }
    }, child);
  });
  return _objectSpread(_objectSpread({}, otherProps), {}, {
    children: clonedChildren,
    className: classes,
    direction: direction,
    templateColumns: templateColumns
  });
}