"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _icons = require("@wordpress/icons");

var _styles = require("@wp-g2/styles");

var _lodash = require("lodash");

var _react = _interopRequireWildcard(require("react"));

var _HStack = require("../HStack");

var _Icon = require("../Icon");

var _View = require("../View");

var styles = _interopRequireWildcard(require("./TextInput.styles"));

/**
 * @typedef Props
 * @property {import('./useTextInputState').TextInputState} __store
 * @property {boolean} disabled
 * @property {(int: number) => void} decrement
 * @property {(int: number) => void} increment
 */

/**
 *
 * @param {Props} props
 * @param {import('react').Ref<any>} forwardedRef
 */
function TextInputSteppers(props, forwardedRef) {
  var decrement = props.decrement,
      disabled = props.disabled,
      dragHandlersRef = props.dragHandlersRef,
      increment = props.increment;
  var dragHandlers = dragHandlersRef.current;
  return /*#__PURE__*/_react.default.createElement(_View.View, {
    className: styles.SpinnerWrapper
  }, /*#__PURE__*/_react.default.createElement(_HStack.HStack, Object.assign({}, dragHandlers, {
    className: styles.Steppers,
    expanded: true,
    spacing: 0
  }, _styles.ui.$('TextInputArrows'), {
    ref: forwardedRef
  }), /*#__PURE__*/_react.default.createElement(UpDownArrows, {
    disabled: disabled,
    onDecrement: decrement,
    onIncrement: increment
  })));
}
/**
 *
 * @param {object} props
 * @param {boolean} props.disabled
 * @param {(event?: import('react').KeyboardEvent) => void} props.onIncrement
 * @param {(event?: import('react').KeyboardEvent) => void} props.onDecrement
 */


var _UpDownArrows = function (_ref) {
  var disabled = _ref.disabled,
      _ref$onIncrement = _ref.onIncrement,
      onIncrement = _ref$onIncrement === void 0 ? _lodash.noop : _ref$onIncrement,
      _ref$onDecrement = _ref.onDecrement,
      onDecrement = _ref$onDecrement === void 0 ? _lodash.noop : _ref$onDecrement;

  /** @type {import('react').MutableRefObject<number | undefined>} */
  var timeoutRef = (0, _react.useRef)();
  var timeoutDurationStart = 500;
  var timeoutDurationEnd = 20;
  var timeoutDurationRef = (0, _react.useRef)(timeoutDurationStart);
  var handleOnClearTimers = (0, _react.useCallback)(function () {
    if (timeoutRef.current) {
      clearTimeout(timeoutRef.current);
    }

    timeoutDurationRef.current = timeoutDurationStart;
  }, []);
  var handleOnMouseDownIncrement = (0, _react.useCallback)(function (event) {
    if (event) {
      event.preventDefault();
    }

    timeoutRef.current = setTimeout(function () {
      onIncrement();
      timeoutDurationRef.current = (0, _lodash.clamp)(timeoutDurationRef.current / 2, timeoutDurationEnd, timeoutDurationStart);
      handleOnMouseDownIncrement();
    }, timeoutDurationRef.current);
  }, [onIncrement]);
  var handleOnMouseDownDecrement = (0, _react.useCallback)(function (event) {
    if (event) {
      event.preventDefault();
    }

    timeoutRef.current = setTimeout(function () {
      onDecrement();
      timeoutDurationRef.current = (0, _lodash.clamp)(timeoutDurationRef.current / 2, timeoutDurationEnd, timeoutDurationStart);
      handleOnMouseDownDecrement();
    }, timeoutDurationRef.current);
  }, [onDecrement]);
  var handleOnIncrement = (0, _react.useCallback)(function (event) {
    event.stopPropagation();
    onIncrement();
  }, [onIncrement]);
  var handleOnDecrement = (0, _react.useCallback)(function (event) {
    event.stopPropagation();
    onDecrement();
  }, [onDecrement]);
  (0, _react.useEffect)(function () {
    return function () {
      return handleOnClearTimers();
    };
  }, [handleOnClearTimers]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Icon.Icon, Object.assign({
    as: "button",
    className: styles.SteppersUp,
    disabled: disabled,
    onClick: handleOnIncrement,
    onMouseDown: handleOnMouseDownIncrement,
    onMouseLeave: handleOnClearTimers,
    onMouseUp: handleOnClearTimers
  }, _styles.ui.$('TextInputStepperUp'), {
    height: "calc(100% - 4px)",
    icon: _icons.plus,
    size: 12,
    width: 20
  })), /*#__PURE__*/_react.default.createElement(_Icon.Icon, Object.assign({
    as: "button",
    className: styles.SteppersDown,
    disabled: disabled,
    onClick: handleOnDecrement,
    onMouseDown: handleOnMouseDownDecrement,
    onMouseLeave: handleOnClearTimers,
    onMouseUp: handleOnClearTimers
  }, _styles.ui.$('TextInputStepperDown'), {
    height: "calc(100% - 4px)",
    icon: _icons.minus,
    size: 12,
    width: 20
  })));
};

var UpDownArrows = /*#__PURE__*/_react.default.memo(_UpDownArrows);

var _default = /*#__PURE__*/_react.default.memo( /*#__PURE__*/_react.default.forwardRef(TextInputSteppers));

exports.default = _default;