"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var _utils = require("@wp-g2/utils");

var _react = _interopRequireDefault(require("react"));

var _View = require("../View");

var _TextInputArrows = _interopRequireDefault(require("./TextInputArrows"));

var _TextInputSteppers = _interopRequireDefault(require("./TextInputSteppers"));

var _useTextInput2 = require("./useTextInput");

/**
 *
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').Props, 'input'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */
function TextInput(props, forwardedRef) {
  var _useTextInput = (0, _useTextInput2.useTextInput)(props),
      __store = _useTextInput.__store,
      arrows = _useTextInput.arrows,
      decrement = _useTextInput.decrement,
      disabled = _useTextInput.disabled,
      dragHandlersRef = _useTextInput.dragHandlersRef,
      increment = _useTextInput.increment,
      inputProps = _useTextInput.inputProps,
      inputRef = _useTextInput.inputRef,
      isTypeNumeric = _useTextInput.isTypeNumeric,
      prefix = _useTextInput.prefix,
      suffix = _useTextInput.suffix,
      otherProps = (0, _objectWithoutProperties2.default)(_useTextInput, ["__store", "arrows", "decrement", "disabled", "dragHandlersRef", "increment", "inputProps", "inputRef", "isTypeNumeric", "prefix", "suffix"]);

  return /*#__PURE__*/_react.default.createElement(_View.View, Object.assign({}, otherProps, {
    disabled: disabled
  }, _styles.ui.$('TextInputWrapper')), prefix, /*#__PURE__*/_react.default.createElement(_View.View, Object.assign({}, _styles.ui.$('TextInput'), {
    autoComplete: "off",
    spellCheck: false
  }, inputProps, {
    disabled: disabled,
    ref: (0, _utils.mergeRefs)([inputRef, forwardedRef])
  })), suffix, arrows === true && isTypeNumeric && /*#__PURE__*/_react.default.createElement(_TextInputArrows.default, {
    decrement: decrement,
    dragHandlersRef: dragHandlersRef,
    increment: increment
  }), arrows === 'stepper' && isTypeNumeric && /*#__PURE__*/_react.default.createElement(_TextInputSteppers.default, {
    decrement: decrement,
    disabled: !!disabled,
    dragHandlersRef: dragHandlersRef,
    increment: increment
  }));
}
/**
 * `TextInput` is a form component that users can enter content into.
 *
 * @example
 * ```jsx
 * import { TextInput } from `@wp-g2/components`
 *
 * function Example() {
 *   return <TextInput placeholder="First name" />
 * }
 * ```
 */


var ConnectedTextInput = (0, _context.contextConnect)(TextInput, 'TextInput');
var _default = ConnectedTextInput;
exports.default = _default;