"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DragBuilder = exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _icons = require("@wordpress/icons");

var _icons2 = require("@wp-g2/icons");

var _protokit = require("@wp-g2/protokit");

var _styles = require("@wp-g2/styles");

var _faker = _interopRequireDefault(require("faker"));

var _fakerSchema = require("faker-schema");

var _react = _interopRequireWildcard(require("react"));

var _reactBeautifulDnd = require("react-beautiful-dnd");

var _index = require("../../index");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var _default = {
  title: 'Components/Draggable'
};
exports.default = _default;
var buttonSchema = new _fakerSchema.Schema(function () {
  return {
    content: 'Button',
    id: _faker.default.random.uuid(),
    name: 'Button',
    type: 'button'
  };
});
var headingSchema = new _fakerSchema.Schema(function () {
  return {
    content: _faker.default.lorem.sentence(),
    id: _faker.default.random.uuid(),
    name: 'Heading',
    type: 'heading'
  };
});
var paragraphSchema = new _fakerSchema.Schema(function () {
  return {
    content: _faker.default.lorem.paragraphs(),
    id: _faker.default.random.uuid(),
    name: 'Paragraph',
    type: 'paragraph'
  };
});
var imageSchema = new _fakerSchema.Schema(function () {
  return {
    id: _faker.default.random.uuid(),
    name: 'Image',
    type: 'image'
  };
});
var initialBlockList = [buttonSchema.makeOne(), headingSchema.makeOne(), imageSchema.makeOne(), paragraphSchema.makeOne()];
var initialContentList = [imageSchema.makeOne()].concat(paragraphSchema.make(2));

var createNewContentBlock = function (type) {
  if (type === 'paragraph') {
    return _objectSpread({}, paragraphSchema.makeOne());
  }

  if (type === 'heading') {
    return _objectSpread({}, headingSchema.makeOne());
  }

  if (type === 'image') {
    return _objectSpread({}, imageSchema.makeOne());
  }

  if (type === 'button') {
    return _objectSpread({}, buttonSchema.makeOne());
  }
};

var blockIcon = {
  button: /*#__PURE__*/_react.default.createElement(_icons2.FiBox, null),
  heading: /*#__PURE__*/_react.default.createElement(_icons2.FiBold, null),
  image: /*#__PURE__*/_react.default.createElement(_icons2.FiImage, null),
  paragraph: /*#__PURE__*/_react.default.createElement(_icons2.FiType, null)
};

var BlockListCard = function (_ref) {
  var name = _ref.name,
      type = _ref.type;
  var icon = blockIcon[type];
  return /*#__PURE__*/_react.default.createElement(_index.Card, null, /*#__PURE__*/_react.default.createElement(_index.CardBody, null, /*#__PURE__*/_react.default.createElement(_index.HStack, {
    alignment: "left",
    spacing: 3
  }, icon && /*#__PURE__*/_react.default.createElement(_index.Icon, {
    icon: icon
  }), /*#__PURE__*/_react.default.createElement(_index.Text, null, name))));
};

function getStyle(style, snapshot) {
  if (!snapshot.isDragging) return {};

  if (!snapshot.isDropAnimating) {
    return style;
  }

  return _objectSpread(_objectSpread({}, style), {}, {
    // cannot be 0, but make it super tiny
    transitionDuration: "0.001s"
  });
}

var ExampleBlock = function (_ref2) {
  var content = _ref2.content,
      type = _ref2.type;

  if (type === 'button') {
    return /*#__PURE__*/_react.default.createElement(_index.View, {
      css: {
        marginBottom: '1.5em'
      }
    }, /*#__PURE__*/_react.default.createElement(_index.Button, {
      variant: "primary"
    }, "Button"));
  }

  if (type === 'heading') {
    return /*#__PURE__*/_react.default.createElement(_index.View, {
      css: {
        marginBottom: '1.5em'
      }
    }, /*#__PURE__*/_react.default.createElement(_index.Heading, {
      size: 2
    }, content));
  }

  if (type === 'paragraph') {
    return /*#__PURE__*/_react.default.createElement(_index.View, {
      css: {
        marginBottom: '1.5em'
      }
    }, /*#__PURE__*/_react.default.createElement(_index.Text, null, content));
  }

  if (type === 'image') {
    return /*#__PURE__*/_react.default.createElement(_index.View, {
      css: {
        marginBottom: '1.5em'
      }
    }, /*#__PURE__*/_react.default.createElement(_index.Placeholder, {
      height: 200
    }, /*#__PURE__*/_react.default.createElement(_index.Icon, {
      icon: _icons.image
    })));
  }

  return null;
};

var BlockDragIndexLine = function () {
  return /*#__PURE__*/_react.default.createElement(_index.View, {
    css: [_styles.ui.position.relative]
  }, /*#__PURE__*/_react.default.createElement(_index.View, {
    css: [_styles.ui.position.top, _styles.ui.borderRadius.round, {
      height: 3,
      width: '100%'
    }, _styles.ui.background.admin]
  }));
};

var DraggableClone = function (_ref3) {
  var children = _ref3.children,
      snapshot = _ref3.snapshot;
  if (!snapshot.isDragging) return null;
  return children;
};

var DraggablePlaceholder = function (_ref4) {
  var provided = _ref4.provided;
  return /*#__PURE__*/_react.default.createElement("span", {
    style: {
      display: 'none'
    }
  }, provided.placeholder);
};

var BlockList = function (_ref5) {
  var blockList = _ref5.blockList,
      contentListData = _ref5.contentListData;
  return /*#__PURE__*/_react.default.createElement(_reactBeautifulDnd.Droppable, {
    droppableId: "blockList",
    isDropDisabled: true
  }, function (provided) {
    return /*#__PURE__*/_react.default.createElement(_index.View, Object.assign({}, provided.droppableProps, {
      css: [_styles.ui.padding(5)],
      ref: provided.innerRef
    }), /*#__PURE__*/_react.default.createElement(_index.Spacer, null, /*#__PURE__*/_react.default.createElement(_index.Heading, null, "Blocks")), blockList.map(function (block, index) {
      return /*#__PURE__*/_react.default.createElement(_reactBeautifulDnd.Draggable, {
        draggableId: block.id,
        index: index,
        key: block.id
      }, function (provided, snapshot) {
        return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.View, Object.assign({
          ref: provided.innerRef
        }, provided.draggableProps, provided.dragHandleProps, {
          onClick: function onClick() {
            contentListData.add(createNewContentBlock(block.type));
          },
          style: _objectSpread(_objectSpread({}, getStyle(provided.draggableProps.style, snapshot)), {}, {
            marginBottom: 8
          })
        }), /*#__PURE__*/_react.default.createElement(BlockListCard, block)), /*#__PURE__*/_react.default.createElement(DraggableClone, {
          snapshot: snapshot
        }, /*#__PURE__*/_react.default.createElement(_index.View, {
          css: [_styles.ui.margin.bottom(2), _styles.ui.opacity.muted]
        }, /*#__PURE__*/_react.default.createElement(BlockListCard, block))));
      });
    }), /*#__PURE__*/_react.default.createElement(DraggablePlaceholder, {
      provided: provided
    }));
  });
};

var ContentList = function (_ref6) {
  var contentList = _ref6.contentList,
      targetIndex = _ref6.targetIndex;
  return /*#__PURE__*/_react.default.createElement(_reactBeautifulDnd.Droppable, {
    droppableId: "content",
    renderClone: function renderClone(provided, snapshot, rubric) {
      return /*#__PURE__*/_react.default.createElement(_index.Surface, Object.assign({}, provided.draggableProps, provided.dragHandleProps, {
        ref: provided.innerRef,
        style: _objectSpread(_objectSpread({}, provided.draggableProps.style), {}, {
          height: undefined,
          padding: 12
        }),
        variant: "tertiary"
      }), /*#__PURE__*/_react.default.createElement(_index.View, {
        css: {
          marginBottom: '-1.5em',
          opacity: 0.5
        }
      }, /*#__PURE__*/_react.default.createElement(ExampleBlock, contentList[rubric.source.index])), /*#__PURE__*/_react.default.createElement(_index.Elevation, {
        value: 6
      }));
    }
  }, function (provided) {
    return /*#__PURE__*/_react.default.createElement(_index.View, Object.assign({}, provided.droppableProps, {
      css: [_styles.ui.padding(5)],
      ref: provided.innerRef
    }), /*#__PURE__*/_react.default.createElement(_index.Spacer, {
      mb: 6
    }, /*#__PURE__*/_react.default.createElement(_index.Heading, {
      size: 1
    }, "Blog Title")), /*#__PURE__*/_react.default.createElement(_index.AnimatedContainer, null, contentList.map(function (block, index) {
      return /*#__PURE__*/_react.default.createElement(_index.View, {
        key: block.id
      }, /*#__PURE__*/_react.default.createElement(_index.Animated, {
        auto: true
      }, index === targetIndex && /*#__PURE__*/_react.default.createElement(BlockDragIndexLine, null), /*#__PURE__*/_react.default.createElement(_reactBeautifulDnd.Draggable, {
        draggableId: block.id,
        index: index
      }, function (provided) {
        return /*#__PURE__*/_react.default.createElement(_index.View, Object.assign({
          ref: provided.innerRef
        }, provided.draggableProps, provided.dragHandleProps), /*#__PURE__*/_react.default.createElement(ExampleBlock, Object.assign({
          key: block.id
        }, block)));
      })));
    })), targetIndex === contentList.length && /*#__PURE__*/_react.default.createElement(BlockDragIndexLine, null), provided.placeholder);
  });
};

var Example = function () {
  var _useListState = (0, _protokit.useListState)(initialBlockList),
      _useListState2 = (0, _slicedToArray2.default)(_useListState, 1),
      blockList = _useListState2[0];

  var _useListState3 = (0, _protokit.useListState)(initialContentList),
      _useListState4 = (0, _slicedToArray2.default)(_useListState3, 2),
      contentList = _useListState4[0],
      contentListData = _useListState4[1];

  var _useState = (0, _react.useState)(),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      targetIndex = _useState2[0],
      setTargetIndex = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      isDragging = _useState4[0],
      setIsDragging = _useState4[1];

  var _useState5 = (0, _react.useState)(false),
      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
      isDraggingContent = _useState6[0],
      setIsDraggingContent = _useState6[1];

  var _useState7 = (0, _react.useState)(),
      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
      sourceContentIndex = _useState8[0],
      setSourceContentIndex = _useState8[1];

  (0, _react.useEffect)(function () {
    var onMouseMove = function (event) {
      console.log('mousemove', event);
    };

    if (isDragging) {
      document.addEventListener('mousemove', onMouseMove);
    }

    return function () {
      if (isDragging) {
        document.removeEventListener('mousemove', onMouseMove);
      }
    };
  }, [isDragging]);
  return /*#__PURE__*/_react.default.createElement(_reactBeautifulDnd.DragDropContext, {
    onBeforeCapture: function onBeforeCapture(_ref10) {
      var draggableId = _ref10.draggableId;
      var contentListItem = contentListData.find({
        id: draggableId
      });
      var isDraggingContentList = !!contentListItem;

      if (isDraggingContentList) {
        setIsDraggingContent(true);
      }

      var el = document.querySelector("[data-rbd-drag-handle-draggable-id=\"" + draggableId + "\"]");

      if (el) {
        el.style.height = isDraggingContentList ? '24px' : '12px';
      }
    },
    onDragEnd: function onDragEnd(_ref9) {
      var destination = _ref9.destination,
          source = _ref9.source;
      setIsDragging(false);
      setTargetIndex(undefined);
      setIsDraggingContent(false); // Sorting content

      if ((destination == null ? void 0 : destination.droppableId) === 'content' && (source == null ? void 0 : source.droppableId) === 'content') {
        contentListData.move(source.index, destination.index);
        return;
      }

      if ((destination == null ? void 0 : destination.droppableId) !== 'content') return;
      var item = blockList[source.index];
      var itemType = item.type;
      var next = createNewContentBlock(itemType);

      if (next) {
        contentListData.insert({
          at: destination.index,
          item: next
        });
      }
    },
    onDragStart: function onDragStart(_ref7) {
      var source = _ref7.source;
      setIsDragging(true);
      if ((source == null ? void 0 : source.droppableId) !== 'content') return;
      setSourceContentIndex(source.index);
    },
    onDragUpdate: function onDragUpdate(_ref8) {
      var destination = _ref8.destination,
          source = _ref8.source;

      if ((destination == null ? void 0 : destination.droppableId) !== 'content') {
        setTargetIndex(undefined);
        return;
      }

      var next = destination == null ? void 0 : destination.index;

      if (isDraggingContent) {
        next = next >= sourceContentIndex ? next + 1 : next;
      }

      setTargetIndex(next);
    }
  }, /*#__PURE__*/_react.default.createElement(_index.HStack, {
    alignment: "stretch",
    css: [_styles.ui.frame.width(960), _styles.ui.alignment.center, {
      minHeight: '80vh'
    }],
    spacing: 0
  }, /*#__PURE__*/_react.default.createElement(_index.View, {
    css: _styles.ui.frame.width(300)
  }, /*#__PURE__*/_react.default.createElement(BlockList, {
    blockList: blockList,
    contentListData: contentListData
  })), /*#__PURE__*/_react.default.createElement(_index.Spacer, null, /*#__PURE__*/_react.default.createElement(ContentList, {
    contentList: contentList,
    targetIndex: targetIndex
  }))));
};

var DragBuilder = function () {
  return /*#__PURE__*/_react.default.createElement(Example, null);
};

exports.DragBuilder = DragBuilder;