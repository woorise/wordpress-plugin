"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useContainer = useContainer;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var styles = _interopRequireWildcard(require("./Container.styles"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function useContainer(props) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'Container'),
      _useContextSystem$ali = _useContextSystem.alignment,
      alignment = _useContextSystem$ali === void 0 ? 'center' : _useContextSystem$ali,
      className = _useContextSystem.className,
      _useContextSystem$wid = _useContextSystem.width,
      width = _useContextSystem$wid === void 0 ? 1280 : _useContextSystem$wid,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["alignment", "className", "width"]);

  var maxWidth = (0, _styles.useResponsiveValue)(width);
  var classes = (0, _styles.cx)((0, _styles.css)({
    maxWidth: maxWidth,
    width: '100%'
  }), styles[alignment], className);
  return _objectSpread(_objectSpread({}, otherProps), {}, {
    className: classes
  });
}