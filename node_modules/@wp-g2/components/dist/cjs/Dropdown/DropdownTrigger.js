"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _react = _interopRequireDefault(require("react"));

var _reakit = require("reakit");

var _Button = require("../Button");

var _Dropdown = require("./Dropdown.Context");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('../Button/Button').Props, 'button'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */
function DropdownTrigger(props, forwardedRef) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'DropdownTrigger'),
      _useContextSystem$has = _useContextSystem.hasCaret,
      hasCaret = _useContextSystem$has === void 0 ? false : _useContextSystem$has,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["hasCaret"]);

  var _useDropdownContext = (0, _Dropdown.useDropdownContext)(),
      menu = _useDropdownContext.menu;

  var componentProps = _objectSpread(_objectSpread({
    hasCaret: hasCaret
  }, otherProps), {}, {
    ref: forwardedRef
  });

  if (!menu) {
    return /*#__PURE__*/_react.default.createElement(_Button.Button, componentProps);
  }

  return /*#__PURE__*/_react.default.createElement(_reakit.MenuButton, Object.assign({
    as: _Button.Button
  }, componentProps, menu));
}
/**
 * `DropdownTrigger` is an actionable component that toggles the visibility of a `Dropdown`.
 *
 * @example
 * ```jsx
 * <Dropdown>
 *  <DropdownTrigger>Edit</DropdownTrigger>
 *  <DropdownMenu>
 *    ...
 *  </DropdownMenu>
 * </Dropdown>
 * ```
 */


var ConnectedDropdownTrigger = (0, _context.contextConnect)(DropdownTrigger, 'DropdownTrigger');
var _default = ConnectedDropdownTrigger;
exports.default = _default;