"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var _utils = require("@wp-g2/utils");

var _react = _interopRequireWildcard(require("react"));

var _Divider = require("../Divider");

var _View = require("../View");

var _VStack = require("../VStack");

var _ListGroupContent = _interopRequireDefault(require("./ListGroupContent"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * Shallowly adjusts child MenuItem components.
 */
var listGroupContextProps = {
  MenuItem: {
    isOffset: true
  }
};
/**
 * Shallowly adjusts child Grid components.
 */

var listGroupGridContextProps = {
  Grid: {
    gap: 3,
    rowGap: 2
  }
};

function ListGroup(props, forwardedRef) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'ListGroup'),
      children = _useContextSystem.children,
      _useContextSystem$sep = _useContextSystem.separator,
      separator = _useContextSystem$sep === void 0 ? false : _useContextSystem$sep,
      _useContextSystem$spa = _useContextSystem.spacing,
      spacing = _useContextSystem$spa === void 0 ? 2 : _useContextSystem$spa,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["children", "separator", "spacing"]);

  var vStackProps = (0, _VStack.useVStack)(_objectSpread({
    spacing: spacing
  }, otherProps));
  var validChildren = (0, _utils.getValidChildren)(children);
  var separatorValue = (0, _styles.useResponsiveValue)(separator);
  var headerComponent;
  var footerComponent;
  /**
   * We're scanning for potential ListGroupHeader and ListGroupFooter components.
   * If found, they'll be hoisted (once) and removed from the children list.
   * The Header and Footer components will be rendered in a different "slot"
   * within ListGroup.
   */

  var filteredChildren = validChildren.filter(function (child) {
    var isGroupHeader = (0, _context.hasNamespace)(child, ['ListGroupHeader']);

    if (isGroupHeader && !headerComponent) {
      // Hoist the ListGroupHeader
      headerComponent = child;
      return false;
    }

    var isGroupFooter = (0, _context.hasNamespace)(child, ['ListGroupFooter']);

    if (isGroupFooter && !footerComponent) {
      // Hoist the ListGroupFooter
      footerComponent = child;
      return false;
    }

    return true;
  });
  var clonedChildren = filteredChildren.map(function (child, index) {
    var isLast = index + 1 === filteredChildren.length;
    var isGrid = (0, _context.hasNamespace)(child, ['Grid']);

    var _key = child.key || index;

    var content = child;

    if (isGrid) {
      content = /*#__PURE__*/_react.default.createElement(_context.ContextSystemProvider, {
        value: listGroupGridContextProps
      }, child);
    }

    return /*#__PURE__*/_react.default.createElement(_react.Fragment, {
      key: _key
    }, content, separatorValue && !isLast && /*#__PURE__*/_react.default.createElement(_Divider.Divider, null));
  });
  return /*#__PURE__*/_react.default.createElement(_View.View, Object.assign({}, vStackProps, {
    ref: forwardedRef
  }), headerComponent, /*#__PURE__*/_react.default.createElement(_ListGroupContent.default, Object.assign({
    spacing: separatorValue ? 0 : 2
  }, {
    spacing: spacing
  }), /*#__PURE__*/_react.default.createElement(_context.ContextSystemProvider, {
    value: listGroupContextProps
  }, clonedChildren)), footerComponent);
}

var _default = (0, _context.contextConnect)(ListGroup, 'ListGroup');

exports.default = _default;