"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = require("@testing-library/react");

var _react2 = _interopRequireDefault(require("react"));

var _index = require("../index");

describe('props', function () {
  var options = [{
    value: 'olaf',
    label: 'Olaf'
  }, {
    value: 'samantha',
    label: 'Samantha'
  }];
  test('should render correctly', function () {
    var _render = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_index.Select, {
      id: "select",
      options: options
    })),
        container = _render.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render children', function () {
    var _render2 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_index.Select, {
      id: "select"
    }, /*#__PURE__*/_react2.default.createElement("optgroup", {
      label: "Snowmen"
    }, /*#__PURE__*/_react2.default.createElement("option", {
      value: "olaf"
    }, "Olaf")))),
        container = _render2.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render disabled', function () {
    var _render3 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_index.Select, {
      disabled: true,
      id: "select",
      options: options
    })),
        container = _render3.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render required', function () {
    var _render4 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_index.Select, {
      id: "select",
      options: options,
      required: true
    })),
        container = _render4.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render readOnly', function () {
    var _render5 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_index.Select, {
      id: "select",
      options: options,
      readOnly: true
    })),
        container = _render5.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render size', function () {
    var _render6 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_index.Select, {
      id: "select",
      options: options,
      size: "small"
    })),
        container = _render6.container;

    expect(container.firstChild).toMatchSnapshot();
  });
});