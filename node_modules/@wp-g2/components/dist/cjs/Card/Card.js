"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var _react = _interopRequireWildcard(require("react"));

var _Elevation = require("../Elevation");

var _View = require("../View");

var styles = _interopRequireWildcard(require("./Card.styles"));

var _useCard2 = require("./useCard");

/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').CardProps, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */
function Card(props, forwardedRef) {
  var _useCard = (0, _useCard2.useCard)(props),
      children = _useCard.children,
      elevation = _useCard.elevation,
      _useCard$isRounded = _useCard.isRounded,
      isRounded = _useCard$isRounded === void 0 ? true : _useCard$isRounded,
      otherProps = (0, _objectWithoutProperties2.default)(_useCard, ["children", "elevation", "isRounded"]);

  var elevationBorderRadius = isRounded ? _styles.ui.get('cardBorderRadius') : 0;
  var elevationClassName = (0, _react.useMemo)(function () {
    return (0, _styles.css)({
      borderRadius: elevationBorderRadius
    });
  }, [elevationBorderRadius]);
  return /*#__PURE__*/_react.default.createElement(_View.View, Object.assign({}, otherProps, {
    ref: forwardedRef
  }), /*#__PURE__*/_react.default.createElement(_View.View, Object.assign({}, _styles.ui.$('CardContent'), {
    css: styles.Content
  }), children), /*#__PURE__*/_react.default.createElement(_Elevation.Elevation, Object.assign({
    className: elevationClassName,
    isInteractive: false,
    value: elevation ? 1 : 0
  }, _styles.ui.$('CardElevation'))), /*#__PURE__*/_react.default.createElement(_Elevation.Elevation, Object.assign({
    className: elevationClassName,
    isInteractive: false,
    value: elevation
  }, _styles.ui.$('CardElevation'))));
}
/**
 * `Card` is a layout component, providing a flexible and extensible content container.
 *
 * @remarks
 * `Card` provides convenient sub-components such as `CardBody`, `CardHeader`, and `CardFooter`.
 *
 * @example
 * ```jsx
 * import {
 *   Card,
 *   CardHeader,
 *   CardBody,
 *   CardFooter,
 *   Text,
 * } from `@wp-g2/components`
 *
 * function Example() {
 *   return (
 *     <Card>
 *       <CardHeader>
 *         <Heading size={4}>Card Title</Heading>
 *       </CardHeader>
 *       <CardBody>
 *         <Text>Card Content</Text>
 *       </CardBody>
 *       <CardFooter>
 *         <Text>Card Footer</Text>
 *       </CardFooter>
 *     </Card>
 *   );
 * }
 * ```
 */


var ConnectedCard = (0, _context.contextConnect)(Card, 'Card');
var _default = ConnectedCard;
exports.default = _default;