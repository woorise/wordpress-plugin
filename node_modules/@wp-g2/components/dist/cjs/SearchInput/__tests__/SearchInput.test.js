"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = require("@testing-library/react");

var _react2 = _interopRequireDefault(require("react"));

var _index = require("../index");

describe('props', function () {
  test('should render correctly', function () {
    var _render = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_index.SearchInput, {
      id: "search"
    })),
        container = _render.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render isLoading', function () {
    var _render2 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_index.SearchInput, {
      id: "search",
      isLoading: true
    })),
        container = _render2.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render placeholder', function () {
    var _render3 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_index.SearchInput, {
      id: "search",
      placeholder: "Searching for..."
    })),
        container = _render3.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render prefix', function () {
    var _render4 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_index.SearchInput, {
      id: "search",
      prefix: /*#__PURE__*/_react2.default.createElement("span", null, "prefix")
    })),
        container = _render4.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render suffix', function () {
    var _render5 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_index.SearchInput, {
      id: "search",
      suffix: /*#__PURE__*/_react2.default.createElement("span", null, "suffix")
    })),
        container = _render5.container;

    expect(container.firstChild).toMatchSnapshot();
  });
  test('should render value', function () {
    var _render6 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_index.SearchInput, {
      id: "search",
      value: "q"
    })),
        container = _render6.container;

    expect(container.firstChild).toMatchSnapshot();
  });
});