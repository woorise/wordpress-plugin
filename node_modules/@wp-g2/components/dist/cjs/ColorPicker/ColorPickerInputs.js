"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColorPickerInputs = exports.ColorPickerHexInputs = exports.ColorPickerHSLInputs = exports.ColorPickerRGBInputs = exports.ColorInputSlider = exports.ColorInputSliderAlpha = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _i18n = require("@wordpress/i18n");

var _utils = require("@wp-g2/utils");

var _react = _interopRequireDefault(require("react"));

var _FormGroup = require("../FormGroup");

var _Grid = require("../Grid");

var _Slider = require("../Slider");

var _Text = require("../Text");

var _TextInput = require("../TextInput");

var _VStack = require("../VStack");

var _ColorPicker = require("./ColorPicker.Context");

var styles = _interopRequireWildcard(require("./ColorPicker.styles"));

var _ColorPickerInputHex = require("./ColorPickerInputHex");

var ColorInputSliderAlpha = /*#__PURE__*/_react.default.memo(function (_ref) {
  var _ref$label = _ref.label,
      label = _ref$label === void 0 ? (0, _i18n.__)('Alpha') : _ref$label,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? 'rgb' : _ref$type,
      otherProps = (0, _objectWithoutProperties2.default)(_ref, ["label", "type"]);

  var parse = _react.default.useCallback(function (next) {
    return (0, _utils.interpolate)(next, [0, 1], [0, 100]);
  }, []);

  var serialize = _react.default.useCallback(function (next) {
    return (0, _utils.interpolate)(next, [100, 0], [1, 0]);
  }, []);

  var suffix = /*#__PURE__*/_react.default.createElement(_Text.Text, {
    className: styles.suffixText,
    isBlock: true,
    variant: "muted"
  }, "%");

  return /*#__PURE__*/_react.default.createElement(ColorInputSlider, Object.assign({
    label: label,
    max: 100,
    min: 0,
    parse: parse,
    prop: "a",
    serialize: serialize,
    step: 1,
    suffix: suffix,
    type: type
  }, otherProps));
});

exports.ColorInputSliderAlpha = ColorInputSliderAlpha;

var ColorInputSlider = /*#__PURE__*/_react.default.memo(function (_ref2) {
  var label = _ref2.label,
      _ref2$max = _ref2.max,
      max = _ref2$max === void 0 ? 255 : _ref2$max,
      _ref2$min = _ref2.min,
      min = _ref2$min === void 0 ? 0 : _ref2$min,
      parse = _ref2.parse,
      prop = _ref2.prop,
      serialize = _ref2.serialize,
      _ref2$step = _ref2.step,
      step = _ref2$step === void 0 ? 1 : _ref2$step,
      _ref2$type = _ref2.type,
      type = _ref2$type === void 0 ? 'rgb' : _ref2$type,
      otherProps = (0, _objectWithoutProperties2.default)(_ref2, ["label", "max", "min", "parse", "prop", "serialize", "step", "type"]);

  var _useColorPickerContex = (0, _ColorPicker.useColorPickerContext)(),
      changeValues = _useColorPickerContex.changeValues,
      colorValues = _useColorPickerContex.colorValues,
      disableAlpha = _useColorPickerContex.disableAlpha;

  var value = colorValues[type]()[prop];
  var setValue = changeValues[type];

  var handleOnChange = _react.default.useCallback(function (next) {
    var _setValue;

    var changeValue = next;

    if (typeof serialize === 'function') {
      changeValue = serialize(changeValue);
    }

    setValue((_setValue = {}, _setValue[prop] = changeValue, _setValue));
  }, [prop, serialize, setValue]);

  var parsedValue = value;

  if (typeof parse === 'function') {
    parsedValue = parse(value);
  }

  parsedValue = _utils.is.numeric(parsedValue) ? (0, _utils.roundClamp)(parsedValue, min, max, step) : parsedValue;
  if (prop === 'a' && disableAlpha) return null;
  return /*#__PURE__*/_react.default.createElement(_FormGroup.FormGroup, {
    horizontal: true,
    label: label
  }, /*#__PURE__*/_react.default.createElement(_Grid.Grid, null, /*#__PURE__*/_react.default.createElement(_TextInput.TextInput, Object.assign({}, otherProps, {
    max: max,
    min: min,
    onChange: handleOnChange,
    step: step,
    type: "number",
    value: parsedValue
  })), /*#__PURE__*/_react.default.createElement(_Slider.Slider, Object.assign({}, otherProps, {
    max: max,
    min: min,
    onChange: handleOnChange,
    step: step,
    value: parsedValue
  }))));
});

exports.ColorInputSlider = ColorInputSlider;

var ColorPickerRGBInputs = /*#__PURE__*/_react.default.memo(function () {
  return /*#__PURE__*/_react.default.createElement(_VStack.VStack, null, /*#__PURE__*/_react.default.createElement(ColorInputSlider, {
    label: "Red",
    prop: "r",
    type: "rgb"
  }), /*#__PURE__*/_react.default.createElement(ColorInputSlider, {
    label: "Green",
    prop: "g",
    type: "rgb"
  }), /*#__PURE__*/_react.default.createElement(ColorInputSlider, {
    label: "Blue",
    prop: "b",
    type: "rgb"
  }), /*#__PURE__*/_react.default.createElement(ColorInputSliderAlpha, {
    label: "Alpha",
    type: "rgb"
  }));
});

exports.ColorPickerRGBInputs = ColorPickerRGBInputs;

var ColorPickerHSLInputs = /*#__PURE__*/_react.default.memo(function () {
  var parse = _react.default.useCallback(function (next) {
    return (0, _utils.interpolate)(next, [0, 1], [0, 100]);
  }, []);

  var serialize = _react.default.useCallback(function (next) {
    return (0, _utils.interpolate)(next, [100, 0], [1, 0]);
  }, []);

  var degrees = /*#__PURE__*/_react.default.createElement(_Text.Text, {
    className: styles.suffixText,
    isBlock: true,
    variant: "muted"
  }, "\xB0");

  var percentage = /*#__PURE__*/_react.default.createElement(_Text.Text, {
    className: styles.suffixText,
    isBlock: true,
    variant: "muted"
  }, "%");

  return /*#__PURE__*/_react.default.createElement(_VStack.VStack, null, /*#__PURE__*/_react.default.createElement(ColorInputSlider, {
    label: "Hue",
    max: 360,
    min: 0,
    prop: "h",
    step: 1,
    suffix: degrees,
    type: "hsl"
  }), /*#__PURE__*/_react.default.createElement(ColorInputSlider, {
    label: "Saturation",
    max: 100,
    min: 0,
    parse: parse,
    prop: "s",
    serialize: serialize,
    suffix: percentage,
    type: "hsl"
  }), /*#__PURE__*/_react.default.createElement(ColorInputSlider, {
    label: "Luminance",
    max: 100,
    min: 0,
    parse: parse,
    prop: "l",
    serialize: serialize,
    suffix: percentage,
    type: "hsl"
  }), /*#__PURE__*/_react.default.createElement(ColorInputSliderAlpha, {
    label: "Alpha",
    type: "hsl"
  }));
});

exports.ColorPickerHSLInputs = ColorPickerHSLInputs;

var ColorPickerHexInputs = /*#__PURE__*/_react.default.memo(function () {
  return /*#__PURE__*/_react.default.createElement(_VStack.VStack, null, /*#__PURE__*/_react.default.createElement(_ColorPickerInputHex.ColorInputHex, null));
});

exports.ColorPickerHexInputs = ColorPickerHexInputs;

var ColorPickerInputs = /*#__PURE__*/_react.default.memo(function () {
  var _useColorPickerContex2 = (0, _ColorPicker.useColorPickerContext)(),
      inputType = _useColorPickerContex2.inputType;

  switch (inputType) {
    case 'hex':
      return /*#__PURE__*/_react.default.createElement(ColorPickerHexInputs, null);

    case 'rgb':
      return /*#__PURE__*/_react.default.createElement(ColorPickerRGBInputs, null);

    case 'hsl':
      return /*#__PURE__*/_react.default.createElement(ColorPickerHSLInputs, null);

    default:
      return null;
  }
});

exports.ColorPickerInputs = ColorPickerInputs;