"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColorInputHex = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _i18n = require("@wordpress/i18n");

var _styles = require("@wp-g2/styles");

var _react = _interopRequireDefault(require("react"));

var _FormGroup = require("../FormGroup");

var _Text = require("../Text");

var _TextInput = require("../TextInput");

var _useTextInputState = require("../TextInput/useTextInputState.utils");

var _ColorPicker = require("./ColorPicker.Context");

var ColorInputHex = /*#__PURE__*/_react.default.memo(function (_ref) {
  var _ref$label = _ref.label,
      label = _ref$label === void 0 ? (0, _i18n.__)('Hex') : _ref$label,
      otherProps = (0, _objectWithoutProperties2.default)(_ref, ["label"]);
  var store = (0, _ColorPicker.useColorPickerContext)();
  var _ref2 = [store.colorValues.hex(), store.changeValues.hex, store.increment, store.decrement],
      value = _ref2[0],
      setValue = _ref2[1],
      increment = _ref2[2],
      decrement = _ref2[3];
  var dragHandlers = (0, _useTextInputState.useBaseDragHandlers)({
    increment: increment,
    decrement: decrement,
    isTypeNumeric: true,
    dragAxis: 'y'
  });

  var handleOnChange = _react.default.useCallback(function (next) {
    setValue(_styles.ui.color(next).toHexString());
  }, [setValue]);

  var handleOnValidate = _react.default.useCallback(function (next) {
    return _styles.ui.color(next).isValid();
  }, []);

  return /*#__PURE__*/_react.default.createElement(_FormGroup.FormGroup, {
    horizontal: true,
    label: label
  }, /*#__PURE__*/_react.default.createElement(_TextInput.TextInput, Object.assign({}, otherProps, dragHandlers, {
    onChange: handleOnChange,
    prefix: /*#__PURE__*/_react.default.createElement(_Text.Text, {
      variant: "muted"
    }, "#"),
    validate: handleOnValidate,
    value: value
  })));
});

exports.ColorInputHex = ColorInputHex;