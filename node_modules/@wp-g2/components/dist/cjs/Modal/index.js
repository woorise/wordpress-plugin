"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  Modal: true,
  ModalBody: true,
  ModalFooter: true,
  ModalHeader: true,
  ModalTitle: true,
  ModalTrigger: true,
  useModalState: true
};
Object.defineProperty(exports, "Modal", {
  enumerable: true,
  get: function get() {
    return _Modal.default;
  }
});
Object.defineProperty(exports, "ModalBody", {
  enumerable: true,
  get: function get() {
    return _ModalBody.default;
  }
});
Object.defineProperty(exports, "ModalFooter", {
  enumerable: true,
  get: function get() {
    return _ModalFooter.default;
  }
});
Object.defineProperty(exports, "ModalHeader", {
  enumerable: true,
  get: function get() {
    return _ModalHeader.default;
  }
});
Object.defineProperty(exports, "ModalTitle", {
  enumerable: true,
  get: function get() {
    return _ModalTitle.default;
  }
});
Object.defineProperty(exports, "ModalTrigger", {
  enumerable: true,
  get: function get() {
    return _ModalTrigger.default;
  }
});
Object.defineProperty(exports, "useModalState", {
  enumerable: true,
  get: function get() {
    return _useModalState.useModalState;
  }
});

var _Modal = _interopRequireDefault(require("./Modal"));

var _ModalBody = _interopRequireDefault(require("./ModalBody"));

var _ModalFooter = _interopRequireDefault(require("./ModalFooter"));

var _ModalHeader = _interopRequireDefault(require("./ModalHeader"));

var _ModalTitle = _interopRequireDefault(require("./ModalTitle"));

var _ModalTrigger = _interopRequireDefault(require("./ModalTrigger"));

var _Modal2 = require("./Modal.Context");

Object.keys(_Modal2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _Modal2[key];
    }
  });
});

var _useModalState = require("./useModalState");