"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useSlider = useSlider;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var _utils = require("@wp-g2/utils");

var _react = require("react");

var _FormGroup = require("../FormGroup");

var styles = _interopRequireWildcard(require("./Slider.styles"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @typedef OwnProps
 * @property {import('../utils/types').SizeRangeReduced} [size='medium'] Determines the size of `Slider`.
 */

/** @typedef {import('../BaseField/useBaseField').Props & import('../utils/types').FormElementProps<number> & OwnProps} Props */

/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<Props, 'input'>} props
 */
function useSlider(props) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'Slider'),
      className = _useContextSystem.className,
      defaultValue = _useContextSystem.defaultValue,
      error = _useContextSystem.error,
      _useContextSystem$onB = _useContextSystem.onBlur,
      onBlur = _useContextSystem$onB === void 0 ? _utils.noop : _useContextSystem$onB,
      _useContextSystem$onC = _useContextSystem.onChange,
      onChangeProp = _useContextSystem$onC === void 0 ? _utils.noop : _useContextSystem$onC,
      _useContextSystem$onF = _useContextSystem.onFocus,
      onFocus = _useContextSystem$onF === void 0 ? _utils.noop : _useContextSystem$onF,
      idProp = _useContextSystem.id,
      _useContextSystem$isF = _useContextSystem.isFocused,
      isFocusedProp = _useContextSystem$isF === void 0 ? false : _useContextSystem$isF,
      _useContextSystem$max = _useContextSystem.max,
      max = _useContextSystem$max === void 0 ? 100 : _useContextSystem$max,
      _useContextSystem$min = _useContextSystem.min,
      min = _useContextSystem$min === void 0 ? 0 : _useContextSystem$min,
      _useContextSystem$siz = _useContextSystem.size,
      size = _useContextSystem$siz === void 0 ? 'medium' : _useContextSystem$siz,
      style = _useContextSystem.style,
      valueProp = _useContextSystem.value,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["className", "defaultValue", "error", "onBlur", "onChange", "onFocus", "id", "isFocused", "max", "min", "size", "style", "value"]);

  var _useControlledValue = (0, _utils.useControlledValue)({
    value: valueProp,
    onChange: onChangeProp,
    defaultValue: defaultValue || 50
  }),
      _useControlledValue2 = (0, _slicedToArray2.default)(_useControlledValue, 2),
      _value = _useControlledValue2[0],
      onChange = _useControlledValue2[1];

  var _parseUnitValue = (0, _utils.parseUnitValue)(_value),
      _parseUnitValue2 = (0, _slicedToArray2.default)(_parseUnitValue, 2),
      value = _parseUnitValue2[0],
      initialUnit = _parseUnitValue2[1];

  var id = (0, _FormGroup.useFormGroupContextId)(idProp);

  var _useState = (0, _react.useState)(isFocusedProp),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      isFocused = _useState2[0],
      setIsFocused = _useState2[1];

  var handleOnBlur = (0, _react.useCallback)(function (event) {
    onBlur(event);
    setIsFocused(false);
  }, [onBlur]);
  var handleOnChange = (0, _react.useCallback)(function (event) {
    var nextValue = parseFloat(event.target.value);
    if (!_utils.is.numeric(nextValue)) return;
    var next = nextValue;

    if (initialUnit) {
      next = (0, _utils.createUnitValue)(nextValue, initialUnit);
    }

    onChange(next, {
      event: event
    });
  }, [onChange, initialUnit]);
  var handleOnFocus = (0, _react.useCallback)(function (event) {
    onFocus(event);
    setIsFocused(true);
  }, [onFocus]);
  var currentValue = (0, _utils.interpolate)(value, [min, max], [0, 100]);

  var componentStyles = _objectSpread(_objectSpread({}, style), {}, {
    '--progress': currentValue + "%"
  });

  var classes = (0, _react.useMemo)(function () {
    return (0, _styles.cx)(styles.Slider, error && styles.error, styles[size], isFocused && styles.focused, error && isFocused && styles.focusedError, className);
  }, [className, error, isFocused, size]);
  return _objectSpread(_objectSpread({}, otherProps), {}, {
    className: classes,
    id: id,
    max: max,
    min: min,
    onBlur: handleOnBlur,
    onChange: handleOnChange,
    onFocus: handleOnFocus,
    style: componentStyles,
    type: 'range',
    value: value
  });
}