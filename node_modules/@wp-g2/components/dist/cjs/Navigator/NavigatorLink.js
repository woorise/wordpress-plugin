"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var _react = _interopRequireDefault(require("react"));

var linkStyles = _interopRequireWildcard(require("../Link/Link.styles"));

var styles = _interopRequireWildcard(require("./Navigator.styles"));

var _Router = require("./Router");

function NavigatorLink(props, forwardedRef) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'NavigatorLink'),
      as = _useContextSystem.as,
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      exact = _useContextSystem.exact,
      href = _useContextSystem.href,
      isBack = _useContextSystem.isBack,
      isPlain = _useContextSystem.isPlain,
      params = _useContextSystem.params,
      showArrow = _useContextSystem.showArrow,
      to = _useContextSystem.to,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["as", "children", "className", "exact", "href", "isBack", "isPlain", "params", "showArrow", "to"]);

  var history = (0, _Router.useHistory)();

  var _React$Children$toArr = _react.default.Children.toArray(children),
      _React$Children$toArr2 = (0, _slicedToArray2.default)(_React$Children$toArr, 1),
      child = _React$Children$toArr2[0];

  var isWrappingMenuItem = (0, _context.hasNamespace)(child, ['MenuItem']);
  var classes = (0, _styles.cx)(linkStyles.BaseLink, !isPlain && linkStyles.Link, isWrappingMenuItem && styles.menuItemLink, className);

  var handleOnClick = function (event) {
    if (isBack) {
      event.preventDefault();

      if (to) {
        history.push(to, {
          isBack: true
        });
      } else {
        history.goBack();
      }
    }
  };

  var content = /*#__PURE__*/_react.default.createElement(_context.ContextSystemProvider, {
    value: {
      MenuItem: {
        isBack: isBack,
        showArrow: !!to || !!href || showArrow,
        tabIndex: -1
      }
    }
  }, children);

  if (!to) {
    return /*#__PURE__*/_react.default.createElement("a", Object.assign({
      href: href || '#',
      ref: forwardedRef
    }, otherProps, {
      className: classes,
      onClick: handleOnClick
    }), content);
  }

  return /*#__PURE__*/_react.default.createElement(_Router.NavLink, Object.assign({}, otherProps, {
    activeClassName: "is-active",
    className: classes,
    exact: exact,
    onClick: handleOnClick,
    ref: forwardedRef,
    to: to
  }), content);
}

var _default = (0, _context.contextConnect)(NavigatorLink, 'NavigatorLink');

exports.default = _default;