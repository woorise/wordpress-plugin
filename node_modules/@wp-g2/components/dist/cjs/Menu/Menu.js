"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var _react = _interopRequireDefault(require("react"));

var _reakit = require("reakit");

var _Popover = require("../Popover/Popover.utils");

var _View = require("../View");

var _Menu = require("./Menu.Context");

var styles = _interopRequireWildcard(require("./Menu.styles"));

/**
 * `Menu` is an actionable component that displays a list of actions, links, or informative content.
 *
 * @example
 * ```jsx
 * <Menu>
 *  <MenuItem>...</MenuItem>
 *  <MenuItem>...</MenuItem>
 *  <MenuItem>...</MenuItem>
 * </Menu>
 * ```
 *
 * @see https://reakit.io/docs/menu/#menu
 *
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').Props, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */
function Menu(props, forwardedRef) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'Menu'),
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      menu = _useContextSystem.menu,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["children", "className", "menu"]);

  var resizeListener = (0, _Popover.usePopoverResizeUpdater)({
    onResize: menu == null ? void 0 : menu.unstable_update
  });
  var classes = (0, _styles.cx)(styles.Menu, className);
  var Component = menu ? _reakit.Menu : _View.View;
  return /*#__PURE__*/_react.default.createElement(_Menu.MenuContext.Provider, {
    value: {
      menu: menu
    }
  }, /*#__PURE__*/_react.default.createElement(Component, Object.assign({
    hideOnClickOutside: false
  }, menu || {}, otherProps, {
    className: classes,
    ref: forwardedRef
  }), resizeListener, children));
}
/**
 * `Menu` is an actionable component that displays a list of actions, links, or informative content.
 *
 * @example
 * ```jsx
 * <Menu>
 *  <MenuItem>...</MenuItem>
 *  <MenuItem>...</MenuItem>
 *  <MenuItem>...</MenuItem>
 * </Menu>
 * ```
 *
 * @see https://reakit.io/docs/menu/#menu
 */


var ConnectedMenu = (0, _context.contextConnect)(Menu, 'Menu');
var _default = ConnectedMenu;
exports.default = _default;