"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var _react = _interopRequireDefault(require("react"));

var _ArrowIndicator = require("../ArrowIndicator");

var _Collapsible = require("../Collapsible");

var _Flex = require("../Flex");

var _Heading = require("../Heading");

var _HStack = require("../HStack");

var _Text = require("../Text");

var _Panel = require("./Panel.Context");

var styles = _interopRequireWildcard(require("./Panel.styles"));

function PanelHeader(props, forwardedRef) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'PanelHeader'),
      actions = _useContextSystem.actions,
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      _useContextSystem$hid = _useContextSystem.hideArrow,
      hideArrow = _useContextSystem$hid === void 0 ? false : _useContextSystem$hid,
      title = _useContextSystem.title,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["actions", "children", "className", "hideArrow", "title"]);

  var _useCollapsibleContex = (0, _Collapsible.useCollapsibleContext)(),
      disclosure = _useCollapsibleContex.disclosure;

  var _usePanelContext = (0, _Panel.usePanelContext)(),
      collapsible = _usePanelContext.collapsible,
      seamless = _usePanelContext.seamless;

  var visible = (disclosure || {}).visible;
  var direction = visible ? 'down' : 'right';
  var content = title ? /*#__PURE__*/_react.default.createElement(_Heading.Heading, {
    size: 5
  }, title) : children;

  if (actions) {
    content = /*#__PURE__*/_react.default.createElement(_HStack.HStack, null, content, actions);
  }

  var classes = (0, _styles.cx)(styles.PanelHeader, seamless && styles.seamless, collapsible && styles.collapsibleHeader, !collapsible && styles.nonCollapsibleHeader, className);

  if (!collapsible) {
    return /*#__PURE__*/_react.default.createElement(_Flex.Flex, Object.assign({
      className: classes
    }, otherProps, {
      ref: forwardedRef
    }), /*#__PURE__*/_react.default.createElement(_Flex.FlexBlock, null, content));
  }

  return /*#__PURE__*/_react.default.createElement(_Collapsible.CollapsibleTrigger, Object.assign({
    as: _Flex.Flex,
    className: classes
  }, otherProps, {
    ref: forwardedRef
  }), !hideArrow && /*#__PURE__*/_react.default.createElement(_Text.Text, {
    isBlock: true
  }, /*#__PURE__*/_react.default.createElement(_ArrowIndicator.ArrowIndicator, {
    direction: direction,
    size: 5,
    width: 5
  })), /*#__PURE__*/_react.default.createElement(_Flex.FlexBlock, null, content));
}

var _default = (0, _context.contextConnect)(PanelHeader, 'PanelHeader');

exports.default = _default;