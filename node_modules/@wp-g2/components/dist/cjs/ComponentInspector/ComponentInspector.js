"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _context = require("@wp-g2/context");

var _utils = require("@wp-g2/utils");

var _react = _interopRequireWildcard(require("react"));

var _Debugger = require("../Debugger");

var _ComponentInspector = require("./ComponentInspector.styles");

var _Object$keys = Object.keys((0, _context.ns)()),
    _Object$keys2 = (0, _slicedToArray2.default)(_Object$keys, 1),
    NAMESPACE = _Object$keys2[0];

function ComponentInspector(props, forwardedRef) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'ComponentInspector'),
      children = _useContextSystem.children,
      _useContextSystem$dis = _useContextSystem.disabled,
      disabled = _useContextSystem$dis === void 0 ? false : _useContextSystem$dis,
      tooltipElement = _useContextSystem.tooltipElement,
      _useContextSystem$too = _useContextSystem.tooltipOnly,
      tooltipOnly = _useContextSystem$too === void 0 ? false : _useContextSystem$too,
      visible = _useContextSystem.visible,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["children", "disabled", "tooltipElement", "tooltipOnly", "visible"]);

  var nodeRef = (0, _react.useRef)();

  var _useState = (0, _react.useState)({
    x: 0,
    y: 0
  }),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      position = _useState2[0],
      setPosition = _useState2[1];

  var _useState3 = (0, _react.useState)(),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      label = _useState4[0],
      setLabel = _useState4[1];

  var isHidden = _utils.is.boolean(visible) && !visible;
  (0, _react.useEffect)(function () {
    if (isHidden) {
      setPosition({
        x: 0,
        y: 0
      });
      setLabel(null);
    }
  }, [isHidden]);
  (0, _react.useEffect)(function () {
    var node = tooltipElement || nodeRef.current;
    if (!node || disabled || isHidden) return;

    var clear = function () {
      setPosition({
        x: 0,
        y: 0
      });
      setLabel(null);
    };

    var handleOnMouseMove = function (event) {
      var target = event.target;
      var componentName = target.getAttribute(NAMESPACE);
      setPosition({
        x: event.clientX,
        y: event.clientY
      });

      if (componentName) {
        if (!['Debugger', 'ComponentInspector'].includes(componentName)) {
          setLabel("<" + componentName + " />");
        } else {
          setLabel(null);
        }
      }
    };

    node.addEventListener('mousemove', handleOnMouseMove);
    node.addEventListener('mouseenter', clear);
    node.addEventListener('mouseleave', clear);
    return function () {
      node.removeEventListener('mousemove', handleOnMouseMove);
      node.removeEventListener('mouseenter', clear);
      node.removeEventListener('mouseleave', clear);
    };
  }, [disabled, isHidden, tooltipElement]);
  var x = position.x,
      y = position.y;
  return /*#__PURE__*/_react.default.createElement(_ComponentInspector.ComponentInspectorView, Object.assign({
    disabled: tooltipOnly || disabled || isHidden,
    ref: (0, _utils.mergeRefs)([forwardedRef, nodeRef])
  }, otherProps), label && !!x && !!y && !disabled && /*#__PURE__*/_react.default.createElement(_Debugger.Debugger, {
    __force: true,
    style: {
      left: x,
      position: 'fixed',
      top: y,
      transform: "translate(-50%, calc(-100% + -10px)",
      zIndex: 99999999
    }
  }, label), children);
}

var _default = (0, _context.contextConnect)(ComponentInspector, 'ComponentInspector');

exports.default = _default;