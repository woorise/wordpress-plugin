"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var _react = _interopRequireWildcard(require("react"));

var _View = require("../View");

var styles = _interopRequireWildcard(require("./Icon.styles"));

/**
 * @typedef Props
 * @property {import('react').CSSProperties['fill']} [fill='currentColor']
 * @property {number} [height]
 * @property {import('react').ReactElement} icon
 * @property {boolean} [inline]
 * @property {number | string} [size=20]
 * @property {keyof styles} [variant]
 * @property {number} [width]
 */

/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<Props, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */
function Icon(props, forwardedRef) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'Icon'),
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      _useContextSystem$fil = _useContextSystem.fill,
      fill = _useContextSystem$fil === void 0 ? 'currentColor' : _useContextSystem$fil,
      height = _useContextSystem.height,
      icon = _useContextSystem.icon,
      inline = _useContextSystem.inline,
      _useContextSystem$siz = _useContextSystem.size,
      size = _useContextSystem$siz === void 0 ? 20 : _useContextSystem$siz,
      variant = _useContextSystem.variant,
      width = _useContextSystem.width,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["children", "className", "fill", "height", "icon", "inline", "size", "variant", "width"]);

  var classes = (0, _react.useMemo)(function () {
    var sx = {}; // https://github.com/ItsJonQ/g2/issues/136

    sx.fill = (0, _styles.css)({
      color: fill,
      fill: 'currentColor'
    });
    sx.size = (0, _styles.css)({
      height: height || size,
      width: width || size
    });
    return (0, _styles.cx)(styles.Wrapper, sx.fill, sx.size, inline && styles.inline, variant && styles[variant], className);
  }, [className, fill, height, inline, size, variant, width]);
  if (!icon) return null;

  var IconComponent = /*#__PURE__*/_react.default.cloneElement(icon, {
    height: size,
    ref: forwardedRef,
    size: size,
    width: size
  });

  return /*#__PURE__*/_react.default.createElement(_View.View, Object.assign({}, otherProps, {
    className: classes
  }), IconComponent);
}

var _default = (0, _context.contextConnect)(Icon, 'Icon');

exports.default = _default;