"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _icons = require("@wordpress/icons");

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var _utils = require("@wp-g2/utils");

var _react = _interopRequireWildcard(require("react"));

var _reakit = require("reakit");

var _CheckboxGroup = require("../CheckboxGroup");

var _FormGroup = require("../FormGroup");

var _Icon = require("../Icon");

var styles = _interopRequireWildcard(require("./Checkbox.styles"));

function CheckboxElement(props, forwardedRef) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'CheckboxElement'),
      checkedProp = _useContextSystem.checked,
      className = _useContextSystem.className,
      cssProp = _useContextSystem.css,
      defaultValue = _useContextSystem.defaultValue,
      idProp = _useContextSystem.id,
      _useContextSystem$onC = _useContextSystem.onChange,
      onChange = _useContextSystem$onC === void 0 ? _utils.noop : _useContextSystem$onC,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["checked", "className", "css", "defaultValue", "id", "onChange"]);

  var _useCheckboxGroupCont = (0, _CheckboxGroup.useCheckboxGroupContext)(),
      checkbox = _useCheckboxGroupCont.checkbox;

  var id = (0, _FormGroup.useFormGroupContextId)(idProp);

  var _useControlledState = (0, _utils.useControlledState)(checkedProp, {
    initial: defaultValue || false
  }),
      _useControlledState2 = (0, _slicedToArray2.default)(_useControlledState, 2),
      checked = _useControlledState2[0],
      setChecked = _useControlledState2[1];

  var classes = (0, _styles.cx)(styles.Checkbox, [(0, _styles.css)(cssProp), className]);
  var handleOnChange = (0, _react.useCallback)(function (event) {
    var next = event.target.checked;

    if (_utils.is.empty(checkbox)) {
      setChecked(next);
    }

    onChange(next, {
      event: event
    });
  }, [checkbox, onChange, setChecked]);
  var checkedState = _utils.is.empty(checkbox) ? checked : undefined;
  return /*#__PURE__*/_react.default.createElement(styles.CheckboxWrapperView, _styles.ui.$('CheckboxWrapper'), /*#__PURE__*/_react.default.createElement(_reakit.Checkbox, Object.assign({
    checked: checkedState
  }, otherProps, checkbox, {
    className: classes,
    id: id,
    onChange: handleOnChange,
    ref: forwardedRef
  })), /*#__PURE__*/_react.default.createElement(styles.CheckboxIconView, Object.assign({}, _styles.ui.$('CheckboxIcon'), {
    "aria-hidden": true
  }), /*#__PURE__*/_react.default.createElement(_Icon.Icon, {
    icon: _icons.check,
    size: 12
  })));
}

var _default = (0, _context.contextConnect)(CheckboxElement, 'CheckboxElement');

exports.default = _default;