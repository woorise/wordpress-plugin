/**
 * Forwards ref (React.ForwardRef) and "Connects" (or registers) a component
 * within the Context system under a specified namespace.
 *
 * This is an (experimental) evolution of the initial connect() HOC.
 * The hope is that we can improve render performance by removing functional
 * component wrappers.
 *
 * @template {import('@wp-g2/create-styles').ViewOwnProps<{}, any>} P
 * @param {import('react').ForwardRefRenderFunction<import('@wp-g2/create-styles').ElementTypeFromViewOwnProps<P>, P>} Component The component to register into the Context system.
 * @param {Array<string>|string} namespace The namespace to register the component under.
 * @param {object} options
 * @param {boolean} [options.memo=true]
 * @return {import('@wp-g2/create-styles').PolymorphicComponent<import('@wp-g2/create-styles').ElementTypeFromViewOwnProps<P>, import('@wp-g2/create-styles').PropsFromViewOwnProps<P>>}
 */
export function contextConnect<P extends import("@wp-g2/create-styles/types").ViewOwnProps<{}, any>>(Component: React.ForwardRefRenderFunction<import("@wp-g2/create-styles/types").ElementTypeFromViewOwnProps<P>, P>, namespace: Array<string> | string, options?: {
    memo: boolean | undefined;
}): import("@wp-g2/create-styles/types").PolymorphicComponent<import("@wp-g2/create-styles/types").ElementTypeFromViewOwnProps<P>, import("@wp-g2/create-styles/types").PropsFromViewOwnProps<P>>;
/**
 * Attempts to retrieve the connected namespace from a component.
 *
 * @param {import('react').ReactChild | undefined | {}} Component The component to retrieve a namespace from.
 * @returns {Array<string>} The connected namespaces.
 */
export function getConnectNamespace(Component: import('react').ReactChild | undefined | {}): Array<string>;
/**
 * Checks to see if a component is connected within the Context system.
 *
 * @param {import('react').ReactNode} Component The component to retrieve a namespace from.
 * @param {Array<string>|string} match The namespace to check.
 * @returns {boolean} The result.
 */
export function hasConnectNamespace(Component: import('react').ReactNode, match: Array<string> | string): boolean;
/**
 * Attempts to retrieve the connected namespace from a component.
 *
 * @param {import('react').ReactChild | undefined | {}} Component The component to retrieve a namespace from.
 * @returns {Array<string>} The connected namespaces.
 */
export function getNamespace(Component: import('react').ReactChild | undefined | {}): Array<string>;
/**
 * Checks to see if a component is connected within the Context system.
 *
 * @param {import('react').ReactNode} Component The component to retrieve a namespace from.
 * @param {Array<string>|string} match The namespace to check.
 * @returns {boolean} The result.
 */
export function hasNamespace(Component: import('react').ReactNode, match: Array<string> | string): boolean;
import React from "react";
//# sourceMappingURL=context-connect.d.ts.map