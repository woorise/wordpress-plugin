import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { createElement, Fragment } from "@wordpress/element";

/**
 * External dependencies
 */
import { View } from 'react-native';
/**
 * WordPress dependencies
 */

import { useNavigation } from '@react-navigation/native';
import { useState } from '@wordpress/element';
import { Icon, chevronRight, check } from '@wordpress/icons';
import { __, sprintf } from '@wordpress/i18n';
import { BottomSheet } from '@wordpress/components';
/**
 * Internal dependencies
 */

import styles from './style.scss';

var BottomSheetSelectControl = function BottomSheetSelectControl(_ref) {
  var label = _ref.label,
      items = _ref.options,
      onChange = _ref.onChange,
      selectedValue = _ref.value;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      showSubSheet = _useState2[0],
      setShowSubSheet = _useState2[1];

  var navigation = useNavigation();

  var onChangeValue = function onChangeValue(value) {
    return function () {
      goBack();
      onChange(value);
    };
  };

  var selectedOption = items.find(function (option) {
    return option.value === selectedValue;
  });

  var goBack = function goBack() {
    setShowSubSheet(false);
    navigation.goBack();
  };

  var openSubSheet = function openSubSheet() {
    navigation.navigate(BottomSheet.SubSheet.screenName);
    setShowSubSheet(true);
  };

  return createElement(BottomSheet.SubSheet, {
    navigationButton: createElement(BottomSheet.Cell, {
      label: label,
      separatorType: "none",
      value: selectedOption.label,
      onPress: openSubSheet,
      accessibilityRole: 'button',
      accessibilityLabel: selectedOption.label,
      accessibilityHint: sprintf( // translators: %s: Select control button label e.g. "Button width"
      __('Navigates to select %s'), selectedOption.label)
    }, createElement(Icon, {
      icon: chevronRight
    })),
    showSheet: showSubSheet
  }, createElement(Fragment, null, createElement(BottomSheet.NavigationHeader, {
    screen: label,
    leftButtonOnPress: goBack
  }), createElement(View, {
    style: styles.selectControl
  }, items.map(function (item, index) {
    return createElement(BottomSheet.Cell, {
      customActionButton: true,
      separatorType: "none",
      label: item.label,
      onPress: onChangeValue(item.value),
      leftAlign: true,
      key: index,
      accessibilityRole: 'button',
      accessibilityLabel: item.value === selectedValue ? sprintf( // translators: %s: Select control option value e.g: "Auto, 25%".
      __('Selected: %s'), item.label) : item.label,
      accessibilityHint: __('Double tap to select')
    }, item.value === selectedValue && createElement(Icon, {
      icon: check
    }));
  }))));
};

export default BottomSheetSelectControl;
//# sourceMappingURL=index.native.js.map