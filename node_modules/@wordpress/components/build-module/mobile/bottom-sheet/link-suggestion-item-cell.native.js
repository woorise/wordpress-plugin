import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { Text, View } from 'react-native';
/**
 * WordPress dependencies
 */

import { __ } from '@wordpress/i18n';
import { globe } from '@wordpress/icons';
import { usePreferredColorSchemeStyle } from '@wordpress/compose';
/**
 * Internal dependencies
 */

import Cell from './cell';
import cellStyles from './styles.scss';
import suggestionStyles from './link-suggestion-styles.scss';
import { posts, pages, empty } from '../gridicons';
var icons = {
  URL: globe,
  post: posts,
  page: pages
};

var getSummaryForType = function getSummaryForType(type) {
  switch (type) {
    case 'mailto':
      return __('Add this email link');

    case 'tel':
      return __('Add this telephone link');

    default:
      return __('Add this link');
  }
}; // we use some Cell styles here with a column flex-direction


function LinkSuggestionItemCell(_ref) {
  var suggestion = _ref.suggestion,
      onLinkPicked = _ref.onLinkPicked;
  var contentTitle = suggestion.title,
      url = suggestion.url,
      type = suggestion.type,
      isDirectEntry = suggestion.isDirectEntry;
  var title = isDirectEntry ? url : contentTitle;
  var summary = isDirectEntry ? getSummaryForType(type) : url;

  var pickLink = function pickLink() {
    return onLinkPicked(suggestion);
  };

  var cellTitleStyle = usePreferredColorSchemeStyle(cellStyles.cellLabel, cellStyles.cellTextDark);
  var cellSummaryStyle = usePreferredColorSchemeStyle(cellStyles.cellValue, cellStyles.cellTextDark);
  var titleStyle = [cellTitleStyle, suggestionStyles.titleStyle];
  var summaryStyle = [cellSummaryStyle, suggestionStyles.summaryStyle];
  return createElement(Cell, {
    icon: icons[type] || empty,
    onPress: pickLink,
    separatorType: 'none',
    cellContainerStyle: suggestionStyles.itemContainerStyle,
    labelStyle: suggestionStyles.hidden,
    valueStyle: suggestionStyles.hidden
  }, createElement(View, {
    style: suggestionStyles.containerStyle
  }, createElement(Text, {
    style: titleStyle,
    numberOfLines: 1,
    ellipsizeMode: 'middle'
  }, title), createElement(Text, {
    style: summaryStyle,
    numberOfLines: 1,
    ellipsizeMode: 'middle'
  }, summary)));
}

export default LinkSuggestionItemCell;
//# sourceMappingURL=link-suggestion-item-cell.native.js.map