function getFocalPointOffset(imageRatio, container, imageSize, focusPoint) {
  var containerCenter = Math.floor(container / 2);
  var scaledImage = Math.floor(imageSize / imageRatio);
  var focus = Math.floor(focusPoint * scaledImage);
  var focusOffset = focus - containerCenter;
  var offsetRest = scaledImage - focus;
  var containerRest = container - containerCenter;

  if (offsetRest < containerRest) {
    focusOffset -= containerRest - offsetRest;
  }

  if (focusOffset < 0) {
    focusOffset = 0;
  }

  return -focusOffset;
}

export function getImageWithFocalPointStyles(focalPoint, containerSize, originalImageData) {
  var imageStyle = {};

  if (focalPoint && containerSize && originalImageData) {
    var horizontalOffset = 0;
    var verticalOffset = 0;
    var widthRatio = originalImageData.width / containerSize.width;
    var heightRatio = originalImageData.height / containerSize.height;
    imageStyle.resizeMode = 'stretch';

    if (widthRatio > heightRatio) {
      horizontalOffset = getFocalPointOffset(heightRatio, containerSize.width, originalImageData.width, focalPoint.x);
      imageStyle.width = undefined;
      imageStyle.left = horizontalOffset;
    } else if (widthRatio < heightRatio) {
      verticalOffset = getFocalPointOffset(widthRatio, containerSize.height, originalImageData.height, focalPoint.y);
      imageStyle.height = undefined;
      imageStyle.top = verticalOffset;
    }

    return imageStyle;
  }

  return imageStyle;
}
//# sourceMappingURL=index.native.js.map