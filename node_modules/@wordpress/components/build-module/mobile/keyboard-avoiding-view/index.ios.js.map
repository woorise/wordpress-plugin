{"version":3,"sources":["@wordpress/components/src/mobile/keyboard-avoiding-view/index.ios.js"],"names":["KeyboardAvoidingView","IOSKeyboardAvoidingView","Animated","Keyboard","Dimensions","View","SafeArea","useEffect","useRef","useState","useResizeObserver","styles","AnimatedKeyboardAvoidingView","createAnimatedComponent","MIN_HEIGHT","parentHeight","style","withAnimatedHeight","otherProps","resizeObserver","sizes","isKeyboardOpen","setIsKeyboardOpen","safeAreaBottomInset","setSafeAreaBottomInset","height","animatedHeight","Value","current","get","fullHeight","keyboardVerticalOffset","getSafeAreaInsetsForRootView","then","safeAreaInsets","bottom","addEventListener","onSafeAreaInsetsUpdate","addListener","onKeyboardWillShow","onKeyboardWillHide","removeEventListener","removeListener","endCoordinates","setValue","duration","startCoordinates","keyboardIsOpenBreakpoint","animatedListenerId","value","timing","toValue","useNativeDriver","start","marginBottom","top","animatedChildStyle","defaultChildStyle","children"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tKeyboardAvoidingView as IOSKeyboardAvoidingView,\n\tAnimated,\n\tKeyboard,\n\tDimensions,\n\tView,\n} from 'react-native';\nimport SafeArea from 'react-native-safe-area';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect, useRef, useState } from '@wordpress/element';\nimport { useResizeObserver } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport styles from './styles.scss';\n\nconst AnimatedKeyboardAvoidingView = Animated.createAnimatedComponent(\n\tIOSKeyboardAvoidingView\n);\n\nconst MIN_HEIGHT = 44;\n\nexport const KeyboardAvoidingView = ( {\n\tparentHeight,\n\tstyle,\n\twithAnimatedHeight = false,\n\t...otherProps\n} ) => {\n\tconst [ resizeObserver, sizes ] = useResizeObserver();\n\tconst [ isKeyboardOpen, setIsKeyboardOpen ] = useState( false );\n\tconst [ safeAreaBottomInset, setSafeAreaBottomInset ] = useState( 0 );\n\tconst { height = 0 } = sizes || {};\n\n\tconst animatedHeight = useRef( new Animated.Value( MIN_HEIGHT ) ).current;\n\n\tconst { height: fullHeight } = Dimensions.get( 'window' );\n\tconst keyboardVerticalOffset = fullHeight - parentHeight;\n\n\tuseEffect( () => {\n\t\tSafeArea.getSafeAreaInsetsForRootView().then(\n\t\t\t( { safeAreaInsets } ) => {\n\t\t\t\tsetSafeAreaBottomInset( safeAreaInsets.bottom );\n\t\t\t}\n\t\t);\n\t\tSafeArea.addEventListener(\n\t\t\t'safeAreaInsetsForRootViewDidChange',\n\t\t\tonSafeAreaInsetsUpdate\n\t\t);\n\t\tKeyboard.addListener( 'keyboardWillShow', onKeyboardWillShow );\n\t\tKeyboard.addListener( 'keyboardWillHide', onKeyboardWillHide );\n\n\t\treturn () => {\n\t\t\tSafeArea.removeEventListener(\n\t\t\t\t'safeAreaInsetsForRootViewDidChange',\n\t\t\t\tonSafeAreaInsetsUpdate\n\t\t\t);\n\t\t\tKeyboard.removeListener( 'keyboardWillShow', onKeyboardWillShow );\n\t\t\tKeyboard.removeListener( 'keyboardWillHide', onKeyboardWillHide );\n\t\t};\n\t}, [] );\n\n\tfunction onSafeAreaInsetsUpdate( { safeAreaInsets } ) {\n\t\tsetSafeAreaBottomInset( safeAreaInsets.bottom );\n\t}\n\n\tfunction onKeyboardWillShow( { endCoordinates } ) {\n\t\tsetIsKeyboardOpen( true );\n\t\tanimatedHeight.setValue( endCoordinates.height + MIN_HEIGHT );\n\t}\n\n\tfunction onKeyboardWillHide( { duration, startCoordinates } ) {\n\t\t// The startCoordinates.height is set to wrong value when we use cmd + k for hide the keyboard (Have no idea why).\n\t\t// Because of that the `setIsKeyboardOpened` is not invoked and the state of keyboard is wrong.\n\t\t// The keyboardIsOpenBreakpoint use 100 as a fallback if the startCoordinates.height is too small (cmd + k case)\n\t\tconst keyboardIsOpenBreakpoint =\n\t\t\tstartCoordinates.height > 100 ? startCoordinates.height / 3 : 100;\n\t\tconst animatedListenerId = animatedHeight.addListener(\n\t\t\t( { value } ) => {\n\t\t\t\tif ( value < keyboardIsOpenBreakpoint ) {\n\t\t\t\t\tsetIsKeyboardOpen( false );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tAnimated.timing( animatedHeight, {\n\t\t\ttoValue: MIN_HEIGHT,\n\t\t\tduration,\n\t\t\tuseNativeDriver: false,\n\t\t} ).start( () => {\n\t\t\tanimatedHeight.removeListener( animatedListenerId );\n\t\t} );\n\t}\n\n\treturn (\n\t\t<AnimatedKeyboardAvoidingView\n\t\t\t{ ...otherProps }\n\t\t\tbehavior=\"padding\"\n\t\t\tkeyboardVerticalOffset={ keyboardVerticalOffset }\n\t\t\tstyle={\n\t\t\t\twithAnimatedHeight\n\t\t\t\t\t? [\n\t\t\t\t\t\t\tstyle,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\theight: animatedHeight,\n\t\t\t\t\t\t\t\tmarginBottom: isKeyboardOpen\n\t\t\t\t\t\t\t\t\t? -safeAreaBottomInset\n\t\t\t\t\t\t\t\t\t: 0,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ]\n\t\t\t\t\t: style\n\t\t\t}\n\t\t>\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\t{\n\t\t\t\t\t\ttop: -height + MIN_HEIGHT,\n\t\t\t\t\t},\n\t\t\t\t\tstyles.animatedChildStyle,\n\t\t\t\t\t! withAnimatedHeight && styles.defaultChildStyle,\n\t\t\t\t] }\n\t\t\t>\n\t\t\t\t{ resizeObserver }\n\t\t\t\t{ otherProps.children }\n\t\t\t</View>\n\t\t</AnimatedKeyboardAvoidingView>\n\t);\n};\n\nexport default KeyboardAvoidingView;\n"]}