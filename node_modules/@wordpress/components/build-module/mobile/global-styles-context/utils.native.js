import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";

/**
 * External dependencies
 */
import { find, startsWith } from 'lodash';
export var BLOCK_STYLE_ATTRIBUTES = ['textColor', 'backgroundColor']; // Mapping style properties name to native

var BLOCK_STYLE_ATTRIBUTES_MAPPING = {
  textColor: 'color'
};
var PADDING = 12; // solid-border-space

export function getBlockPaddings(mergedStyle, wrapperPropsStyle, blockStyleAttributes) {
  var blockPaddings = {};

  if (!mergedStyle.padding && (wrapperPropsStyle !== null && wrapperPropsStyle !== void 0 && wrapperPropsStyle.backgroundColor || blockStyleAttributes !== null && blockStyleAttributes !== void 0 && blockStyleAttributes.backgroundColor)) {
    blockPaddings.padding = PADDING;
    return blockPaddings;
  } // Prevent adding extra paddings to inner blocks without background colors


  if (mergedStyle !== null && mergedStyle !== void 0 && mergedStyle.padding && !(wrapperPropsStyle !== null && wrapperPropsStyle !== void 0 && wrapperPropsStyle.backgroundColor) && !(blockStyleAttributes !== null && blockStyleAttributes !== void 0 && blockStyleAttributes.backgroundColor)) {
    blockPaddings.padding = undefined;
  }

  return blockPaddings;
}
export function getBlockColors(blockStyleAttributes, defaultColors) {
  var blockStyles = {};
  Object.entries(blockStyleAttributes).forEach(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];

    var isCustomColor = startsWith(value, '#');
    var styleKey = key;

    if (BLOCK_STYLE_ATTRIBUTES_MAPPING[styleKey]) {
      styleKey = BLOCK_STYLE_ATTRIBUTES_MAPPING[styleKey];
    }

    if (!isCustomColor) {
      var mappedColor = find(defaultColors, {
        slug: value
      });

      if (mappedColor) {
        blockStyles[styleKey] = mappedColor.color;
      }
    } else {
      blockStyles[styleKey] = value;
    }
  });
  return blockStyles;
}
//# sourceMappingURL=utils.native.js.map