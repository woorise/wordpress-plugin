import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import { createElement } from "@wordpress/element";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

/**
 * External dependencies
 */
import { compact } from 'lodash';
/**
 * WordPress dependencies
 */

import { Component } from '@wordpress/element';
import { __ } from '@wordpress/i18n';
import { Picker } from '@wordpress/components';
import { requestMediaEditor, mediaSources } from '@wordpress/react-native-bridge';
export var MEDIA_TYPE_IMAGE = 'image';
export var MEDIA_EDITOR = 'MEDIA_EDITOR';
var editOption = {
  id: MEDIA_EDITOR,
  value: MEDIA_EDITOR,
  label: __('Edit'),
  requiresModal: true,
  types: [MEDIA_TYPE_IMAGE]
};
var replaceOption = {
  id: mediaSources.deviceLibrary,
  value: mediaSources.deviceLibrary,
  label: __('Replace'),
  types: [MEDIA_TYPE_IMAGE]
};
export var MediaEdit = /*#__PURE__*/function (_Component) {
  _inherits(MediaEdit, _Component);

  var _super = _createSuper(MediaEdit);

  function MediaEdit(props) {
    var _this;

    _classCallCheck(this, MediaEdit);

    _this = _super.call(this, props);
    _this.onPickerPresent = _this.onPickerPresent.bind(_assertThisInitialized(_this));
    _this.onPickerSelect = _this.onPickerSelect.bind(_assertThisInitialized(_this));
    _this.getMediaOptionsItems = _this.getMediaOptionsItems.bind(_assertThisInitialized(_this));
    _this.getDestructiveButtonIndex = _this.getDestructiveButtonIndex.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(MediaEdit, [{
    key: "getMediaOptionsItems",
    value: function getMediaOptionsItems() {
      var _this$props = this.props,
          pickerOptions = _this$props.pickerOptions,
          openReplaceMediaOptions = _this$props.openReplaceMediaOptions,
          source = _this$props.source;
      return compact([(source === null || source === void 0 ? void 0 : source.uri) && editOption, openReplaceMediaOptions && replaceOption].concat(_toConsumableArray(pickerOptions ? pickerOptions : [])));
    }
  }, {
    key: "getDestructiveButtonIndex",
    value: function getDestructiveButtonIndex() {
      var options = this.getMediaOptionsItems();
      var destructiveButtonIndex = options.findIndex(function (option) {
        return option === null || option === void 0 ? void 0 : option.destructiveButton;
      });
      return destructiveButtonIndex !== -1 ? destructiveButtonIndex + 1 : undefined;
    }
  }, {
    key: "onPickerPresent",
    value: function onPickerPresent() {
      if (this.picker) {
        this.picker.presentPicker();
      }
    }
  }, {
    key: "onPickerSelect",
    value: function onPickerSelect(value) {
      var _this$props2 = this.props,
          onSelect = _this$props2.onSelect,
          pickerOptions = _this$props2.pickerOptions,
          _this$props2$multiple = _this$props2.multiple,
          multiple = _this$props2$multiple === void 0 ? false : _this$props2$multiple,
          openReplaceMediaOptions = _this$props2.openReplaceMediaOptions;

      switch (value) {
        case MEDIA_EDITOR:
          requestMediaEditor(this.props.source.uri, function (media) {
            if (multiple && media || media && media.id) {
              onSelect(media);
            }
          });
          break;

        default:
          var optionSelected = pickerOptions && pickerOptions.find(function (option) {
            return option.id === value;
          });

          if (optionSelected && optionSelected.onPress) {
            optionSelected.onPress();
            return;
          }

          if (openReplaceMediaOptions) {
            openReplaceMediaOptions();
          }

      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var mediaOptions = function mediaOptions() {
        return createElement(Picker, {
          hideCancelButton: true,
          ref: function ref(instance) {
            return _this2.picker = instance;
          },
          options: _this2.getMediaOptionsItems(),
          leftAlign: true,
          onChange: _this2.onPickerSelect // translators: %s: block title e.g: "Paragraph".
          ,
          title: __('Media options'),
          destructiveButtonIndex: _this2.getDestructiveButtonIndex()
        });
      };

      return this.props.render({
        open: this.onPickerPresent,
        mediaOptions: mediaOptions
      });
    }
  }]);

  return MediaEdit;
}(Component);
export default MediaEdit;
//# sourceMappingURL=index.native.js.map