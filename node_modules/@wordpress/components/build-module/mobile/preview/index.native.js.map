{"version":3,"sources":["@wordpress/components/src/mobile/preview/index.native.js"],"names":["BlockEditorProvider","BlockList","usePreferredColorSchemeStyle","useSelect","View","styles","BlockPreview","blocks","currentSettings","select","getSettings","settings","readOnly","header","previewHeader","flex","displayName","Preview","props","previewContentStyle","previewContent","previewContentDark","undefined"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,SAASA,mBAAT,EAA8BC,SAA9B,QAA+C,yBAA/C;AACA,SAASC,4BAAT,QAA6C,oBAA7C;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;;AACA,SAASC,IAAT,QAAqB,cAArB;AAEA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAdC,MAAc,QAAdA,MAAc;AACtC,MAAMC,eAAe,GAAGL,SAAS,CAAE,UAAEM,MAAF,EAAc;AAChD,WAAOA,MAAM,CAAE,mBAAF,CAAN,CAA8BC,WAA9B,EAAP;AACA,GAFgC,CAAjC;;AAGA,MAAMC,QAAQ,mCACVH,eADU;AAEbI,IAAAA,QAAQ,EAAE;AAFG,IAAd;;AAKA,MAAMC,MAAM,GAAG,cAAC,IAAD;AAAM,IAAA,KAAK,EAAGR,MAAM,CAACS;AAArB,IAAf;AAEA,SACC,cAAC,mBAAD;AAAqB,IAAA,KAAK,EAAGP,MAA7B;AAAsC,IAAA,QAAQ,EAAGI;AAAjD,KACC,cAAC,IAAD;AAAM,IAAA,KAAK,EAAG;AAAEI,MAAAA,IAAI,EAAE;AAAR;AAAd,KACC,cAAC,SAAD;AAAW,IAAA,MAAM,EAAGF;AAApB,IADD,CADD,CADD;AAOA,CAlBD;;AAmBAP,YAAY,CAACU,WAAb,GAA2B,cAA3B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAEC,KAAF,EAAa;AAAA,MACpBX,MADoB,GACTW,KADS,CACpBX,MADoB;AAE5B,MAAMY,mBAAmB,GAAGjB,4BAA4B,CACvDG,MAAM,CAACe,cADgD,EAEvDf,MAAM,CAACgB,kBAFgD,CAAxD;;AAKA,MAAKd,MAAM,KAAKe,SAAhB,EAA4B;AAC3B,WAAO,IAAP;AACA;;AACD,SACC,cAAC,IAAD;AAAM,IAAA,KAAK,EAAGH;AAAd,KACC,cAAC,YAAD;AAAc,IAAA,MAAM,EAAGZ;AAAvB,IADD,CADD;AAKA,CAfD;;AAiBA,eAAeU,OAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { BlockEditorProvider, BlockList } from '@wordpress/block-editor';\nimport { usePreferredColorSchemeStyle } from '@wordpress/compose';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * Internal dependencies\n */\nimport styles from './styles.scss';\n\n// We are replicating this here because the one in @wordpress/block-editor always\n// tries to scale the preview and we would need a lot of cross platform code to handle\n// sizes, when we actually want to show the preview at full width.\n//\n// We can make it work here first, then figure out the right way to consolidate\n// both implementations\nconst BlockPreview = ( { blocks } ) => {\n\tconst currentSettings = useSelect( ( select ) => {\n\t\treturn select( 'core/block-editor' ).getSettings();\n\t} );\n\tconst settings = {\n\t\t...currentSettings,\n\t\treadOnly: true,\n\t};\n\n\tconst header = <View style={ styles.previewHeader } />;\n\n\treturn (\n\t\t<BlockEditorProvider value={ blocks } settings={ settings }>\n\t\t\t<View style={ { flex: 1 } }>\n\t\t\t\t<BlockList header={ header } />\n\t\t\t</View>\n\t\t</BlockEditorProvider>\n\t);\n};\nBlockPreview.displayName = 'BlockPreview';\n\nconst Preview = ( props ) => {\n\tconst { blocks } = props;\n\tconst previewContentStyle = usePreferredColorSchemeStyle(\n\t\tstyles.previewContent,\n\t\tstyles.previewContentDark\n\t);\n\n\tif ( blocks === undefined ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<View style={ previewContentStyle }>\n\t\t\t<BlockPreview blocks={ blocks } />\n\t\t</View>\n\t);\n};\n\nexport default Preview;\n"]}