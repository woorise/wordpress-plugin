import _extends from "@babel/runtime/helpers/esm/extends";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
import { uniqueId } from 'lodash';
/**
 * WordPress dependencies
 */

import { useState } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { useNavigationContext } from '../context';
import { useNavigationTreeItem } from './use-navigation-tree-item';
import { ItemBaseUI } from '../styles/navigation-styles';
export default function NavigationItemBase(props) {
  var _navigationTree$getIt;

  var children = props.children,
      className = props.className,
      restProps = _objectWithoutProperties(props, ["children", "className"]);

  var _useState = useState(uniqueId('item-')),
      _useState2 = _slicedToArray(_useState, 1),
      itemId = _useState2[0];

  useNavigationTreeItem(itemId, props);

  var _useNavigationContext = useNavigationContext(),
      navigationTree = _useNavigationContext.navigationTree;

  if (!((_navigationTree$getIt = navigationTree.getItem(itemId)) !== null && _navigationTree$getIt !== void 0 && _navigationTree$getIt._isVisible)) {
    return null;
  }

  var classes = classnames('components-navigation__item', className);
  return createElement(ItemBaseUI, _extends({
    className: classes
  }, restProps), children);
}
//# sourceMappingURL=base.js.map