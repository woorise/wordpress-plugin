import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * WordPress dependencies
 */
import { useEffect } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { useNavigationContext } from '../context';
import { ROOT_MENU } from '../constants';
export var useNavigationTreeMenu = function useNavigationTreeMenu(props) {
  var _useNavigationContext = useNavigationContext(),
      _useNavigationContext2 = _useNavigationContext.navigationTree,
      addMenu = _useNavigationContext2.addMenu,
      removeMenu = _useNavigationContext2.removeMenu;

  var key = props.menu || ROOT_MENU;
  useEffect(function () {
    addMenu(key, _objectSpread(_objectSpread({}, props), {}, {
      menu: key
    }));
    return function () {
      removeMenu(key);
    };
  }, []);
};
//# sourceMappingURL=use-navigation-tree-menu.js.map