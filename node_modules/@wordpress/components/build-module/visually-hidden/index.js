import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { forwardRef } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { renderAsRenderProps } from './utils';
import { withNextComponent } from './next';
/**
 * @template {keyof JSX.IntrinsicElements | import('react').JSXElementConstructor<any>} T
 * @typedef OwnProps
 * @property {T} [as='div'] Component to render, e.g. `"div"` or `MyComponent`.
 */

/**
 * @template {keyof JSX.IntrinsicElements | import('react').JSXElementConstructor<any>} T
 * @typedef {OwnProps<T> & import('react').ComponentPropsWithRef<T>} Props
 */

/**
 * VisuallyHidden component to render text out non-visually
 * for use in devices such as a screen reader.
 *
 * @template {keyof JSX.IntrinsicElements | import('react').JSXElementConstructor<any>} T T
 * @param {Props<T>} props
 * @param {import('react').Ref<any>} forwardedRef
 * @return {JSX.Element} Element
 */

function VisuallyHidden(_ref, forwardedRef) {
  var _ref$as = _ref.as,
      as = _ref$as === void 0 ? 'div' : _ref$as,
      className = _ref.className,
      props = _objectWithoutProperties(_ref, ["as", "className"]);

  return renderAsRenderProps(_objectSpread(_objectSpread({
    as: as,
    className: classnames('components-visually-hidden', className)
  }, props), {}, {
    ref: forwardedRef
  }));
}

export default withNextComponent(forwardRef(VisuallyHidden));
//# sourceMappingURL=index.js.map