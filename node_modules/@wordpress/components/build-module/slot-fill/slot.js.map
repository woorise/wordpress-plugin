{"version":3,"sources":["@wordpress/components/src/slot-fill/slot.js"],"names":["isFunction","isString","map","negate","Children","Component","cloneElement","isEmptyElement","SlotFillContext","SlotComponent","arguments","isUnmounted","bindNode","bind","registerSlot","props","name","unregisterSlot","prevProps","node","children","fillProps","getFills","fills","fill","fillChildren","child","childIndex","childKey","key","filter","Slot"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { isFunction, isString, map, negate } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tChildren,\n\tComponent,\n\tcloneElement,\n\tisEmptyElement,\n} from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport SlotFillContext from './context';\n\nclass SlotComponent extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.isUnmounted = false;\n\t\tthis.bindNode = this.bindNode.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { registerSlot } = this.props;\n\n\t\tregisterSlot( this.props.name, this );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst { unregisterSlot } = this.props;\n\t\tthis.isUnmounted = true;\n\t\tunregisterSlot( this.props.name, this );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst { name, unregisterSlot, registerSlot } = this.props;\n\n\t\tif ( prevProps.name !== name ) {\n\t\t\tunregisterSlot( prevProps.name );\n\t\t\tregisterSlot( name, this );\n\t\t}\n\t}\n\n\tbindNode( node ) {\n\t\tthis.node = node;\n\t}\n\n\tforceUpdate() {\n\t\tif ( this.isUnmounted ) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.forceUpdate();\n\t}\n\n\trender() {\n\t\tconst { children, name, fillProps = {}, getFills } = this.props;\n\n\t\tconst fills = map( getFills( name, this ), ( fill ) => {\n\t\t\tconst fillChildren = isFunction( fill.children )\n\t\t\t\t? fill.children( fillProps )\n\t\t\t\t: fill.children;\n\n\t\t\treturn Children.map( fillChildren, ( child, childIndex ) => {\n\t\t\t\tif ( ! child || isString( child ) ) {\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\n\t\t\t\tconst childKey = child.key || childIndex;\n\t\t\t\treturn cloneElement( child, { key: childKey } );\n\t\t\t} );\n\t\t} ).filter(\n\t\t\t// In some cases fills are rendered only when some conditions apply.\n\t\t\t// This ensures that we only use non-empty fills when rendering, i.e.,\n\t\t\t// it allows us to render wrappers only when the fills are actually present.\n\t\t\tnegate( isEmptyElement )\n\t\t);\n\n\t\treturn <>{ isFunction( children ) ? children( fills ) : fills }</>;\n\t}\n}\n\nconst Slot = ( props ) => (\n\t<SlotFillContext.Consumer>\n\t\t{ ( { registerSlot, unregisterSlot, getFills } ) => (\n\t\t\t<SlotComponent\n\t\t\t\t{ ...props }\n\t\t\t\tregisterSlot={ registerSlot }\n\t\t\t\tunregisterSlot={ unregisterSlot }\n\t\t\t\tgetFills={ getFills }\n\t\t\t/>\n\t\t) }\n\t</SlotFillContext.Consumer>\n);\n\nexport default Slot;\n"]}