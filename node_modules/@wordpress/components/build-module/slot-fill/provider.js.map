{"version":3,"sources":["@wordpress/components/src/slot-fill/provider.js"],"names":["without","Component","SlotFillContext","SlotFillProvider","arguments","registerSlot","bind","registerFill","unregisterSlot","unregisterFill","getSlot","getFills","hasFills","subscribe","slots","fills","listeners","contextValue","name","slot","previousSlot","triggerListeners","forceUpdateSlot","forceUpdate","instance","slotInstance","length","forEach","listener","push","props","children"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { without } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport SlotFillContext from './context';\n\nexport default class SlotFillProvider extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.registerSlot = this.registerSlot.bind( this );\n\t\tthis.registerFill = this.registerFill.bind( this );\n\t\tthis.unregisterSlot = this.unregisterSlot.bind( this );\n\t\tthis.unregisterFill = this.unregisterFill.bind( this );\n\t\tthis.getSlot = this.getSlot.bind( this );\n\t\tthis.getFills = this.getFills.bind( this );\n\t\tthis.hasFills = this.hasFills.bind( this );\n\t\tthis.subscribe = this.subscribe.bind( this );\n\n\t\tthis.slots = {};\n\t\tthis.fills = {};\n\t\tthis.listeners = [];\n\t\tthis.contextValue = {\n\t\t\tregisterSlot: this.registerSlot,\n\t\t\tunregisterSlot: this.unregisterSlot,\n\t\t\tregisterFill: this.registerFill,\n\t\t\tunregisterFill: this.unregisterFill,\n\t\t\tgetSlot: this.getSlot,\n\t\t\tgetFills: this.getFills,\n\t\t\thasFills: this.hasFills,\n\t\t\tsubscribe: this.subscribe,\n\t\t};\n\t}\n\n\tregisterSlot( name, slot ) {\n\t\tconst previousSlot = this.slots[ name ];\n\t\tthis.slots[ name ] = slot;\n\t\tthis.triggerListeners();\n\n\t\t// Sometimes the fills are registered after the initial render of slot\n\t\t// But before the registerSlot call, we need to rerender the slot\n\t\tthis.forceUpdateSlot( name );\n\n\t\t// If a new instance of a slot is being mounted while another with the\n\t\t// same name exists, force its update _after_ the new slot has been\n\t\t// assigned into the instance, such that its own rendering of children\n\t\t// will be empty (the new Slot will subsume all fills for this name).\n\t\tif ( previousSlot ) {\n\t\t\tpreviousSlot.forceUpdate();\n\t\t}\n\t}\n\n\tregisterFill( name, instance ) {\n\t\tthis.fills[ name ] = [ ...( this.fills[ name ] || [] ), instance ];\n\t\tthis.forceUpdateSlot( name );\n\t}\n\n\tunregisterSlot( name, instance ) {\n\t\t// If a previous instance of a Slot by this name unmounts, do nothing,\n\t\t// as the slot and its fills should only be removed for the current\n\t\t// known instance.\n\t\tif ( this.slots[ name ] !== instance ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete this.slots[ name ];\n\t\tthis.triggerListeners();\n\t}\n\n\tunregisterFill( name, instance ) {\n\t\tthis.fills[ name ] = without( this.fills[ name ], instance );\n\t\tthis.forceUpdateSlot( name );\n\t}\n\n\tgetSlot( name ) {\n\t\treturn this.slots[ name ];\n\t}\n\n\tgetFills( name, slotInstance ) {\n\t\t// Fills should only be returned for the current instance of the slot\n\t\t// in which they occupy.\n\t\tif ( this.slots[ name ] !== slotInstance ) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this.fills[ name ];\n\t}\n\n\thasFills( name ) {\n\t\treturn this.fills[ name ] && !! this.fills[ name ].length;\n\t}\n\n\tforceUpdateSlot( name ) {\n\t\tconst slot = this.getSlot( name );\n\n\t\tif ( slot ) {\n\t\t\tslot.forceUpdate();\n\t\t}\n\t}\n\n\ttriggerListeners() {\n\t\tthis.listeners.forEach( ( listener ) => listener() );\n\t}\n\n\tsubscribe( listener ) {\n\t\tthis.listeners.push( listener );\n\n\t\treturn () => {\n\t\t\tthis.listeners = without( this.listeners, listener );\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<SlotFillContext.Provider value={ this.contextValue }>\n\t\t\t\t{ this.props.children }\n\t\t\t</SlotFillContext.Provider>\n\t\t);\n\t}\n}\n"]}