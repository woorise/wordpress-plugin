{"version":3,"sources":["@wordpress/components/src/text-control/index.js"],"names":["useInstanceId","forwardRef","BaseControl","TextControl","ref","label","hideLabelFromVision","value","help","className","onChange","type","props","instanceId","id","onChangeValue","event","target","undefined"],"mappings":";;;;AAAA;AACA;AACA;AACA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,OAWCC,GAXD,EAYE;AAAA,MAVAC,KAUA,QAVAA,KAUA;AAAA,MATAC,mBASA,QATAA,mBASA;AAAA,MARAC,KAQA,QARAA,KAQA;AAAA,MAPAC,IAOA,QAPAA,IAOA;AAAA,MANAC,SAMA,QANAA,SAMA;AAAA,MALAC,QAKA,QALAA,QAKA;AAAA,uBAJAC,IAIA;AAAA,MAJAA,IAIA,0BAJO,MAIP;AAAA,MAHGC,KAGH;;AACD,MAAMC,UAAU,GAAGb,aAAa,CAAEG,WAAF,CAAhC;AACA,MAAMW,EAAE,oCAA8BD,UAA9B,CAAR;;AACA,MAAME,aAAa,GAAG,SAAhBA,aAAgB;AACrB;AACAC,EAAAA,KAFqB;AAAA,WAGjBN,QAAQ,CAAEM,KAAK,CAACC,MAAN,CAAaV,KAAf,CAHS;AAAA,GAAtB;;AAKA,SACC,cAAC,WAAD;AACC,IAAA,KAAK,EAAGF,KADT;AAEC,IAAA,mBAAmB,EAAGC,mBAFvB;AAGC,IAAA,EAAE,EAAGQ,EAHN;AAIC,IAAA,IAAI,EAAGN,IAJR;AAKC,IAAA,SAAS,EAAGC;AALb,KAOC;AACC,IAAA,SAAS,EAAC,gCADX;AAEC,IAAA,IAAI,EAAGE,IAFR;AAGC,IAAA,EAAE,EAAGG,EAHN;AAIC,IAAA,KAAK,EAAGP,KAJT;AAKC,IAAA,QAAQ,EAAGQ,aALZ;AAMC,wBAAmB,CAAC,CAAEP,IAAH,GAAUM,EAAE,GAAG,QAAf,GAA0BI,SAN9C;AAOC,IAAA,GAAG,EAAGd;AAPP,KAQMQ,KARN,EAPD,CADD;AAoBA;;AAED,eAAeX,UAAU,CAAEE,WAAF,CAAzB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useInstanceId } from '@wordpress/compose';\nimport { forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport BaseControl from '../base-control';\n\n/**\n * @typedef OwnProps\n * @property {string} label Label for the control.\n * @property {boolean} [hideLabelFromVision] Whether to accessibly hide the label.\n * @property {string} value Value of the input.\n * @property {string} [help] Optional help text for the control.\n * @property {string} [className] Classname passed to BaseControl wrapper\n * @property {(value: string) => void} onChange Handle changes.\n * @property {string} [type='text'] Type of the input.\n */\n\n/** @typedef {OwnProps & import('react').ComponentProps<'input'>} Props */\n\n/**\n *\n * @param {Props} props Props\n * @param {import('react').Ref<HTMLInputElement>} [ref]\n */\nfunction TextControl(\n\t{\n\t\tlabel,\n\t\thideLabelFromVision,\n\t\tvalue,\n\t\thelp,\n\t\tclassName,\n\t\tonChange,\n\t\ttype = 'text',\n\t\t...props\n\t},\n\tref\n) {\n\tconst instanceId = useInstanceId( TextControl );\n\tconst id = `inspector-text-control-${ instanceId }`;\n\tconst onChangeValue = (\n\t\t/** @type {import('react').ChangeEvent<HTMLInputElement>} */\n\t\tevent\n\t) => onChange( event.target.value );\n\n\treturn (\n\t\t<BaseControl\n\t\t\tlabel={ label }\n\t\t\thideLabelFromVision={ hideLabelFromVision }\n\t\t\tid={ id }\n\t\t\thelp={ help }\n\t\t\tclassName={ className }\n\t\t>\n\t\t\t<input\n\t\t\t\tclassName=\"components-text-control__input\"\n\t\t\t\ttype={ type }\n\t\t\t\tid={ id }\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ onChangeValue }\n\t\t\t\taria-describedby={ !! help ? id + '__help' : undefined }\n\t\t\t\tref={ ref }\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t</BaseControl>\n\t);\n}\n\nexport default forwardRef( TextControl );\n"]}