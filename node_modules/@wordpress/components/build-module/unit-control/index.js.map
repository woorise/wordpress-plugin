{"version":3,"sources":["@wordpress/components/src/unit-control/index.js"],"names":["noop","omit","classnames","forwardRef","useRef","__","ENTER","inputControlActionTypes","composeStateReducers","Root","ValueInput","UnitSelectControl","CSS_UNITS","getParsedValue","getValidParsedUnit","useControlledState","UnitControl","ref","__unstableStateReducer","stateReducer","state","autoComplete","className","disabled","disableUnits","isPressEnterToChange","isResetValueOnUnitChange","isUnitSelectTabbable","label","onChange","onUnitChange","size","style","unitProp","unit","units","valueProp","value","props","initialUnit","initial","setUnit","refParsedValue","classes","handleOnChange","next","changeProps","join","handleOnUnitChange","data","nextValue","default","undefined","mayUpdateUnit","event","isNaN","target","current","parsedValue","parsedUnit","find","option","handleOnBlur","handleOnKeyDown","keyCode","unitControlStateReducer","action","type","COMMIT","inputSuffix","ForwardedUnitControl"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { noop, omit } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef, useRef } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { ENTER } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport {\n\tinputControlActionTypes,\n\tcomposeStateReducers,\n} from '../input-control/state';\nimport { Root, ValueInput } from './styles/unit-control-styles';\nimport UnitSelectControl from './unit-select-control';\nimport { CSS_UNITS, getParsedValue, getValidParsedUnit } from './utils';\nimport { useControlledState } from '../utils/hooks';\n\nfunction UnitControl(\n\t{\n\t\t__unstableStateReducer: stateReducer = ( state ) => state,\n\t\tautoComplete = 'off',\n\t\tclassName,\n\t\tdisabled = false,\n\t\tdisableUnits = false,\n\t\tisPressEnterToChange = false,\n\t\tisResetValueOnUnitChange = false,\n\t\tisUnitSelectTabbable = true,\n\t\tlabel,\n\t\tonChange = noop,\n\t\tonUnitChange = noop,\n\t\tsize = 'default',\n\t\tstyle,\n\t\tunit: unitProp,\n\t\tunits = CSS_UNITS,\n\t\tvalue: valueProp,\n\t\t...props\n\t},\n\tref\n) {\n\tconst [ value, initialUnit ] = getParsedValue( valueProp, unitProp, units );\n\tconst [ unit, setUnit ] = useControlledState( unitProp, {\n\t\tinitial: initialUnit,\n\t} );\n\n\t// Stores parsed value for hand-off in state reducer\n\tconst refParsedValue = useRef( null );\n\n\tconst classes = classnames( 'components-unit-control', className );\n\n\tconst handleOnChange = ( next, changeProps ) => {\n\t\tif ( next === '' ) {\n\t\t\tonChange( '', changeProps );\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t * Customizing the onChange callback.\n\t\t * This allows as to broadcast a combined value+unit to onChange.\n\t\t */\n\t\tnext = getValidParsedUnit( next, units, value, unit ).join( '' );\n\n\t\tonChange( next, changeProps );\n\t};\n\n\tconst handleOnUnitChange = ( next, changeProps ) => {\n\t\tconst { data } = changeProps;\n\n\t\tlet nextValue = `${ value }${ next }`;\n\n\t\tif ( isResetValueOnUnitChange && data?.default !== undefined ) {\n\t\t\tnextValue = `${ data.default }${ next }`;\n\t\t}\n\n\t\tonChange( nextValue, changeProps );\n\t\tonUnitChange( next, changeProps );\n\n\t\tsetUnit( next );\n\t};\n\n\tconst mayUpdateUnit = ( event ) => {\n\t\tif ( ! isNaN( event.target.value ) ) {\n\t\t\trefParsedValue.current = null;\n\t\t\treturn;\n\t\t}\n\t\tconst [ parsedValue, parsedUnit ] = getValidParsedUnit(\n\t\t\tevent.target.value,\n\t\t\tunits,\n\t\t\tvalue,\n\t\t\tunit\n\t\t);\n\n\t\trefParsedValue.current = parsedValue;\n\n\t\tif ( isPressEnterToChange && parsedUnit !== unit ) {\n\t\t\tconst data = units.find(\n\t\t\t\t( option ) => option.value === parsedUnit\n\t\t\t);\n\t\t\tconst changeProps = { event, data };\n\n\t\t\tonChange( `${ parsedValue }${ parsedUnit }`, changeProps );\n\t\t\tonUnitChange( parsedUnit, changeProps );\n\n\t\t\tsetUnit( parsedUnit );\n\t\t}\n\t};\n\n\tconst handleOnBlur = mayUpdateUnit;\n\n\tconst handleOnKeyDown = ( event ) => {\n\t\tconst { keyCode } = event;\n\t\tif ( keyCode === ENTER ) {\n\t\t\tmayUpdateUnit( event );\n\t\t}\n\t};\n\n\t/**\n\t * \"Middleware\" function that intercepts updates from InputControl.\n\t * This allows us to tap into actions to transform the (next) state for\n\t * InputControl.\n\t *\n\t * @param {Object} state State from InputControl\n\t * @param {Object} action Action triggering state change\n\t * @return {Object} The updated state to apply to InputControl\n\t */\n\tconst unitControlStateReducer = ( state, action ) => {\n\t\t/*\n\t\t * On commits (when pressing ENTER and on blur if\n\t\t * isPressEnterToChange is true), if a parse has been performed\n\t\t * then use that result to update the state.\n\t\t */\n\t\tif ( action.type === inputControlActionTypes.COMMIT ) {\n\t\t\tif ( refParsedValue.current !== null ) {\n\t\t\t\tstate.value = refParsedValue.current;\n\t\t\t\trefParsedValue.current = null;\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t};\n\n\tconst inputSuffix = ! disableUnits ? (\n\t\t<UnitSelectControl\n\t\t\taria-label={ __( 'Select unit' ) }\n\t\t\tdisabled={ disabled }\n\t\t\tisTabbable={ isUnitSelectTabbable }\n\t\t\toptions={ units }\n\t\t\tonChange={ handleOnUnitChange }\n\t\t\tsize={ size }\n\t\t\tvalue={ unit }\n\t\t/>\n\t) : null;\n\n\treturn (\n\t\t<Root className=\"components-unit-control-wrapper\" style={ style }>\n\t\t\t<ValueInput\n\t\t\t\taria-label={ label }\n\t\t\t\ttype={ isPressEnterToChange ? 'text' : 'number' }\n\t\t\t\t{ ...omit( props, [ 'children' ] ) }\n\t\t\t\tautoComplete={ autoComplete }\n\t\t\t\tclassName={ classes }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\tdisableUnits={ disableUnits }\n\t\t\t\tisPressEnterToChange={ isPressEnterToChange }\n\t\t\t\tlabel={ label }\n\t\t\t\tonBlur={ handleOnBlur }\n\t\t\t\tonKeyDown={ handleOnKeyDown }\n\t\t\t\tonChange={ handleOnChange }\n\t\t\t\tref={ ref }\n\t\t\t\tsize={ size }\n\t\t\t\tsuffix={ inputSuffix }\n\t\t\t\tvalue={ value }\n\t\t\t\t__unstableStateReducer={ composeStateReducers(\n\t\t\t\t\tunitControlStateReducer,\n\t\t\t\t\tstateReducer\n\t\t\t\t) }\n\t\t\t/>\n\t\t</Root>\n\t);\n}\n\nconst ForwardedUnitControl = forwardRef( UnitControl );\n\nexport default ForwardedUnitControl;\n"]}