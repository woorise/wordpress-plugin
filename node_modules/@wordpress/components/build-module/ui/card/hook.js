import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * External dependencies
 */
import { useContextSystem } from '@wp-g2/context';
import { cx } from '@wp-g2/styles';
/**
 * WordPress dependencies
 */

import { useMemo } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { useSurface } from '../surface';
import * as styles from './styles';
/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').CardProps, 'div'>} props
 */

export function useCard(props) {
  var _useContextSystem = useContextSystem(props, 'Card'),
      className = _useContextSystem.className,
      _useContextSystem$ele = _useContextSystem.elevation,
      elevation = _useContextSystem$ele === void 0 ? 2 : _useContextSystem$ele,
      _useContextSystem$isB = _useContextSystem.isBorderless,
      isBorderless = _useContextSystem$isB === void 0 ? false : _useContextSystem$isB,
      _useContextSystem$isR = _useContextSystem.isRounded,
      isRounded = _useContextSystem$isR === void 0 ? true : _useContextSystem$isR,
      otherProps = _objectWithoutProperties(_useContextSystem, ["className", "elevation", "isBorderless", "isRounded"]);

  var classes = useMemo(function () {
    return cx(styles.Card, isBorderless && styles.borderless, isRounded && styles.rounded, className);
  }, [className, isBorderless, isRounded]);
  var surfaceProps = useSurface(_objectSpread(_objectSpread({}, otherProps), {}, {
    className: classes
  }));
  return _objectSpread(_objectSpread({}, surfaceProps), {}, {
    elevation: elevation,
    isRounded: isRounded
  });
}
//# sourceMappingURL=hook.js.map