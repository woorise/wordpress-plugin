import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { cx } from '@wp-g2/styles';
/**
 * WordPress dependencies
 */

import { useMemo } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { Flex } from '../flex';
import * as styles from './styles';
/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').CardHeaderProps, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function CardHeader(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'CardHeader'),
      className = _useContextSystem.className,
      _useContextSystem$siz = _useContextSystem.size,
      size = _useContextSystem$siz === void 0 ? 'medium' : _useContextSystem$siz,
      otherProps = _objectWithoutProperties(_useContextSystem, ["className", "size"]);

  var classes = useMemo(function () {
    return cx(styles.Header, styles.borderRadius, styles.headerFooter, styles[size], className);
  }, [className, size]);
  return createElement(Flex, _extends({}, otherProps, {
    className: classes,
    ref: forwardedRef
  }));
}
/**
 * `CardHeader` is a layout component, rendering the header contents of a `Card`.
 *
 * @example
 * ```jsx
 * import { Card, CardBody, CardHeader } from `@wordpress/components/ui`;
 *
 * <Card>
 * 	<CardHeader>...</CardHeader>
 * 	<CardBody>...</CardBody>
 * </Card>
 * ```
 */


var ConnectedCardHeader = contextConnect(CardHeader, 'CardHeader');
export default ConnectedCardHeader;
//# sourceMappingURL=header.js.map