import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { contextConnect } from '@wp-g2/context';
import { css, ui } from '@wp-g2/styles';
/**
 * WordPress dependencies
 */

import { useMemo } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { Elevation } from '../elevation';
import { View } from '../view';
import * as styles from './styles';
import { useCard } from './hook';
/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').CardProps, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function Card(props, forwardedRef) {
  var _useCard = useCard(props),
      children = _useCard.children,
      elevation = _useCard.elevation,
      _useCard$isRounded = _useCard.isRounded,
      isRounded = _useCard$isRounded === void 0 ? true : _useCard$isRounded,
      otherProps = _objectWithoutProperties(_useCard, ["children", "elevation", "isRounded"]);

  var elevationBorderRadius = isRounded ? ui.get('cardBorderRadius') : 0;
  var elevationClassName = useMemo(function () {
    return css({
      borderRadius: elevationBorderRadius
    });
  }, [elevationBorderRadius]);
  return createElement(View, _extends({}, otherProps, {
    ref: forwardedRef
  }), createElement(View, _extends({}, ui.$('CardContent'), {
    css: styles.Content
  }), children), createElement(Elevation, _extends({
    className: elevationClassName,
    isInteractive: false,
    value: elevation ? 1 : 0
  }, ui.$('CardElevation'))), createElement(Elevation, _extends({
    className: elevationClassName,
    isInteractive: false,
    value: elevation
  }, ui.$('CardElevation'))));
}
/**
 * `Card` is a layout component, providing a flexible and extensible content container.
 *
 * `Card` provides convenient sub-components such as `CardBody`, `CardHeader`, and `CardFooter`.
 *
 * @example
 * ```jsx
 * import {
 *   Card,
 *   CardHeader,
 *   CardBody,
 *   CardFooter,
 *   Text,
 * } from `@wordpress/components/ui`;
 *
 * function Example() {
 *   return (
 *     <Card>
 *       <CardHeader>
 *         <Heading size={ 4 }>Card Title</Heading>
 *       </CardHeader>
 *       <CardBody>
 *         <Text>Card Content</Text>
 *       </CardBody>
 *       <CardFooter>
 *         <Text>Card Footer</Text>
 *       </CardFooter>
 *     </Card>
 *   );
 * }
 * ```
 */


var ConnectedCard = contextConnect(Card, 'Card');
export default ConnectedCard;
//# sourceMappingURL=component.js.map