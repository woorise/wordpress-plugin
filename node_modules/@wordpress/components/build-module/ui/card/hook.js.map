{"version":3,"sources":["@wordpress/components/src/ui/card/hook.js"],"names":["useContextSystem","cx","useMemo","useSurface","styles","useCard","props","className","elevation","isBorderless","isRounded","otherProps","classes","Card","borderless","rounded","surfaceProps"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,SAASA,gBAAT,QAAiC,gBAAjC;AACA,SAASC,EAAT,QAAmB,eAAnB;AAEA;AACA;AACA;;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA;AACA;AACA;;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AAEA;AACA;AACA;;AACA,OAAO,SAASC,OAAT,CAAkBC,KAAlB,EAA0B;AAAA,0BAO5BN,gBAAgB,CAAEM,KAAF,EAAS,MAAT,CAPY;AAAA,MAE/BC,SAF+B,qBAE/BA,SAF+B;AAAA,gDAG/BC,SAH+B;AAAA,MAG/BA,SAH+B,sCAGnB,CAHmB;AAAA,gDAI/BC,YAJ+B;AAAA,MAI/BA,YAJ+B,sCAIhB,KAJgB;AAAA,gDAK/BC,SAL+B;AAAA,MAK/BA,SAL+B,sCAKnB,IALmB;AAAA,MAM5BC,UAN4B;;AAShC,MAAMC,OAAO,GAAGV,OAAO,CAAE,YAAM;AAC9B,WAAOD,EAAE,CACRG,MAAM,CAACS,IADC,EAERJ,YAAY,IAAIL,MAAM,CAACU,UAFf,EAGRJ,SAAS,IAAIN,MAAM,CAACW,OAHZ,EAIRR,SAJQ,CAAT;AAMA,GAPsB,EAOpB,CAAEA,SAAF,EAAaE,YAAb,EAA2BC,SAA3B,CAPoB,CAAvB;AASA,MAAMM,YAAY,GAAGb,UAAU,iCAAOQ,UAAP;AAAmBJ,IAAAA,SAAS,EAAEK;AAA9B,KAA/B;AAEA,yCACII,YADJ;AAECR,IAAAA,SAAS,EAATA,SAFD;AAGCE,IAAAA,SAAS,EAATA;AAHD;AAKA","sourcesContent":["/**\n * External dependencies\n */\nimport { useContextSystem } from '@wp-g2/context';\nimport { cx } from '@wp-g2/styles';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { useSurface } from '../surface';\nimport * as styles from './styles';\n\n/**\n * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').CardProps, 'div'>} props\n */\nexport function useCard( props ) {\n\tconst {\n\t\tclassName,\n\t\televation = 2,\n\t\tisBorderless = false,\n\t\tisRounded = true,\n\t\t...otherProps\n\t} = useContextSystem( props, 'Card' );\n\n\tconst classes = useMemo( () => {\n\t\treturn cx(\n\t\t\tstyles.Card,\n\t\t\tisBorderless && styles.borderless,\n\t\t\tisRounded && styles.rounded,\n\t\t\tclassName\n\t\t);\n\t}, [ className, isBorderless, isRounded ] );\n\n\tconst surfaceProps = useSurface( { ...otherProps, className: classes } );\n\n\treturn {\n\t\t...surfaceProps,\n\t\televation,\n\t\tisRounded,\n\t};\n}\n"]}