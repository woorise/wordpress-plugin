import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { cx } from '@wp-g2/styles';
/**
 * WordPress dependencies
 */

import { useMemo } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { Scrollable } from '../scrollable';
import { View } from '../view';
import * as styles from './styles';
/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').CardBodyProps, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function CardBody(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'CardBody'),
      className = _useContextSystem.className,
      _useContextSystem$scr = _useContextSystem.scrollable,
      scrollable = _useContextSystem$scr === void 0 ? true : _useContextSystem$scr,
      otherProps = _objectWithoutProperties(_useContextSystem, ["className", "scrollable"]);

  var classes = useMemo(function () {
    return cx(styles.Body, styles.borderRadius, className);
  }, [className]);

  if (scrollable) {
    return createElement(Scrollable, _extends({}, otherProps, {
      className: classes,
      ref: forwardedRef
    }));
  }

  return createElement(View, _extends({}, otherProps, {
    className: classes,
    ref: forwardedRef
  }));
}
/**
 * `CardBody` is a layout component, rendering the contents of a `Card`.
 * Multiple `CardBody` components can be used within `Card` if needed.
 *
 * @example
 * ```jsx
 * import { Card, CardBody } from `@wordpress/components/ui`;
 *
 * <Card>
 * 	<CardBody>
 * 		...
 * 	</CardBody>
 * </Card>
 * ```
 */


var ConnectedCardBody = contextConnect(CardBody, 'CardBody');
export default ConnectedCardBody;
//# sourceMappingURL=body.js.map