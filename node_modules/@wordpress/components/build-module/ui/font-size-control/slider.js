import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { noop } from 'lodash';
import { ControlLabel, Slider, TextInput } from '@wp-g2/components';
/**
 * WordPress dependencies
 */

import { __ } from '@wordpress/i18n';
/**
 * Internal dependencies
 */

import { getSliderTemplateColumns } from './utils';
import { Grid } from '../grid';
import { VStack } from '../v-stack';

function FontSizeControlSlider(props) {
  var _props$label = props.label,
      label = _props$label === void 0 ? __('Custom size') : _props$label,
      disabled = props.disabled,
      min = props.min,
      max = props.max,
      _props$onChange = props.onChange,
      onChange = _props$onChange === void 0 ? noop : _props$onChange,
      size = props.size,
      value = props.value,
      withSlider = props.withSlider;
  if (!withSlider) return null;
  var templateColumns = getSliderTemplateColumns();
  var controlProps = {
    disabled: disabled,
    min: min,
    max: max,
    onChange: onChange,
    size: size,
    value: value
  };
  return createElement(VStack, {
    spacing: 0
  }, createElement(ControlLabel, null, label), createElement(Grid, {
    templateColumns: templateColumns
  }, createElement(Slider, controlProps), createElement(TextInput, _extends({}, controlProps, {
    type: "number"
  }))));
}

export default FontSizeControlSlider;
//# sourceMappingURL=slider.js.map