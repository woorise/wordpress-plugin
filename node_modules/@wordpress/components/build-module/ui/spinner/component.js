import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { get } from '@wp-g2/styles';
/**
 * Internal dependencies
 */

import { BarsView, BarsWrapperView, ContainerView } from './styles';
import { BASE_SIZE, WRAPPER_SIZE } from './utils';
/* eslint-disable jsdoc/valid-types */

/**
 * @typedef Props
 * @property {import('react').CSSProperties['color']} [color] Color of `Spinner`.
 * @property {number} [size=16] Size of `Spinner`.
 */

/* eslint-enable jsdoc/valid-types */

/**
 *
 * @param {import('@wp-g2/create-styles').ViewOwnProps<Props, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function Spinner(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'Spinner'),
      _useContextSystem$col = _useContextSystem.color,
      color = _useContextSystem$col === void 0 ? get('colorText') : _useContextSystem$col,
      _useContextSystem$siz = _useContextSystem.size,
      size = _useContextSystem$siz === void 0 ? BASE_SIZE : _useContextSystem$siz,
      otherProps = _objectWithoutProperties(_useContextSystem, ["color", "size"]);

  var ratio = size / BASE_SIZE;
  var scale = ratio * BASE_SIZE / WRAPPER_SIZE;
  var transform = "scale(".concat(scale, ")");
  var styles = {
    transform: transform
  };
  return createElement(ContainerView, _extends({}, otherProps, {
    "aria-busy": true,
    ref: forwardedRef,
    style: {
      height: size,
      width: size
    }
  }), createElement(BarsWrapperView, {
    "aria-hidden": true,
    style: styles
  }, createElement(BarsView, {
    style: {
      color: color
    }
  }, createElement("div", {
    className: "InnerBar1"
  }), createElement("div", {
    className: "InnerBar2"
  }), createElement("div", {
    className: "InnerBar3"
  }), createElement("div", {
    className: "InnerBar4"
  }), createElement("div", {
    className: "InnerBar5"
  }), createElement("div", {
    className: "InnerBar6"
  }), createElement("div", {
    className: "InnerBar7"
  }), createElement("div", {
    className: "InnerBar8"
  }), createElement("div", {
    className: "InnerBar9"
  }), createElement("div", {
    className: "InnerBar10"
  }), createElement("div", {
    className: "InnerBar11"
  }), createElement("div", {
    className: "InnerBar12"
  }))));
}
/**
 * `Spinner` is a component that notify users that their action is being processed.
 *
 * @example
 * ```jsx
 * import { Spinner } from `@wp-g2/components/ui`;
 *
 * function Example() {
 * 	return (
 * 		<Spinner />
 * 	);
 * }
 * ```
 */


export default contextConnect(Spinner, 'Spinner');
//# sourceMappingURL=component.js.map