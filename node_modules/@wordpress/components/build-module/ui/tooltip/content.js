import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { contextConnect, useContextSystem } from '@wp-g2/context';
import { cx } from '@wp-g2/styles'; // eslint-disable-next-line no-restricted-imports

import { Tooltip as ReakitTooltip } from 'reakit';
/**
 * Internal dependencies
 */

import { View } from '../view';
import { useTooltipContext } from './context';
import * as styles from './styles';
var TooltipPopoverView = styles.TooltipPopoverView;
/**
 *
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('reakit').TooltipProps, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function TooltipContent(props, forwardedRef) {
  var _useContextSystem = useContextSystem(props, 'TooltipContent'),
      children = _useContextSystem.children,
      className = _useContextSystem.className,
      otherProps = _objectWithoutProperties(_useContextSystem, ["children", "className"]);

  var _useTooltipContext = useTooltipContext(),
      tooltip = _useTooltipContext.tooltip;

  var classes = cx(styles.TooltipContent, className);
  return createElement(ReakitTooltip, _extends({
    as: View
  }, otherProps, tooltip, {
    className: classes,
    ref: forwardedRef
  }), createElement(TooltipPopoverView, null, children));
}

export default contextConnect(TooltipContent, 'TooltipContent');
//# sourceMappingURL=content.js.map