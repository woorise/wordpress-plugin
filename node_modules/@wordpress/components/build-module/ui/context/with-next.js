import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { contextConnect, useContextSystem } from '@wp-g2/context';
/**
 * @template {{}} TCurrentProps
 * @template {{}} TNextProps
 * @param {import('react').ForwardRefExoticComponent<TCurrentProps>} CurrentComponent
 * @param {import('react').ComponentType<TNextProps>} NextComponent
 * @param {string} namespace
 * @param {(props: TCurrentProps) => TNextProps} adapter
 */

export function withNext(CurrentComponent) {
  var NextComponent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
    return null;
  };
  var namespace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Component';
  var adapter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (p) {
    return (
      /** @type {any} */
      p
    );
  };

  if (process.env.COMPONENT_SYSTEM_PHASE === 1) {
    /* eslint-disable jsdoc/no-undefined-types */

    /**
     * @param {TCurrentProps} props
     * @param {import('react').Ref<any>} ref
     */

    /* eslint-enable jsdoc/no-undefined-types */
    var WrappedComponent = function WrappedComponent(props, ref) {
      // @ts-ignore
      var _useContextSystem = useContextSystem(props, namespace),
          __unstableVersion = _useContextSystem.__unstableVersion,
          otherProps = _objectWithoutProperties(_useContextSystem, ["__unstableVersion"]);

      if (__unstableVersion === 'next') {
        // @ts-ignore
        var nextProps = adapter(otherProps);
        return createElement(NextComponent, _extends({}, nextProps, {
          ref: ref
        }));
      }

      return createElement(CurrentComponent, _extends({}, props, {
        ref: ref
      }));
    };

    return contextConnect(WrappedComponent, namespace);
  }

  return CurrentComponent;
}
//# sourceMappingURL=with-next.js.map