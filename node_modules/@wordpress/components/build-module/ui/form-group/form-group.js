import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { contextConnect } from '@wp-g2/context';
/**
 * Internal dependencies
 */

import { Grid } from '../grid';
import { View } from '../view';
import FormGroupContent from './form-group-content';
import { useFormGroup } from './use-form-group';
/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').FormGroupProps, 'div'>} props
 * @param {import('react').Ref<any>} forwardedRef
 */

function FormGroup(props, forwardedRef) {
  var _useFormGroup = useFormGroup(props),
      contentProps = _useFormGroup.contentProps,
      horizontal = _useFormGroup.horizontal,
      otherProps = _objectWithoutProperties(_useFormGroup, ["contentProps", "horizontal"]);

  if (horizontal) {
    return createElement(Grid, _extends({
      templateColumns: "minmax(0, 1fr) 2fr"
    }, otherProps, {
      ref: forwardedRef
    }), createElement(FormGroupContent, contentProps));
  }

  return createElement(View, _extends({}, otherProps, {
    ref: forwardedRef
  }), createElement(FormGroupContent, contentProps));
}
/**
 * `FormGroup` is a form component that groups a label with a form element (e.g. `Switch` or `TextInput`).
 *
 * @example
 * ```jsx
 * import { FormGroup, TextInput } from `@wordpress/components/ui`;
 *
 * function Example() {
 * 	return (
 * 		<FormGroup label="First name">
 * 			<TextInput />
 * 		</FormGroup>
 * 	);
 * }
 * ```
 */


var ConnectedFormGroup = contextConnect(FormGroup, 'FormGroup');
export default ConnectedFormGroup;
//# sourceMappingURL=form-group.js.map