import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { ui } from '@wp-g2/styles';
/**
 * WordPress dependencies
 */

import { useMemo, memo } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { VStack } from '../v-stack';
import { FormGroupContext } from './form-group-context';
import FormGroupHelp from './form-group-help';
import FormGroupLabel from './form-group-label';
/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').FormGroupContentProps, 'label'>} props
 */

function FormGroupContent(_ref) {
  var alignLabel = _ref.alignLabel,
      children = _ref.children,
      help = _ref.help,
      _ref$horizontal = _ref.horizontal,
      horizontal = _ref$horizontal === void 0 ? false : _ref$horizontal,
      id = _ref.id,
      label = _ref.label,
      labelHidden = _ref.labelHidden,
      _ref$spacing = _ref.spacing,
      spacing = _ref$spacing === void 0 ? 2 : _ref$spacing,
      truncate = _ref.truncate,
      props = _objectWithoutProperties(_ref, ["alignLabel", "children", "help", "horizontal", "id", "label", "labelHidden", "spacing", "truncate"]);

  var contextProps = useMemo(function () {
    return {
      id: id,
      horizontal: horizontal
    };
  }, [id, horizontal]);
  var content = help ? createElement(VStack, _extends({
    expanded: false
  }, ui.$('FormGroupContentContainer'), {
    spacing: spacing
  }), children, createElement(FormGroupHelp, null, help)) : children;
  return createElement(FormGroupContext.Provider, {
    value: contextProps
  }, createElement(FormGroupLabel, _extends({
    align: alignLabel,
    id: id,
    labelHidden: labelHidden,
    truncate: truncate
  }, props), label), content);
}

export default memo(FormGroupContent);
//# sourceMappingURL=form-group-content.js.map