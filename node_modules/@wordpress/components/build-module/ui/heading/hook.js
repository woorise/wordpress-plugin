import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * External dependencies
 */
import { useContextSystem } from '@wp-g2/context';
import { getHeadingFontSize, ui } from '@wp-g2/styles';
import { useText } from '../text';
export function useHeading(props) {
  var _useContextSystem = useContextSystem(props, 'Heading'),
      asProp = _useContextSystem.as,
      _useContextSystem$lev = _useContextSystem.level,
      level = _useContextSystem$lev === void 0 ? 2 : _useContextSystem$lev,
      otherProps = _objectWithoutProperties(_useContextSystem, ["as", "level"]);

  var as = asProp || "h".concat(level);
  var a11yProps = {};

  if (typeof as === 'string' && as[0] !== 'h') {
    // if not a semantic `h` element, add a11y props:
    a11yProps.role = 'heading';
    a11yProps['aria-level'] = level;
  }

  var textProps = useText(_objectSpread({
    color: ui.get('colorTextHeading'),
    size: getHeadingFontSize(level),
    isBlock: true,
    // @ts-ignore We're passing a variable so `string` is safe
    weight: ui.get('fontWeightHeading')
  }, otherProps));
  return _objectSpread(_objectSpread(_objectSpread({}, textProps), a11yProps), {}, {
    as: as
  });
}
//# sourceMappingURL=hook.js.map