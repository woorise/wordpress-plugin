import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
import { noop } from 'lodash';

function FormToggle(_ref) {
  var className = _ref.className,
      checked = _ref.checked,
      id = _ref.id,
      disabled = _ref.disabled,
      _ref$onChange = _ref.onChange,
      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,
      props = _objectWithoutProperties(_ref, ["className", "checked", "id", "disabled", "onChange"]);

  var wrapperClasses = classnames('components-form-toggle', className, {
    'is-checked': checked,
    'is-disabled': disabled
  });
  return createElement("span", {
    className: wrapperClasses
  }, createElement("input", _extends({
    className: "components-form-toggle__input",
    id: id,
    type: "checkbox",
    checked: checked,
    onChange: onChange,
    disabled: disabled
  }, props)), createElement("span", {
    className: "components-form-toggle__track"
  }), createElement("span", {
    className: "components-form-toggle__thumb"
  }));
}

export default FormToggle;
//# sourceMappingURL=index.js.map