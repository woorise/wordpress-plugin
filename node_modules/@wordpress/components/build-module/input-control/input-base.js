import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { useInstanceId } from '@wordpress/compose';
import { forwardRef } from '@wordpress/element';
/**
 * Internal dependencies
 */

import Backdrop from './backdrop';
import Label from './label';
import { Container, Root, Prefix, Suffix, LabelWrapper } from './styles/input-control-styles';

function useUniqueId(idProp) {
  var instanceId = useInstanceId(InputBase);
  var id = "input-base-control-".concat(instanceId);
  return idProp || id;
} // Adapter to map props for the new ui/flex compopnent.


function getUIFlexProps(_ref) {
  var labelPosition = _ref.labelPosition;
  var props = {};

  switch (labelPosition) {
    case 'top':
      props.direction = 'column';
      props.gap = 0;
      break;

    case 'bottom':
      props.direction = 'column-reverse';
      props.gap = 0;
      break;

    case 'edge':
      props.justify = 'space-between';
      break;
  }

  return props;
}

export function InputBase(_ref2, ref) {
  var __unstableInputWidth = _ref2.__unstableInputWidth,
      children = _ref2.children,
      className = _ref2.className,
      _ref2$disabled = _ref2.disabled,
      disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,
      _ref2$hideLabelFromVi = _ref2.hideLabelFromVision,
      hideLabelFromVision = _ref2$hideLabelFromVi === void 0 ? false : _ref2$hideLabelFromVi,
      labelPosition = _ref2.labelPosition,
      idProp = _ref2.id,
      _ref2$isFocused = _ref2.isFocused,
      isFocused = _ref2$isFocused === void 0 ? false : _ref2$isFocused,
      label = _ref2.label,
      prefix = _ref2.prefix,
      _ref2$size = _ref2.size,
      size = _ref2$size === void 0 ? 'default' : _ref2$size,
      suffix = _ref2.suffix,
      props = _objectWithoutProperties(_ref2, ["__unstableInputWidth", "children", "className", "disabled", "hideLabelFromVision", "labelPosition", "id", "isFocused", "label", "prefix", "size", "suffix"]);

  var id = useUniqueId(idProp);
  var hideLabel = hideLabelFromVision || !label;
  return createElement(Root, _extends({}, props, getUIFlexProps({
    labelPosition: labelPosition
  }), {
    className: className,
    isFocused: isFocused,
    labelPosition: labelPosition,
    ref: ref,
    __unstableVersion: "next"
  }), createElement(LabelWrapper, null, createElement(Label, {
    className: "components-input-control__label",
    hideLabelFromVision: hideLabelFromVision,
    labelPosition: labelPosition,
    htmlFor: id,
    size: size
  }, label)), createElement(Container, {
    __unstableInputWidth: __unstableInputWidth,
    className: "components-input-control__container",
    disabled: disabled,
    hideLabel: hideLabel,
    isFocused: isFocused,
    labelPosition: labelPosition
  }, prefix && createElement(Prefix, {
    className: "components-input-control__prefix"
  }, prefix), children, suffix && createElement(Suffix, {
    className: "components-input-control__suffix"
  }, suffix), createElement(Backdrop, {
    "aria-hidden": "true",
    disabled: disabled,
    isFocused: isFocused,
    label: label,
    size: size
  })));
}
export default forwardRef(InputBase);
//# sourceMappingURL=input-base.js.map