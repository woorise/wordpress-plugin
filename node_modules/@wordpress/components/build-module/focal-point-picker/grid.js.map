{"version":3,"sources":["@wordpress/components/src/focal-point-picker/grid.js"],"names":["useState","GridView","GridLineX","GridLineY","useUpdateEffect","window","clearTimeout","setTimeout","FocalPointPickerGrid","bounds","value","props","animationProps","useRevealAnimation","style","width","height","top","left","isActive","setIsActive","timeout"],"mappings":";;;;;AAAA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,oBAAzB;AAEA;AACA;AACA;;AACA,SACCC,QADD,EAECC,SAFD,EAGCC,SAHD,QAIO,mCAJP;AAKA,SAASC,eAAT,QAAgC,gBAAhC;;WAGC,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,E;IADlCC,Y,QAAAA,Y;IAAcC,U,QAAAA,U;;AAGtB,eAAe,SAASC,oBAAT,QAIX;AAAA,2BAHHC,MAGG;AAAA,MAHHA,MAGG,6BAHM,EAGN;AAAA,MAFHC,KAEG,SAFHA,KAEG;AAAA,MADAC,KACA;;AACH,MAAMC,cAAc,GAAGC,kBAAkB,CAAEH,KAAF,CAAzC;AACA,MAAMI,KAAK,GAAG;AACbC,IAAAA,KAAK,EAAEN,MAAM,CAACM,KADD;AAEbC,IAAAA,MAAM,EAAEP,MAAM,CAACO;AAFF,GAAd;AAKA,SACC,cAAC,QAAD,eACML,KADN,EAEMC,cAFN;AAGC,IAAA,SAAS,EAAC,qCAHX;AAIC,IAAA,KAAK,EAAGE;AAJT,MAMC,cAAC,SAAD;AAAW,IAAA,KAAK,EAAG;AAAEG,MAAAA,GAAG,EAAE;AAAP;AAAnB,IAND,EAOC,cAAC,SAAD;AAAW,IAAA,KAAK,EAAG;AAAEA,MAAAA,GAAG,EAAE;AAAP;AAAnB,IAPD,EAQC,cAAC,SAAD;AAAW,IAAA,KAAK,EAAG;AAAEC,MAAAA,IAAI,EAAE;AAAR;AAAnB,IARD,EASC,cAAC,SAAD;AAAW,IAAA,KAAK,EAAG;AAAEA,MAAAA,IAAI,EAAE;AAAR;AAAnB,IATD,CADD;AAaA;AAED;AACA;AACA;AACA;AACA;;AACA,SAASL,kBAAT,CAA6BH,KAA7B,EAAqC;AAAA,kBACFV,QAAQ,CAAE,KAAF,CADN;AAAA;AAAA,MAC5BmB,QAD4B;AAAA,MAClBC,WADkB;;AAGpChB,EAAAA,eAAe,CAAE,YAAM;AACtBgB,IAAAA,WAAW,CAAE,IAAF,CAAX;AACA,QAAMC,OAAO,GAAGd,UAAU,CAAE,YAAM;AACjCa,MAAAA,WAAW,CAAE,KAAF,CAAX;AACA,KAFyB,EAEvB,GAFuB,CAA1B;AAIA,WAAO;AAAA,aAAMd,YAAY,CAAEe,OAAF,CAAlB;AAAA,KAAP;AACA,GAPc,EAOZ,CAAEX,KAAF,CAPY,CAAf;AASA,SAAO;AACNS,IAAAA,QAAQ,EAARA;AADM,GAAP;AAGA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport {\n\tGridView,\n\tGridLineX,\n\tGridLineY,\n} from './styles/focal-point-picker-style';\nimport { useUpdateEffect } from '../utils/hooks';\n\nconst { clearTimeout, setTimeout } =\n\ttypeof window !== 'undefined' ? window : {};\n\nexport default function FocalPointPickerGrid( {\n\tbounds = {},\n\tvalue,\n\t...props\n} ) {\n\tconst animationProps = useRevealAnimation( value );\n\tconst style = {\n\t\twidth: bounds.width,\n\t\theight: bounds.height,\n\t};\n\n\treturn (\n\t\t<GridView\n\t\t\t{ ...props }\n\t\t\t{ ...animationProps }\n\t\t\tclassName=\"components-focal-point-picker__grid\"\n\t\t\tstyle={ style }\n\t\t>\n\t\t\t<GridLineX style={ { top: '33%' } } />\n\t\t\t<GridLineX style={ { top: '66%' } } />\n\t\t\t<GridLineY style={ { left: '33%' } } />\n\t\t\t<GridLineY style={ { left: '66%' } } />\n\t\t</GridView>\n\t);\n}\n\n/**\n * Custom hook that renders the \"flash\" animation whenever the value changes.\n *\n * @param {string} value Value of (box) side.\n */\nfunction useRevealAnimation( value ) {\n\tconst [ isActive, setIsActive ] = useState( false );\n\n\tuseUpdateEffect( () => {\n\t\tsetIsActive( true );\n\t\tconst timeout = setTimeout( () => {\n\t\t\tsetIsActive( false );\n\t\t}, 600 );\n\n\t\treturn () => clearTimeout( timeout );\n\t}, [ value ] );\n\n\treturn {\n\t\tisActive,\n\t};\n}\n"]}