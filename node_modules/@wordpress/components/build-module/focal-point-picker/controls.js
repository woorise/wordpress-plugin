import _extends from "@babel/runtime/helpers/esm/extends";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { createElement } from "@wordpress/element";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * External dependencies
 */
import { noop } from 'lodash';
/**
 * WordPress dependencies
 */

import { __ } from '@wordpress/i18n';
/**
 * Internal dependencies
 */

import { UnitControl as BaseUnitControl, ControlWrapper } from './styles/focal-point-picker-style';
import { fractionToPercentage } from './utils';
var TEXTCONTROL_MIN = 0;
var TEXTCONTROL_MAX = 100;
export default function FocalPointPickerControls(_ref) {
  var _ref$onChange = _ref.onChange,
      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,
      _ref$percentages = _ref.percentages,
      percentages = _ref$percentages === void 0 ? {
    x: 0.5,
    y: 0.5
  } : _ref$percentages;
  var valueX = fractionToPercentage(percentages.x);
  var valueY = fractionToPercentage(percentages.y);

  var handleOnXChange = function handleOnXChange(next) {
    onChange(_objectSpread(_objectSpread({}, percentages), {}, {
      x: parseInt(next) / 100
    }));
  };

  var handleOnYChange = function handleOnYChange(next) {
    onChange(_objectSpread(_objectSpread({}, percentages), {}, {
      y: parseInt(next) / 100
    }));
  };

  return createElement(ControlWrapper, {
    className: "focal-point-picker__controls"
  }, createElement(UnitControl, {
    label: __('Left'),
    value: valueX,
    onChange: handleOnXChange,
    dragDirection: "e"
  }), createElement(UnitControl, {
    label: __('Top'),
    value: valueY,
    onChange: handleOnYChange,
    dragDirection: "s"
  }));
}

function UnitControl(props) {
  return createElement(BaseUnitControl, _extends({
    className: "focal-point-picker__controls-position-unit-control",
    labelPosition: "side",
    max: TEXTCONTROL_MAX,
    min: TEXTCONTROL_MIN,
    unit: "%",
    units: [{
      value: '%',
      label: '%'
    }]
  }, props));
}
//# sourceMappingURL=controls.js.map