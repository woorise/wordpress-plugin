"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionRightWrapper = exports.InputNumber = exports.Tooltip = exports.InputRange = exports.Thumb = exports.ThumbWrapper = exports.MarkLabel = exports.Mark = exports.MarksWrapper = exports.Track = exports.Rail = exports.AfterIconWrapper = exports.BeforeIconWrapper = exports.Wrapper = exports.Root = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _core = require("@emotion/core");

var _numberControl = _interopRequireDefault(require("../../number-control"));

var _styleMixins = require("../../utils/style-mixins");

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

var _ref = process.env.NODE_ENV === "production" ? {
  name: "tdik1c",
  styles: "height:30px;min-height:30px;"
} : {
  name: "tdik1c",
  styles: "height:30px;min-height:30px;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var rangeHeight = function rangeHeight() {
  return _ref;
};

var thumbSize = 20;
var Root = (0, _styledBase.default)("div", {
  target: "exqw8y20",
  label: "Root"
})(process.env.NODE_ENV === "production" ? {
  name: "44oaj8",
  styles: "-webkit-tap-highlight-color:transparent;box-sizing:border-box;align-items:flex-start;display:inline-flex;justify-content:flex-start;padding:0;position:relative;touch-action:none;width:100%;"
} : {
  name: "44oaj8",
  styles: "-webkit-tap-highlight-color:transparent;box-sizing:border-box;align-items:flex-start;display:inline-flex;justify-content:flex-start;padding:0;position:relative;touch-action:none;width:100%;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
exports.Root = Root;

var wrapperColor = function wrapperColor(_ref4) {
  var _ref4$color = _ref4.color,
      colorProp = _ref4$color === void 0 ? (0, _styleMixins.color)('ui.borderFocus') : _ref4$color;
  return /*#__PURE__*/(0, _core.css)({
    color: colorProp
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var wrapperMargin = function wrapperMargin(_ref5) {
  var marks = _ref5.marks;
  return /*#__PURE__*/(0, _core.css)({
    marginBottom: marks ? 16 : null
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var Wrapper = (0, _styledBase.default)("div", {
  target: "exqw8y21",
  label: "Wrapper"
})("box-sizing:border-box;color:", (0, _styleMixins.color)('blue.medium.focus'), ";display:block;flex:1;padding-top:15px;position:relative;width:100%;", wrapperColor, ";", rangeHeight, ";", wrapperMargin, ";", (0, _styleMixins.rtl)({
  marginLeft: 10
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
exports.Wrapper = Wrapper;
var BeforeIconWrapper = (0, _styledBase.default)("span", {
  target: "exqw8y22",
  label: "BeforeIconWrapper"
})("margin-top:3px;", (0, _styleMixins.rtl)({
  marginRight: 6
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
exports.BeforeIconWrapper = BeforeIconWrapper;
var AfterIconWrapper = (0, _styledBase.default)("span", {
  target: "exqw8y23",
  label: "AfterIconWrapper"
})("margin-top:3px;", (0, _styleMixins.rtl)({
  marginLeft: 16
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvcmFuZ2UtY29udHJvbC9zdHlsZXMvcmFuZ2UtY29udHJvbC1zdHlsZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUQyQyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3JhbmdlLWNvbnRyb2wvc3R5bGVzL3JhbmdlLWNvbnRyb2wtc3R5bGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBOdW1iZXJDb250cm9sIGZyb20gJy4uLy4uL251bWJlci1jb250cm9sJztcbmltcG9ydCB7IGNvbG9yLCByZWR1Y2VNb3Rpb24sIHJ0bCwgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zdHlsZS1taXhpbnMnO1xuXG5jb25zdCByYW5nZUhlaWdodCA9ICgpID0+IGNzcyggeyBoZWlnaHQ6IDMwLCBtaW5IZWlnaHQ6IDMwIH0gKTtcbmNvbnN0IHRodW1iU2l6ZSA9IDIwO1xuXG5leHBvcnQgY29uc3QgUm9vdCA9IHN0eWxlZC5kaXZgXG5cdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcblx0anVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXHRwYWRkaW5nOiAwO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHRvdWNoLWFjdGlvbjogbm9uZTtcblx0d2lkdGg6IDEwMCU7XG5gO1xuXG5jb25zdCB3cmFwcGVyQ29sb3IgPSAoIHsgY29sb3I6IGNvbG9yUHJvcCA9IGNvbG9yKCAndWkuYm9yZGVyRm9jdXMnICkgfSApID0+IHtcblx0cmV0dXJuIGNzcyggeyBjb2xvcjogY29sb3JQcm9wIH0gKTtcbn07XG5jb25zdCB3cmFwcGVyTWFyZ2luID0gKCB7IG1hcmtzIH0gKSA9PlxuXHRjc3MoIHsgbWFyZ2luQm90dG9tOiBtYXJrcyA/IDE2IDogbnVsbCB9ICk7XG5cbmV4cG9ydCBjb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0Y29sb3I6ICR7IGNvbG9yKCAnYmx1ZS5tZWRpdW0uZm9jdXMnICkgfTtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGZsZXg6IDE7XG5cdHBhZGRpbmctdG9wOiAxNXB4O1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdCR7IHdyYXBwZXJDb2xvciB9O1xuXHQkeyByYW5nZUhlaWdodCB9O1xuXHQkeyB3cmFwcGVyTWFyZ2luIH07XG5cblx0JHsgcnRsKCB7IG1hcmdpbkxlZnQ6IDEwIH0gKSB9XG5gO1xuXG5leHBvcnQgY29uc3QgQmVmb3JlSWNvbldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0bWFyZ2luLXRvcDogM3B4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogNiB9ICkgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEFmdGVySWNvbldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0bWFyZ2luLXRvcDogM3B4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiAxNiB9ICkgfVxuYDtcblxuY29uc3QgcmFpbEJhY2tncm91bmRDb2xvciA9ICggeyBkaXNhYmxlZCwgcmFpbENvbG9yIH0gKSA9PiB7XG5cdGxldCBiYWNrZ3JvdW5kID0gcmFpbENvbG9yIHx8IG51bGw7XG5cblx0aWYgKCBkaXNhYmxlZCApIHtcblx0XHRiYWNrZ3JvdW5kID0gY29sb3IoICdsaWdodEdyYXkuNDAwJyApO1xuXHR9XG5cblx0cmV0dXJuIGNzcygge1xuXHRcdGJhY2tncm91bmQsXG5cdH0gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBSYWlsID0gc3R5bGVkLnNwYW5gXG5cdGJhY2tncm91bmQtY29sb3I6ICR7IGNvbG9yKCAnbGlnaHRHcmF5LjYwMCcgKSB9O1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRsZWZ0OiAwO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cmlnaHQ6IDA7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRoZWlnaHQ6IDNweDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRtYXJnaW4tdG9wOiAxNHB4O1xuXHR0b3A6IDA7XG5cblx0JHsgcmFpbEJhY2tncm91bmRDb2xvciB9O1xuYDtcblxuY29uc3QgdHJhY2tCYWNrZ3JvdW5kQ29sb3IgPSAoIHsgZGlzYWJsZWQsIHRyYWNrQ29sb3IgfSApID0+IHtcblx0bGV0IGJhY2tncm91bmQgPSB0cmFja0NvbG9yIHx8ICdjdXJyZW50Q29sb3InO1xuXG5cdGlmICggZGlzYWJsZWQgKSB7XG5cdFx0YmFja2dyb3VuZCA9IGNvbG9yKCAnbGlnaHRHcmF5LjgwMCcgKTtcblx0fVxuXG5cdHJldHVybiBjc3MoIHtcblx0XHRiYWNrZ3JvdW5kLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgVHJhY2sgPSBzdHlsZWQuc3BhbmBcblx0YmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuXHRib3JkZXItcmFkaXVzOiAxcHg7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGhlaWdodDogM3B4O1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0ZGlzcGxheTogYmxvY2s7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0bWFyZ2luLXRvcDogMTRweDtcblx0dG9wOiAwO1xuXG5cdCR7IHRyYWNrQmFja2dyb3VuZENvbG9yIH07XG5gO1xuXG5leHBvcnQgY29uc3QgTWFya3NXcmFwcGVyID0gc3R5bGVkLnNwYW5gXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR3aWR0aDogMTAwJTtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5gO1xuXG5jb25zdCBtYXJrRmlsbCA9ICggeyBkaXNhYmxlZCwgaXNGaWxsZWQgfSApID0+IHtcblx0bGV0IGJhY2tncm91bmRDb2xvciA9IGlzRmlsbGVkID8gJ2N1cnJlbnRDb2xvcicgOiBjb2xvciggJ2xpZ2h0R3JheS42MDAnICk7XG5cblx0aWYgKCBkaXNhYmxlZCApIHtcblx0XHRiYWNrZ3JvdW5kQ29sb3IgPSBjb2xvciggJ2xpZ2h0R3JheS44MDAnICk7XG5cdH1cblxuXHRyZXR1cm4gY3NzKCB7XG5cdFx0YmFja2dyb3VuZENvbG9yLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgTWFyayA9IHN0eWxlZC5zcGFuYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRoZWlnaHQ6IDlweDtcblx0bGVmdDogMDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IC00cHg7XG5cdHdpZHRoOiAxcHg7XG5cblx0JHsgbWFya0ZpbGwgfTtcbmA7XG5cbmNvbnN0IG1hcmtMYWJlbEZpbGwgPSAoIHsgaXNGaWxsZWQgfSApID0+IHtcblx0cmV0dXJuIGNzcygge1xuXHRcdGNvbG9yOiBpc0ZpbGxlZCA/IGNvbG9yKCAnZGFya0dyYXkuMzAwJyApIDogY29sb3IoICdsaWdodEdyYXkuNjAwJyApLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgTWFya0xhYmVsID0gc3R5bGVkLnNwYW5gXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGNvbG9yOiAkeyBjb2xvciggJ2xpZ2h0R3JheS42MDAnICkgfTtcblx0bGVmdDogMDtcblx0Zm9udC1zaXplOiAxMXB4O1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogMTJweDtcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKCAtNTAlICk7XG5cdHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cblx0JHsgbWFya0xhYmVsRmlsbCB9O1xuYDtcblxuZXhwb3J0IGNvbnN0IFRodW1iV3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRoZWlnaHQ6ICR7IHRodW1iU2l6ZSB9cHg7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRtYXJnaW4tdG9wOiA1cHg7XG5cdG91dGxpbmU6IDA7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogMDtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5cdHdpZHRoOiAkeyB0aHVtYlNpemUgfXB4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiAtMTAgfSApIH1cbmA7XG5cbmNvbnN0IHRodW1iRm9jdXMgPSAoIHsgaXNGb2N1c2VkIH0gKSA9PiB7XG5cdHJldHVybiBjc3MoIHtcblx0XHRib3JkZXJDb2xvcjogaXNGb2N1c2VkXG5cdFx0XHQ/IGNvbG9yKCAndWkuYm9yZGVyRm9jdXMnIClcblx0XHRcdDogY29sb3IoICdkYXJrR3JheS4yMDAnICksXG5cdFx0Ym94U2hhZG93OiBpc0ZvY3VzZWRcblx0XHRcdD8gYFxuXHRcdFx0XHQwIDAgMCAxcHggJHsgY29sb3IoICd1aS5ib3JkZXJGb2N1cycgKSB9XG5cdFx0XHRgXG5cdFx0XHQ6IGBcblx0XHRcdFx0MCAwIDAgcmdiYSgwLCAwLCAwLCAwKVxuXHRcdFx0YCxcblx0fSApO1xufTtcblxuZXhwb3J0IGNvbnN0IFRodW1iID0gc3R5bGVkLnNwYW5gXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuXHRib3JkZXItcmFkaXVzOiA1MCU7XG5cdGJvcmRlcjogMXB4IHNvbGlkICR7IGNvbG9yKCAnZGFya0dyYXkuMjAwJyApIH07XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGhlaWdodDogMTAwJTtcblx0b3V0bGluZTogMDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR1c2VyLXNlbGVjdDogbm9uZTtcblx0d2lkdGg6IDEwMCU7XG5cblx0JHsgdGh1bWJGb2N1cyB9O1xuYDtcblxuZXhwb3J0IGNvbnN0IElucHV0UmFuZ2UgPSBzdHlsZWQuaW5wdXRgXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGN1cnNvcjogcG9pbnRlcjtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGhlaWdodDogMTAwJTtcblx0bGVmdDogMDtcblx0bWFyZ2luOiAwIC0keyB0aHVtYlNpemUgLyAyIH1weDtcblx0b3BhY2l0eTogMDtcblx0b3V0bGluZTogbm9uZTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRyaWdodDogMDtcblx0dG9wOiAwO1xuXHR3aWR0aDogY2FsYyggMTAwJSArICR7IHRodW1iU2l6ZSB9cHggKTtcbmA7XG5cbmNvbnN0IHRvb2x0aXBTaG93ID0gKCB7IHNob3cgfSApID0+IHtcblx0cmV0dXJuIGNzcygge1xuXHRcdG9wYWNpdHk6IHNob3cgPyAxIDogMCxcblx0fSApO1xufTtcblxuY29uc3QgdG9vbHRpcFBvc2l0aW9uID0gKCB7IHBvc2l0aW9uIH0gKSA9PiB7XG5cdGNvbnN0IGlzVG9wID0gcG9zaXRpb24gPT09ICd0b3AnO1xuXG5cdGlmICggaXNUb3AgKSB7XG5cdFx0cmV0dXJuIGNzc2Bcblx0XHRcdHRvcDogLTgwJTtcblx0XHRgO1xuXHR9XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3R0b206IC04MCU7XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbHRpcCA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kOiAkeyBjb2xvciggJ3VpLmJvcmRlcicgKSB9O1xuXHRib3JkZXItcmFkaXVzOiAycHg7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGNvbG9yOiB3aGl0ZTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRmb250LXNpemU6IDEycHg7XG5cdG1pbi13aWR0aDogMzJweDtcblx0b3BhY2l0eTogMDtcblx0cGFkZGluZzogNHB4IDhweDtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDEyMG1zIGVhc2U7XG5cdHVzZXItc2VsZWN0OiBub25lO1xuXHRsaW5lLWhlaWdodDogMS40O1xuXG5cdCR7IHRvb2x0aXBTaG93IH07XG5cdCR7IHRvb2x0aXBQb3NpdGlvbiB9O1xuXHQkeyByZWR1Y2VNb3Rpb24oICd0cmFuc2l0aW9uJyApIH07XG5cdCR7IHJ0bChcblx0XHR7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoLTUwJSknIH0sXG5cdFx0eyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDUwJSknIH1cblx0KSB9XG5gO1xuXG4vLyBAdG9kbzogUmVmYWN0b3IgUmFuZ2VDb250cm9sIHdpdGggbGF0ZXN0IEhTdGFjayBjb25maWd1cmF0aW9uXG4vLyBAd29yZHByZXNzL2NvbXBvbmVudHMvdWkvaHN0YWNrXG5leHBvcnQgY29uc3QgSW5wdXROdW1iZXIgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRmb250LXNpemU6IDEzcHg7XG5cdG1hcmdpbi10b3A6IDA7XG5cdHdpZHRoOiAkeyBzcGFjZSggOCApIH0gIWltcG9ydGFudDtcblxuXHRpbnB1dFt0eXBlPSdudW1iZXInXSYge1xuXHRcdCR7IHJhbmdlSGVpZ2h0IH07XG5cdH1cblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogYCR7IHNwYWNlKCAyICkgfSAhaW1wb3J0YW50YCB9ICkgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEFjdGlvblJpZ2h0V3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRkaXNwbGF5OiBibG9jaztcblx0bWFyZ2luLXRvcDogMDtcblxuXHRidXR0b24sXG5cdGJ1dHRvbi5pcy1zbWFsbCB7XG5cdFx0bWFyZ2luLWxlZnQ6IDA7XG5cdFx0JHsgcmFuZ2VIZWlnaHQgfTtcblx0fVxuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiA4IH0gKSB9XG5gO1xuIl19 */");
exports.AfterIconWrapper = AfterIconWrapper;

var railBackgroundColor = function railBackgroundColor(_ref6) {
  var disabled = _ref6.disabled,
      railColor = _ref6.railColor;
  var background = railColor || null;

  if (disabled) {
    background = (0, _styleMixins.color)('lightGray.400');
  }

  return /*#__PURE__*/(0, _core.css)({
    background: background
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var Rail = (0, _styledBase.default)("span", {
  target: "exqw8y24",
  label: "Rail"
})("background-color:", (0, _styleMixins.color)('lightGray.600'), ";box-sizing:border-box;left:0;pointer-events:none;right:0;display:block;height:3px;position:absolute;margin-top:14px;top:0;", railBackgroundColor, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
exports.Rail = Rail;

var trackBackgroundColor = function trackBackgroundColor(_ref7) {
  var disabled = _ref7.disabled,
      trackColor = _ref7.trackColor;
  var background = trackColor || 'currentColor';

  if (disabled) {
    background = (0, _styleMixins.color)('lightGray.800');
  }

  return /*#__PURE__*/(0, _core.css)({
    background: background
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvcmFuZ2UtY29udHJvbC9zdHlsZXMvcmFuZ2UtY29udHJvbC1zdHlsZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0ZRIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvcmFuZ2UtY29udHJvbC9zdHlsZXMvcmFuZ2UtY29udHJvbC1zdHlsZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IE51bWJlckNvbnRyb2wgZnJvbSAnLi4vLi4vbnVtYmVyLWNvbnRyb2wnO1xuaW1wb3J0IHsgY29sb3IsIHJlZHVjZU1vdGlvbiwgcnRsLCBzcGFjZSB9IGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlLW1peGlucyc7XG5cbmNvbnN0IHJhbmdlSGVpZ2h0ID0gKCkgPT4gY3NzKCB7IGhlaWdodDogMzAsIG1pbkhlaWdodDogMzAgfSApO1xuY29uc3QgdGh1bWJTaXplID0gMjA7XG5cbmV4cG9ydCBjb25zdCBSb290ID0gc3R5bGVkLmRpdmBcblx0LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0YWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cdGRpc3BsYXk6IGlubGluZS1mbGV4O1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG5cdHBhZGRpbmc6IDA7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0dG91Y2gtYWN0aW9uOiBub25lO1xuXHR3aWR0aDogMTAwJTtcbmA7XG5cbmNvbnN0IHdyYXBwZXJDb2xvciA9ICggeyBjb2xvcjogY29sb3JQcm9wID0gY29sb3IoICd1aS5ib3JkZXJGb2N1cycgKSB9ICkgPT4ge1xuXHRyZXR1cm4gY3NzKCB7IGNvbG9yOiBjb2xvclByb3AgfSApO1xufTtcbmNvbnN0IHdyYXBwZXJNYXJnaW4gPSAoIHsgbWFya3MgfSApID0+XG5cdGNzcyggeyBtYXJnaW5Cb3R0b206IG1hcmtzID8gMTYgOiBudWxsIH0gKTtcblxuZXhwb3J0IGNvbnN0IFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRjb2xvcjogJHsgY29sb3IoICdibHVlLm1lZGl1bS5mb2N1cycgKSB9O1xuXHRkaXNwbGF5OiBibG9jaztcblx0ZmxleDogMTtcblx0cGFkZGluZy10b3A6IDE1cHg7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0d2lkdGg6IDEwMCU7XG5cblx0JHsgd3JhcHBlckNvbG9yIH07XG5cdCR7IHJhbmdlSGVpZ2h0IH07XG5cdCR7IHdyYXBwZXJNYXJnaW4gfTtcblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMTAgfSApIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBCZWZvcmVJY29uV3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRtYXJnaW4tdG9wOiAzcHg7XG5cblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiA2IH0gKSB9XG5gO1xuXG5leHBvcnQgY29uc3QgQWZ0ZXJJY29uV3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRtYXJnaW4tdG9wOiAzcHg7XG5cblx0JHsgcnRsKCB7IG1hcmdpbkxlZnQ6IDE2IH0gKSB9XG5gO1xuXG5jb25zdCByYWlsQmFja2dyb3VuZENvbG9yID0gKCB7IGRpc2FibGVkLCByYWlsQ29sb3IgfSApID0+IHtcblx0bGV0IGJhY2tncm91bmQgPSByYWlsQ29sb3IgfHwgbnVsbDtcblxuXHRpZiAoIGRpc2FibGVkICkge1xuXHRcdGJhY2tncm91bmQgPSBjb2xvciggJ2xpZ2h0R3JheS40MDAnICk7XG5cdH1cblxuXHRyZXR1cm4gY3NzKCB7XG5cdFx0YmFja2dyb3VuZCxcblx0fSApO1xufTtcblxuZXhwb3J0IGNvbnN0IFJhaWwgPSBzdHlsZWQuc3BhbmBcblx0YmFja2dyb3VuZC1jb2xvcjogJHsgY29sb3IoICdsaWdodEdyYXkuNjAwJyApIH07XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGxlZnQ6IDA7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRyaWdodDogMDtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGhlaWdodDogM3B4O1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdG1hcmdpbi10b3A6IDE0cHg7XG5cdHRvcDogMDtcblxuXHQkeyByYWlsQmFja2dyb3VuZENvbG9yIH07XG5gO1xuXG5jb25zdCB0cmFja0JhY2tncm91bmRDb2xvciA9ICggeyBkaXNhYmxlZCwgdHJhY2tDb2xvciB9ICkgPT4ge1xuXHRsZXQgYmFja2dyb3VuZCA9IHRyYWNrQ29sb3IgfHwgJ2N1cnJlbnRDb2xvcic7XG5cblx0aWYgKCBkaXNhYmxlZCApIHtcblx0XHRiYWNrZ3JvdW5kID0gY29sb3IoICdsaWdodEdyYXkuODAwJyApO1xuXHR9XG5cblx0cmV0dXJuIGNzcygge1xuXHRcdGJhY2tncm91bmQsXG5cdH0gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBUcmFjayA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG5cdGJvcmRlci1yYWRpdXM6IDFweDtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0aGVpZ2h0OiAzcHg7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRkaXNwbGF5OiBibG9jaztcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRtYXJnaW4tdG9wOiAxNHB4O1xuXHR0b3A6IDA7XG5cblx0JHsgdHJhY2tCYWNrZ3JvdW5kQ29sb3IgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBNYXJrc1dyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogYmxvY2s7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHdpZHRoOiAxMDAlO1xuXHR1c2VyLXNlbGVjdDogbm9uZTtcbmA7XG5cbmNvbnN0IG1hcmtGaWxsID0gKCB7IGRpc2FibGVkLCBpc0ZpbGxlZCB9ICkgPT4ge1xuXHRsZXQgYmFja2dyb3VuZENvbG9yID0gaXNGaWxsZWQgPyAnY3VycmVudENvbG9yJyA6IGNvbG9yKCAnbGlnaHRHcmF5LjYwMCcgKTtcblxuXHRpZiAoIGRpc2FibGVkICkge1xuXHRcdGJhY2tncm91bmRDb2xvciA9IGNvbG9yKCAnbGlnaHRHcmF5LjgwMCcgKTtcblx0fVxuXG5cdHJldHVybiBjc3MoIHtcblx0XHRiYWNrZ3JvdW5kQ29sb3IsXG5cdH0gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBNYXJrID0gc3R5bGVkLnNwYW5gXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGhlaWdodDogOXB4O1xuXHRsZWZ0OiAwO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogLTRweDtcblx0d2lkdGg6IDFweDtcblxuXHQkeyBtYXJrRmlsbCB9O1xuYDtcblxuY29uc3QgbWFya0xhYmVsRmlsbCA9ICggeyBpc0ZpbGxlZCB9ICkgPT4ge1xuXHRyZXR1cm4gY3NzKCB7XG5cdFx0Y29sb3I6IGlzRmlsbGVkID8gY29sb3IoICdkYXJrR3JheS4zMDAnICkgOiBjb2xvciggJ2xpZ2h0R3JheS42MDAnICksXG5cdH0gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBNYXJrTGFiZWwgPSBzdHlsZWQuc3BhbmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0Y29sb3I6ICR7IGNvbG9yKCAnbGlnaHRHcmF5LjYwMCcgKSB9O1xuXHRsZWZ0OiAwO1xuXHRmb250LXNpemU6IDExcHg7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dG9wOiAxMnB4O1xuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoIC01MCUgKTtcblx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcblxuXHQkeyBtYXJrTGFiZWxGaWxsIH07XG5gO1xuXG5leHBvcnQgY29uc3QgVGh1bWJXcmFwcGVyID0gc3R5bGVkLnNwYW5gXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGhlaWdodDogJHsgdGh1bWJTaXplIH1weDtcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdG1hcmdpbi10b3A6IDVweDtcblx0b3V0bGluZTogMDtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dG9wOiAwO1xuXHR1c2VyLXNlbGVjdDogbm9uZTtcblx0d2lkdGg6ICR7IHRodW1iU2l6ZSB9cHg7XG5cblx0JHsgcnRsKCB7IG1hcmdpbkxlZnQ6IC0xMCB9ICkgfVxuYDtcblxuY29uc3QgdGh1bWJGb2N1cyA9ICggeyBpc0ZvY3VzZWQgfSApID0+IHtcblx0cmV0dXJuIGNzcygge1xuXHRcdGJvcmRlckNvbG9yOiBpc0ZvY3VzZWRcblx0XHRcdD8gY29sb3IoICd1aS5ib3JkZXJGb2N1cycgKVxuXHRcdFx0OiBjb2xvciggJ2RhcmtHcmF5LjIwMCcgKSxcblx0XHRib3hTaGFkb3c6IGlzRm9jdXNlZFxuXHRcdFx0PyBgXG5cdFx0XHRcdDAgMCAwIDFweCAkeyBjb2xvciggJ3VpLmJvcmRlckZvY3VzJyApIH1cblx0XHRcdGBcblx0XHRcdDogYFxuXHRcdFx0XHQwIDAgMCByZ2JhKDAsIDAsIDAsIDApXG5cdFx0XHRgLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgVGh1bWIgPSBzdHlsZWQuc3BhbmBcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0YmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG5cdGJvcmRlci1yYWRpdXM6IDUwJTtcblx0Ym9yZGVyOiAxcHggc29saWQgJHsgY29sb3IoICdkYXJrR3JheS4yMDAnICkgfTtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0aGVpZ2h0OiAxMDAlO1xuXHRvdXRsaW5lOiAwO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHVzZXItc2VsZWN0OiBub25lO1xuXHR3aWR0aDogMTAwJTtcblxuXHQkeyB0aHVtYkZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgSW5wdXRSYW5nZSA9IHN0eWxlZC5pbnB1dGBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0Y3Vyc29yOiBwb2ludGVyO1xuXHRkaXNwbGF5OiBibG9jaztcblx0aGVpZ2h0OiAxMDAlO1xuXHRsZWZ0OiAwO1xuXHRtYXJnaW46IDAgLSR7IHRodW1iU2l6ZSAvIDIgfXB4O1xuXHRvcGFjaXR5OiAwO1xuXHRvdXRsaW5lOiBub25lO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHJpZ2h0OiAwO1xuXHR0b3A6IDA7XG5cdHdpZHRoOiBjYWxjKCAxMDAlICsgJHsgdGh1bWJTaXplIH1weCApO1xuYDtcblxuY29uc3QgdG9vbHRpcFNob3cgPSAoIHsgc2hvdyB9ICkgPT4ge1xuXHRyZXR1cm4gY3NzKCB7XG5cdFx0b3BhY2l0eTogc2hvdyA/IDEgOiAwLFxuXHR9ICk7XG59O1xuXG5jb25zdCB0b29sdGlwUG9zaXRpb24gPSAoIHsgcG9zaXRpb24gfSApID0+IHtcblx0Y29uc3QgaXNUb3AgPSBwb3NpdGlvbiA9PT0gJ3RvcCc7XG5cblx0aWYgKCBpc1RvcCApIHtcblx0XHRyZXR1cm4gY3NzYFxuXHRcdFx0dG9wOiAtODAlO1xuXHRcdGA7XG5cdH1cblxuXHRyZXR1cm4gY3NzYFxuXHRcdGJvdHRvbTogLTgwJTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBUb29sdGlwID0gc3R5bGVkLnNwYW5gXG5cdGJhY2tncm91bmQ6ICR7IGNvbG9yKCAndWkuYm9yZGVyJyApIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0Y29sb3I6IHdoaXRlO1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdGZvbnQtc2l6ZTogMTJweDtcblx0bWluLXdpZHRoOiAzMnB4O1xuXHRvcGFjaXR5OiAwO1xuXHRwYWRkaW5nOiA0cHggOHB4O1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdHRyYW5zaXRpb246IG9wYWNpdHkgMTIwbXMgZWFzZTtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5cdGxpbmUtaGVpZ2h0OiAxLjQ7XG5cblx0JHsgdG9vbHRpcFNob3cgfTtcblx0JHsgdG9vbHRpcFBvc2l0aW9uIH07XG5cdCR7IHJlZHVjZU1vdGlvbiggJ3RyYW5zaXRpb24nICkgfTtcblx0JHsgcnRsKFxuXHRcdHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgtNTAlKScgfSxcblx0XHR7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoNTAlKScgfVxuXHQpIH1cbmA7XG5cbi8vIEB0b2RvOiBSZWZhY3RvciBSYW5nZUNvbnRyb2wgd2l0aCBsYXRlc3QgSFN0YWNrIGNvbmZpZ3VyYXRpb25cbi8vIEB3b3JkcHJlc3MvY29tcG9uZW50cy91aS9oc3RhY2tcbmV4cG9ydCBjb25zdCBJbnB1dE51bWJlciA9IHN0eWxlZCggTnVtYmVyQ29udHJvbCApYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdGZvbnQtc2l6ZTogMTNweDtcblx0bWFyZ2luLXRvcDogMDtcblx0d2lkdGg6ICR7IHNwYWNlKCA4ICkgfSAhaW1wb3J0YW50O1xuXG5cdGlucHV0W3R5cGU9J251bWJlciddJiB7XG5cdFx0JHsgcmFuZ2VIZWlnaHQgfTtcblx0fVxuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiBgJHsgc3BhY2UoIDIgKSB9ICFpbXBvcnRhbnRgIH0gKSB9XG5gO1xuXG5leHBvcnQgY29uc3QgQWN0aW9uUmlnaHRXcmFwcGVyID0gc3R5bGVkLnNwYW5gXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRtYXJnaW4tdG9wOiAwO1xuXG5cdGJ1dHRvbixcblx0YnV0dG9uLmlzLXNtYWxsIHtcblx0XHRtYXJnaW4tbGVmdDogMDtcblx0XHQkeyByYW5nZUhlaWdodCB9O1xuXHR9XG5cblx0JHsgcnRsKCB7IG1hcmdpbkxlZnQ6IDggfSApIH1cbmA7XG4iXX0= */");
};

var Track = (0, _styledBase.default)("span", {
  target: "exqw8y25",
  label: "Track"
})("background-color:currentColor;border-radius:1px;box-sizing:border-box;height:3px;pointer-events:none;display:block;position:absolute;margin-top:14px;top:0;", trackBackgroundColor, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
exports.Track = Track;
var MarksWrapper = (0, _styledBase.default)("span", {
  target: "exqw8y26",
  label: "MarksWrapper"
})(process.env.NODE_ENV === "production" ? {
  name: "8d21nl",
  styles: "box-sizing:border-box;display:block;pointer-events:none;position:relative;width:100%;user-select:none;"
} : {
  name: "8d21nl",
  styles: "box-sizing:border-box;display:block;pointer-events:none;position:relative;width:100%;user-select:none;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
exports.MarksWrapper = MarksWrapper;

var markFill = function markFill(_ref8) {
  var disabled = _ref8.disabled,
      isFilled = _ref8.isFilled;
  var backgroundColor = isFilled ? 'currentColor' : (0, _styleMixins.color)('lightGray.600');

  if (disabled) {
    backgroundColor = (0, _styleMixins.color)('lightGray.800');
  }

  return /*#__PURE__*/(0, _core.css)({
    backgroundColor: backgroundColor
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var Mark = (0, _styledBase.default)("span", {
  target: "exqw8y27",
  label: "Mark"
})("box-sizing:border-box;height:9px;left:0;position:absolute;top:-4px;width:1px;", markFill, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvcmFuZ2UtY29udHJvbC9zdHlsZXMvcmFuZ2UtY29udHJvbC1zdHlsZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUkrQiIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3JhbmdlLWNvbnRyb2wvc3R5bGVzL3JhbmdlLWNvbnRyb2wtc3R5bGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBOdW1iZXJDb250cm9sIGZyb20gJy4uLy4uL251bWJlci1jb250cm9sJztcbmltcG9ydCB7IGNvbG9yLCByZWR1Y2VNb3Rpb24sIHJ0bCwgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zdHlsZS1taXhpbnMnO1xuXG5jb25zdCByYW5nZUhlaWdodCA9ICgpID0+IGNzcyggeyBoZWlnaHQ6IDMwLCBtaW5IZWlnaHQ6IDMwIH0gKTtcbmNvbnN0IHRodW1iU2l6ZSA9IDIwO1xuXG5leHBvcnQgY29uc3QgUm9vdCA9IHN0eWxlZC5kaXZgXG5cdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcblx0anVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXHRwYWRkaW5nOiAwO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHRvdWNoLWFjdGlvbjogbm9uZTtcblx0d2lkdGg6IDEwMCU7XG5gO1xuXG5jb25zdCB3cmFwcGVyQ29sb3IgPSAoIHsgY29sb3I6IGNvbG9yUHJvcCA9IGNvbG9yKCAndWkuYm9yZGVyRm9jdXMnICkgfSApID0+IHtcblx0cmV0dXJuIGNzcyggeyBjb2xvcjogY29sb3JQcm9wIH0gKTtcbn07XG5jb25zdCB3cmFwcGVyTWFyZ2luID0gKCB7IG1hcmtzIH0gKSA9PlxuXHRjc3MoIHsgbWFyZ2luQm90dG9tOiBtYXJrcyA/IDE2IDogbnVsbCB9ICk7XG5cbmV4cG9ydCBjb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0Y29sb3I6ICR7IGNvbG9yKCAnYmx1ZS5tZWRpdW0uZm9jdXMnICkgfTtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGZsZXg6IDE7XG5cdHBhZGRpbmctdG9wOiAxNXB4O1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdCR7IHdyYXBwZXJDb2xvciB9O1xuXHQkeyByYW5nZUhlaWdodCB9O1xuXHQkeyB3cmFwcGVyTWFyZ2luIH07XG5cblx0JHsgcnRsKCB7IG1hcmdpbkxlZnQ6IDEwIH0gKSB9XG5gO1xuXG5leHBvcnQgY29uc3QgQmVmb3JlSWNvbldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0bWFyZ2luLXRvcDogM3B4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogNiB9ICkgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEFmdGVySWNvbldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0bWFyZ2luLXRvcDogM3B4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiAxNiB9ICkgfVxuYDtcblxuY29uc3QgcmFpbEJhY2tncm91bmRDb2xvciA9ICggeyBkaXNhYmxlZCwgcmFpbENvbG9yIH0gKSA9PiB7XG5cdGxldCBiYWNrZ3JvdW5kID0gcmFpbENvbG9yIHx8IG51bGw7XG5cblx0aWYgKCBkaXNhYmxlZCApIHtcblx0XHRiYWNrZ3JvdW5kID0gY29sb3IoICdsaWdodEdyYXkuNDAwJyApO1xuXHR9XG5cblx0cmV0dXJuIGNzcygge1xuXHRcdGJhY2tncm91bmQsXG5cdH0gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBSYWlsID0gc3R5bGVkLnNwYW5gXG5cdGJhY2tncm91bmQtY29sb3I6ICR7IGNvbG9yKCAnbGlnaHRHcmF5LjYwMCcgKSB9O1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRsZWZ0OiAwO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cmlnaHQ6IDA7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRoZWlnaHQ6IDNweDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRtYXJnaW4tdG9wOiAxNHB4O1xuXHR0b3A6IDA7XG5cblx0JHsgcmFpbEJhY2tncm91bmRDb2xvciB9O1xuYDtcblxuY29uc3QgdHJhY2tCYWNrZ3JvdW5kQ29sb3IgPSAoIHsgZGlzYWJsZWQsIHRyYWNrQ29sb3IgfSApID0+IHtcblx0bGV0IGJhY2tncm91bmQgPSB0cmFja0NvbG9yIHx8ICdjdXJyZW50Q29sb3InO1xuXG5cdGlmICggZGlzYWJsZWQgKSB7XG5cdFx0YmFja2dyb3VuZCA9IGNvbG9yKCAnbGlnaHRHcmF5LjgwMCcgKTtcblx0fVxuXG5cdHJldHVybiBjc3MoIHtcblx0XHRiYWNrZ3JvdW5kLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgVHJhY2sgPSBzdHlsZWQuc3BhbmBcblx0YmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuXHRib3JkZXItcmFkaXVzOiAxcHg7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGhlaWdodDogM3B4O1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0ZGlzcGxheTogYmxvY2s7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0bWFyZ2luLXRvcDogMTRweDtcblx0dG9wOiAwO1xuXG5cdCR7IHRyYWNrQmFja2dyb3VuZENvbG9yIH07XG5gO1xuXG5leHBvcnQgY29uc3QgTWFya3NXcmFwcGVyID0gc3R5bGVkLnNwYW5gXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR3aWR0aDogMTAwJTtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5gO1xuXG5jb25zdCBtYXJrRmlsbCA9ICggeyBkaXNhYmxlZCwgaXNGaWxsZWQgfSApID0+IHtcblx0bGV0IGJhY2tncm91bmRDb2xvciA9IGlzRmlsbGVkID8gJ2N1cnJlbnRDb2xvcicgOiBjb2xvciggJ2xpZ2h0R3JheS42MDAnICk7XG5cblx0aWYgKCBkaXNhYmxlZCApIHtcblx0XHRiYWNrZ3JvdW5kQ29sb3IgPSBjb2xvciggJ2xpZ2h0R3JheS44MDAnICk7XG5cdH1cblxuXHRyZXR1cm4gY3NzKCB7XG5cdFx0YmFja2dyb3VuZENvbG9yLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgTWFyayA9IHN0eWxlZC5zcGFuYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRoZWlnaHQ6IDlweDtcblx0bGVmdDogMDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IC00cHg7XG5cdHdpZHRoOiAxcHg7XG5cblx0JHsgbWFya0ZpbGwgfTtcbmA7XG5cbmNvbnN0IG1hcmtMYWJlbEZpbGwgPSAoIHsgaXNGaWxsZWQgfSApID0+IHtcblx0cmV0dXJuIGNzcygge1xuXHRcdGNvbG9yOiBpc0ZpbGxlZCA/IGNvbG9yKCAnZGFya0dyYXkuMzAwJyApIDogY29sb3IoICdsaWdodEdyYXkuNjAwJyApLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgTWFya0xhYmVsID0gc3R5bGVkLnNwYW5gXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGNvbG9yOiAkeyBjb2xvciggJ2xpZ2h0R3JheS42MDAnICkgfTtcblx0bGVmdDogMDtcblx0Zm9udC1zaXplOiAxMXB4O1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogMTJweDtcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKCAtNTAlICk7XG5cdHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cblx0JHsgbWFya0xhYmVsRmlsbCB9O1xuYDtcblxuZXhwb3J0IGNvbnN0IFRodW1iV3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRoZWlnaHQ6ICR7IHRodW1iU2l6ZSB9cHg7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRtYXJnaW4tdG9wOiA1cHg7XG5cdG91dGxpbmU6IDA7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogMDtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5cdHdpZHRoOiAkeyB0aHVtYlNpemUgfXB4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiAtMTAgfSApIH1cbmA7XG5cbmNvbnN0IHRodW1iRm9jdXMgPSAoIHsgaXNGb2N1c2VkIH0gKSA9PiB7XG5cdHJldHVybiBjc3MoIHtcblx0XHRib3JkZXJDb2xvcjogaXNGb2N1c2VkXG5cdFx0XHQ/IGNvbG9yKCAndWkuYm9yZGVyRm9jdXMnIClcblx0XHRcdDogY29sb3IoICdkYXJrR3JheS4yMDAnICksXG5cdFx0Ym94U2hhZG93OiBpc0ZvY3VzZWRcblx0XHRcdD8gYFxuXHRcdFx0XHQwIDAgMCAxcHggJHsgY29sb3IoICd1aS5ib3JkZXJGb2N1cycgKSB9XG5cdFx0XHRgXG5cdFx0XHQ6IGBcblx0XHRcdFx0MCAwIDAgcmdiYSgwLCAwLCAwLCAwKVxuXHRcdFx0YCxcblx0fSApO1xufTtcblxuZXhwb3J0IGNvbnN0IFRodW1iID0gc3R5bGVkLnNwYW5gXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuXHRib3JkZXItcmFkaXVzOiA1MCU7XG5cdGJvcmRlcjogMXB4IHNvbGlkICR7IGNvbG9yKCAnZGFya0dyYXkuMjAwJyApIH07XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGhlaWdodDogMTAwJTtcblx0b3V0bGluZTogMDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR1c2VyLXNlbGVjdDogbm9uZTtcblx0d2lkdGg6IDEwMCU7XG5cblx0JHsgdGh1bWJGb2N1cyB9O1xuYDtcblxuZXhwb3J0IGNvbnN0IElucHV0UmFuZ2UgPSBzdHlsZWQuaW5wdXRgXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGN1cnNvcjogcG9pbnRlcjtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGhlaWdodDogMTAwJTtcblx0bGVmdDogMDtcblx0bWFyZ2luOiAwIC0keyB0aHVtYlNpemUgLyAyIH1weDtcblx0b3BhY2l0eTogMDtcblx0b3V0bGluZTogbm9uZTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRyaWdodDogMDtcblx0dG9wOiAwO1xuXHR3aWR0aDogY2FsYyggMTAwJSArICR7IHRodW1iU2l6ZSB9cHggKTtcbmA7XG5cbmNvbnN0IHRvb2x0aXBTaG93ID0gKCB7IHNob3cgfSApID0+IHtcblx0cmV0dXJuIGNzcygge1xuXHRcdG9wYWNpdHk6IHNob3cgPyAxIDogMCxcblx0fSApO1xufTtcblxuY29uc3QgdG9vbHRpcFBvc2l0aW9uID0gKCB7IHBvc2l0aW9uIH0gKSA9PiB7XG5cdGNvbnN0IGlzVG9wID0gcG9zaXRpb24gPT09ICd0b3AnO1xuXG5cdGlmICggaXNUb3AgKSB7XG5cdFx0cmV0dXJuIGNzc2Bcblx0XHRcdHRvcDogLTgwJTtcblx0XHRgO1xuXHR9XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3R0b206IC04MCU7XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbHRpcCA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kOiAkeyBjb2xvciggJ3VpLmJvcmRlcicgKSB9O1xuXHRib3JkZXItcmFkaXVzOiAycHg7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGNvbG9yOiB3aGl0ZTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRmb250LXNpemU6IDEycHg7XG5cdG1pbi13aWR0aDogMzJweDtcblx0b3BhY2l0eTogMDtcblx0cGFkZGluZzogNHB4IDhweDtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDEyMG1zIGVhc2U7XG5cdHVzZXItc2VsZWN0OiBub25lO1xuXHRsaW5lLWhlaWdodDogMS40O1xuXG5cdCR7IHRvb2x0aXBTaG93IH07XG5cdCR7IHRvb2x0aXBQb3NpdGlvbiB9O1xuXHQkeyByZWR1Y2VNb3Rpb24oICd0cmFuc2l0aW9uJyApIH07XG5cdCR7IHJ0bChcblx0XHR7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoLTUwJSknIH0sXG5cdFx0eyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDUwJSknIH1cblx0KSB9XG5gO1xuXG4vLyBAdG9kbzogUmVmYWN0b3IgUmFuZ2VDb250cm9sIHdpdGggbGF0ZXN0IEhTdGFjayBjb25maWd1cmF0aW9uXG4vLyBAd29yZHByZXNzL2NvbXBvbmVudHMvdWkvaHN0YWNrXG5leHBvcnQgY29uc3QgSW5wdXROdW1iZXIgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRmb250LXNpemU6IDEzcHg7XG5cdG1hcmdpbi10b3A6IDA7XG5cdHdpZHRoOiAkeyBzcGFjZSggOCApIH0gIWltcG9ydGFudDtcblxuXHRpbnB1dFt0eXBlPSdudW1iZXInXSYge1xuXHRcdCR7IHJhbmdlSGVpZ2h0IH07XG5cdH1cblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogYCR7IHNwYWNlKCAyICkgfSAhaW1wb3J0YW50YCB9ICkgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEFjdGlvblJpZ2h0V3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRkaXNwbGF5OiBibG9jaztcblx0bWFyZ2luLXRvcDogMDtcblxuXHRidXR0b24sXG5cdGJ1dHRvbi5pcy1zbWFsbCB7XG5cdFx0bWFyZ2luLWxlZnQ6IDA7XG5cdFx0JHsgcmFuZ2VIZWlnaHQgfTtcblx0fVxuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiA4IH0gKSB9XG5gO1xuIl19 */"));
exports.Mark = Mark;

var markLabelFill = function markLabelFill(_ref9) {
  var isFilled = _ref9.isFilled;
  return /*#__PURE__*/(0, _core.css)({
    color: isFilled ? (0, _styleMixins.color)('darkGray.300') : (0, _styleMixins.color)('lightGray.600')
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var MarkLabel = (0, _styledBase.default)("span", {
  target: "exqw8y28",
  label: "MarkLabel"
})("box-sizing:border-box;color:", (0, _styleMixins.color)('lightGray.600'), ";left:0;font-size:11px;position:absolute;top:12px;transform:translateX( -50% );white-space:nowrap;", markLabelFill, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
exports.MarkLabel = MarkLabel;
var ThumbWrapper = (0, _styledBase.default)("span", {
  target: "exqw8y29",
  label: "ThumbWrapper"
})("align-items:center;box-sizing:border-box;display:flex;height:", thumbSize, "px;justify-content:center;margin-top:5px;outline:0;pointer-events:none;position:absolute;top:0;user-select:none;width:", thumbSize, "px;", (0, _styleMixins.rtl)({
  marginLeft: -10
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
exports.ThumbWrapper = ThumbWrapper;

var thumbFocus = function thumbFocus(_ref10) {
  var isFocused = _ref10.isFocused;
  return /*#__PURE__*/(0, _core.css)({
    borderColor: isFocused ? (0, _styleMixins.color)('ui.borderFocus') : (0, _styleMixins.color)('darkGray.200'),
    boxShadow: isFocused ? "\n\t\t\t\t0 0 0 1px ".concat((0, _styleMixins.color)('ui.borderFocus'), "\n\t\t\t") : "\n\t\t\t\t0 0 0 rgba(0, 0, 0, 0)\n\t\t\t"
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var Thumb = (0, _styledBase.default)("span", {
  target: "exqw8y210",
  label: "Thumb"
})("align-items:center;background-color:white;border-radius:50%;border:1px solid ", (0, _styleMixins.color)('darkGray.200'), ";box-sizing:border-box;height:100%;outline:0;position:absolute;user-select:none;width:100%;", thumbFocus, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvcmFuZ2UtY29udHJvbC9zdHlsZXMvcmFuZ2UtY29udHJvbC1zdHlsZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcU1nQyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3JhbmdlLWNvbnRyb2wvc3R5bGVzL3JhbmdlLWNvbnRyb2wtc3R5bGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBOdW1iZXJDb250cm9sIGZyb20gJy4uLy4uL251bWJlci1jb250cm9sJztcbmltcG9ydCB7IGNvbG9yLCByZWR1Y2VNb3Rpb24sIHJ0bCwgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zdHlsZS1taXhpbnMnO1xuXG5jb25zdCByYW5nZUhlaWdodCA9ICgpID0+IGNzcyggeyBoZWlnaHQ6IDMwLCBtaW5IZWlnaHQ6IDMwIH0gKTtcbmNvbnN0IHRodW1iU2l6ZSA9IDIwO1xuXG5leHBvcnQgY29uc3QgUm9vdCA9IHN0eWxlZC5kaXZgXG5cdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcblx0anVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXHRwYWRkaW5nOiAwO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHRvdWNoLWFjdGlvbjogbm9uZTtcblx0d2lkdGg6IDEwMCU7XG5gO1xuXG5jb25zdCB3cmFwcGVyQ29sb3IgPSAoIHsgY29sb3I6IGNvbG9yUHJvcCA9IGNvbG9yKCAndWkuYm9yZGVyRm9jdXMnICkgfSApID0+IHtcblx0cmV0dXJuIGNzcyggeyBjb2xvcjogY29sb3JQcm9wIH0gKTtcbn07XG5jb25zdCB3cmFwcGVyTWFyZ2luID0gKCB7IG1hcmtzIH0gKSA9PlxuXHRjc3MoIHsgbWFyZ2luQm90dG9tOiBtYXJrcyA/IDE2IDogbnVsbCB9ICk7XG5cbmV4cG9ydCBjb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0Y29sb3I6ICR7IGNvbG9yKCAnYmx1ZS5tZWRpdW0uZm9jdXMnICkgfTtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGZsZXg6IDE7XG5cdHBhZGRpbmctdG9wOiAxNXB4O1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdCR7IHdyYXBwZXJDb2xvciB9O1xuXHQkeyByYW5nZUhlaWdodCB9O1xuXHQkeyB3cmFwcGVyTWFyZ2luIH07XG5cblx0JHsgcnRsKCB7IG1hcmdpbkxlZnQ6IDEwIH0gKSB9XG5gO1xuXG5leHBvcnQgY29uc3QgQmVmb3JlSWNvbldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0bWFyZ2luLXRvcDogM3B4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogNiB9ICkgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEFmdGVySWNvbldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0bWFyZ2luLXRvcDogM3B4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiAxNiB9ICkgfVxuYDtcblxuY29uc3QgcmFpbEJhY2tncm91bmRDb2xvciA9ICggeyBkaXNhYmxlZCwgcmFpbENvbG9yIH0gKSA9PiB7XG5cdGxldCBiYWNrZ3JvdW5kID0gcmFpbENvbG9yIHx8IG51bGw7XG5cblx0aWYgKCBkaXNhYmxlZCApIHtcblx0XHRiYWNrZ3JvdW5kID0gY29sb3IoICdsaWdodEdyYXkuNDAwJyApO1xuXHR9XG5cblx0cmV0dXJuIGNzcygge1xuXHRcdGJhY2tncm91bmQsXG5cdH0gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBSYWlsID0gc3R5bGVkLnNwYW5gXG5cdGJhY2tncm91bmQtY29sb3I6ICR7IGNvbG9yKCAnbGlnaHRHcmF5LjYwMCcgKSB9O1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRsZWZ0OiAwO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cmlnaHQ6IDA7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRoZWlnaHQ6IDNweDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRtYXJnaW4tdG9wOiAxNHB4O1xuXHR0b3A6IDA7XG5cblx0JHsgcmFpbEJhY2tncm91bmRDb2xvciB9O1xuYDtcblxuY29uc3QgdHJhY2tCYWNrZ3JvdW5kQ29sb3IgPSAoIHsgZGlzYWJsZWQsIHRyYWNrQ29sb3IgfSApID0+IHtcblx0bGV0IGJhY2tncm91bmQgPSB0cmFja0NvbG9yIHx8ICdjdXJyZW50Q29sb3InO1xuXG5cdGlmICggZGlzYWJsZWQgKSB7XG5cdFx0YmFja2dyb3VuZCA9IGNvbG9yKCAnbGlnaHRHcmF5LjgwMCcgKTtcblx0fVxuXG5cdHJldHVybiBjc3MoIHtcblx0XHRiYWNrZ3JvdW5kLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgVHJhY2sgPSBzdHlsZWQuc3BhbmBcblx0YmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuXHRib3JkZXItcmFkaXVzOiAxcHg7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGhlaWdodDogM3B4O1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0ZGlzcGxheTogYmxvY2s7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0bWFyZ2luLXRvcDogMTRweDtcblx0dG9wOiAwO1xuXG5cdCR7IHRyYWNrQmFja2dyb3VuZENvbG9yIH07XG5gO1xuXG5leHBvcnQgY29uc3QgTWFya3NXcmFwcGVyID0gc3R5bGVkLnNwYW5gXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR3aWR0aDogMTAwJTtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5gO1xuXG5jb25zdCBtYXJrRmlsbCA9ICggeyBkaXNhYmxlZCwgaXNGaWxsZWQgfSApID0+IHtcblx0bGV0IGJhY2tncm91bmRDb2xvciA9IGlzRmlsbGVkID8gJ2N1cnJlbnRDb2xvcicgOiBjb2xvciggJ2xpZ2h0R3JheS42MDAnICk7XG5cblx0aWYgKCBkaXNhYmxlZCApIHtcblx0XHRiYWNrZ3JvdW5kQ29sb3IgPSBjb2xvciggJ2xpZ2h0R3JheS44MDAnICk7XG5cdH1cblxuXHRyZXR1cm4gY3NzKCB7XG5cdFx0YmFja2dyb3VuZENvbG9yLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgTWFyayA9IHN0eWxlZC5zcGFuYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRoZWlnaHQ6IDlweDtcblx0bGVmdDogMDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IC00cHg7XG5cdHdpZHRoOiAxcHg7XG5cblx0JHsgbWFya0ZpbGwgfTtcbmA7XG5cbmNvbnN0IG1hcmtMYWJlbEZpbGwgPSAoIHsgaXNGaWxsZWQgfSApID0+IHtcblx0cmV0dXJuIGNzcygge1xuXHRcdGNvbG9yOiBpc0ZpbGxlZCA/IGNvbG9yKCAnZGFya0dyYXkuMzAwJyApIDogY29sb3IoICdsaWdodEdyYXkuNjAwJyApLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgTWFya0xhYmVsID0gc3R5bGVkLnNwYW5gXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGNvbG9yOiAkeyBjb2xvciggJ2xpZ2h0R3JheS42MDAnICkgfTtcblx0bGVmdDogMDtcblx0Zm9udC1zaXplOiAxMXB4O1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogMTJweDtcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKCAtNTAlICk7XG5cdHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cblx0JHsgbWFya0xhYmVsRmlsbCB9O1xuYDtcblxuZXhwb3J0IGNvbnN0IFRodW1iV3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRoZWlnaHQ6ICR7IHRodW1iU2l6ZSB9cHg7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRtYXJnaW4tdG9wOiA1cHg7XG5cdG91dGxpbmU6IDA7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogMDtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5cdHdpZHRoOiAkeyB0aHVtYlNpemUgfXB4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiAtMTAgfSApIH1cbmA7XG5cbmNvbnN0IHRodW1iRm9jdXMgPSAoIHsgaXNGb2N1c2VkIH0gKSA9PiB7XG5cdHJldHVybiBjc3MoIHtcblx0XHRib3JkZXJDb2xvcjogaXNGb2N1c2VkXG5cdFx0XHQ/IGNvbG9yKCAndWkuYm9yZGVyRm9jdXMnIClcblx0XHRcdDogY29sb3IoICdkYXJrR3JheS4yMDAnICksXG5cdFx0Ym94U2hhZG93OiBpc0ZvY3VzZWRcblx0XHRcdD8gYFxuXHRcdFx0XHQwIDAgMCAxcHggJHsgY29sb3IoICd1aS5ib3JkZXJGb2N1cycgKSB9XG5cdFx0XHRgXG5cdFx0XHQ6IGBcblx0XHRcdFx0MCAwIDAgcmdiYSgwLCAwLCAwLCAwKVxuXHRcdFx0YCxcblx0fSApO1xufTtcblxuZXhwb3J0IGNvbnN0IFRodW1iID0gc3R5bGVkLnNwYW5gXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuXHRib3JkZXItcmFkaXVzOiA1MCU7XG5cdGJvcmRlcjogMXB4IHNvbGlkICR7IGNvbG9yKCAnZGFya0dyYXkuMjAwJyApIH07XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGhlaWdodDogMTAwJTtcblx0b3V0bGluZTogMDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR1c2VyLXNlbGVjdDogbm9uZTtcblx0d2lkdGg6IDEwMCU7XG5cblx0JHsgdGh1bWJGb2N1cyB9O1xuYDtcblxuZXhwb3J0IGNvbnN0IElucHV0UmFuZ2UgPSBzdHlsZWQuaW5wdXRgXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGN1cnNvcjogcG9pbnRlcjtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGhlaWdodDogMTAwJTtcblx0bGVmdDogMDtcblx0bWFyZ2luOiAwIC0keyB0aHVtYlNpemUgLyAyIH1weDtcblx0b3BhY2l0eTogMDtcblx0b3V0bGluZTogbm9uZTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRyaWdodDogMDtcblx0dG9wOiAwO1xuXHR3aWR0aDogY2FsYyggMTAwJSArICR7IHRodW1iU2l6ZSB9cHggKTtcbmA7XG5cbmNvbnN0IHRvb2x0aXBTaG93ID0gKCB7IHNob3cgfSApID0+IHtcblx0cmV0dXJuIGNzcygge1xuXHRcdG9wYWNpdHk6IHNob3cgPyAxIDogMCxcblx0fSApO1xufTtcblxuY29uc3QgdG9vbHRpcFBvc2l0aW9uID0gKCB7IHBvc2l0aW9uIH0gKSA9PiB7XG5cdGNvbnN0IGlzVG9wID0gcG9zaXRpb24gPT09ICd0b3AnO1xuXG5cdGlmICggaXNUb3AgKSB7XG5cdFx0cmV0dXJuIGNzc2Bcblx0XHRcdHRvcDogLTgwJTtcblx0XHRgO1xuXHR9XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3R0b206IC04MCU7XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbHRpcCA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kOiAkeyBjb2xvciggJ3VpLmJvcmRlcicgKSB9O1xuXHRib3JkZXItcmFkaXVzOiAycHg7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGNvbG9yOiB3aGl0ZTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRmb250LXNpemU6IDEycHg7XG5cdG1pbi13aWR0aDogMzJweDtcblx0b3BhY2l0eTogMDtcblx0cGFkZGluZzogNHB4IDhweDtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDEyMG1zIGVhc2U7XG5cdHVzZXItc2VsZWN0OiBub25lO1xuXHRsaW5lLWhlaWdodDogMS40O1xuXG5cdCR7IHRvb2x0aXBTaG93IH07XG5cdCR7IHRvb2x0aXBQb3NpdGlvbiB9O1xuXHQkeyByZWR1Y2VNb3Rpb24oICd0cmFuc2l0aW9uJyApIH07XG5cdCR7IHJ0bChcblx0XHR7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoLTUwJSknIH0sXG5cdFx0eyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDUwJSknIH1cblx0KSB9XG5gO1xuXG4vLyBAdG9kbzogUmVmYWN0b3IgUmFuZ2VDb250cm9sIHdpdGggbGF0ZXN0IEhTdGFjayBjb25maWd1cmF0aW9uXG4vLyBAd29yZHByZXNzL2NvbXBvbmVudHMvdWkvaHN0YWNrXG5leHBvcnQgY29uc3QgSW5wdXROdW1iZXIgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRmb250LXNpemU6IDEzcHg7XG5cdG1hcmdpbi10b3A6IDA7XG5cdHdpZHRoOiAkeyBzcGFjZSggOCApIH0gIWltcG9ydGFudDtcblxuXHRpbnB1dFt0eXBlPSdudW1iZXInXSYge1xuXHRcdCR7IHJhbmdlSGVpZ2h0IH07XG5cdH1cblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogYCR7IHNwYWNlKCAyICkgfSAhaW1wb3J0YW50YCB9ICkgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEFjdGlvblJpZ2h0V3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRkaXNwbGF5OiBibG9jaztcblx0bWFyZ2luLXRvcDogMDtcblxuXHRidXR0b24sXG5cdGJ1dHRvbi5pcy1zbWFsbCB7XG5cdFx0bWFyZ2luLWxlZnQ6IDA7XG5cdFx0JHsgcmFuZ2VIZWlnaHQgfTtcblx0fVxuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiA4IH0gKSB9XG5gO1xuIl19 */"));
exports.Thumb = Thumb;
var InputRange = (0, _styledBase.default)("input", {
  target: "exqw8y211",
  label: "InputRange"
})("box-sizing:border-box;cursor:pointer;display:block;height:100%;left:0;margin:0 -", thumbSize / 2, "px;opacity:0;outline:none;position:absolute;right:0;top:0;width:calc( 100% + ", thumbSize, "px );" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
exports.InputRange = InputRange;

var tooltipShow = function tooltipShow(_ref11) {
  var show = _ref11.show;
  return /*#__PURE__*/(0, _core.css)({
    opacity: show ? 1 : 0
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var _ref2 = process.env.NODE_ENV === "production" ? {
  name: "5qqmyx",
  styles: "top:-80%;"
} : {
  name: "5qqmyx",
  styles: "top:-80%;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var _ref3 = process.env.NODE_ENV === "production" ? {
  name: "eda4eg",
  styles: "bottom:-80%;"
} : {
  name: "eda4eg",
  styles: "bottom:-80%;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var tooltipPosition = function tooltipPosition(_ref12) {
  var position = _ref12.position;
  var isTop = position === 'top';

  if (isTop) {
    return _ref2;
  }

  return _ref3;
};

var Tooltip = (0, _styledBase.default)("span", {
  target: "exqw8y212",
  label: "Tooltip"
})("background:", (0, _styleMixins.color)('ui.border'), ";border-radius:2px;box-sizing:border-box;color:white;display:inline-block;font-size:12px;min-width:32px;opacity:0;padding:4px 8px;pointer-events:none;position:absolute;text-align:center;transition:opacity 120ms ease;user-select:none;line-height:1.4;", tooltipShow, ";", tooltipPosition, ";", (0, _styleMixins.reduceMotion)('transition'), ";", (0, _styleMixins.rtl)({
  transform: 'translateX(-50%)'
}, {
  transform: 'translateX(50%)'
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"); // @todo: Refactor RangeControl with latest HStack configuration
// @wordpress/components/ui/hstack

exports.Tooltip = Tooltip;
var InputNumber = ( /*#__PURE__*/0, _styledBase.default)(_numberControl.default, {
  target: "exqw8y213",
  label: "InputNumber"
})("box-sizing:border-box;display:inline-block;font-size:13px;margin-top:0;width:", (0, _styleMixins.space)(8), " !important;input[type='number']&{", rangeHeight, ";}", (0, _styleMixins.rtl)({
  marginLeft: "".concat((0, _styleMixins.space)(2), " !important")
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
exports.InputNumber = InputNumber;
var ActionRightWrapper = (0, _styledBase.default)("span", {
  target: "exqw8y214",
  label: "ActionRightWrapper"
})("box-sizing:border-box;display:block;margin-top:0;button,button.is-small{margin-left:0;", rangeHeight, ";}", (0, _styleMixins.rtl)({
  marginLeft: 8
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
exports.ActionRightWrapper = ActionRightWrapper;
//# sourceMappingURL=range-control-styles.js.map