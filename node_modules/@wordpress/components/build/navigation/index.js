"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Navigation;

var _element = require("@wordpress/element");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _lodash = require("lodash");

var _i18n = require("@wordpress/i18n");

var _animate = require("../animate");

var _constants = require("./constants");

var _context = require("./context");

var _navigationStyles = require("./styles/navigation-styles");

var _useCreateNavigationTree = require("./use-create-navigation-tree");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function Navigation(_ref) {
  var activeItem = _ref.activeItem,
      _ref$activeMenu = _ref.activeMenu,
      activeMenu = _ref$activeMenu === void 0 ? _constants.ROOT_MENU : _ref$activeMenu,
      children = _ref.children,
      className = _ref.className,
      _ref$onActivateMenu = _ref.onActivateMenu,
      onActivateMenu = _ref$onActivateMenu === void 0 ? _lodash.noop : _ref$onActivateMenu;

  var _useState = (0, _element.useState)(activeMenu),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      menu = _useState2[0],
      setMenu = _useState2[1];

  var _useState3 = (0, _element.useState)(),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      slideOrigin = _useState4[0],
      setSlideOrigin = _useState4[1];

  var navigationTree = (0, _useCreateNavigationTree.useCreateNavigationTree)();
  var defaultSlideOrigin = (0, _i18n.isRTL)() ? 'right' : 'left';

  var setActiveMenu = function setActiveMenu(menuId) {
    var slideInOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultSlideOrigin;

    if (!navigationTree.getMenu(menuId)) {
      return;
    }

    setSlideOrigin(slideInOrigin);
    setMenu(menuId);
    onActivateMenu(menuId);
  }; // Used to prevent the sliding animation on mount


  var isMounted = (0, _element.useRef)(false);
  (0, _element.useEffect)(function () {
    if (!isMounted.current) {
      isMounted.current = true;
    }
  }, []);
  (0, _element.useEffect)(function () {
    if (activeMenu !== menu) {
      setActiveMenu(activeMenu);
    }
  }, [activeMenu]);
  var context = {
    activeItem: activeItem,
    activeMenu: menu,
    setActiveMenu: setActiveMenu,
    navigationTree: navigationTree
  };
  var classes = (0, _classnames2.default)('components-navigation', className);
  var animateClassName = (0, _animate.getAnimateClassName)({
    type: 'slide-in',
    origin: slideOrigin
  });
  return (0, _element.createElement)(_navigationStyles.NavigationUI, {
    className: classes
  }, (0, _element.createElement)("div", {
    key: menu,
    className: (0, _classnames2.default)((0, _defineProperty2.default)({}, animateClassName, isMounted.current && slideOrigin))
  }, (0, _element.createElement)(_context.NavigationContext.Provider, {
    value: context
  }, children)));
}
//# sourceMappingURL=index.js.map