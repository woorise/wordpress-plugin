{"version":3,"sources":["@wordpress/components/src/ui/popover/content.js"],"names":["PopoverContent","props","forwardedRef","children","className","elevation","maxWidth","otherProps","label","popover","classes","styles","Error","showContent","visible","animating","View","cardStyle"],"mappings":";;;;;;;;;;;;;;;;;AAGA;;AACA;;AAEA;;AAKA;;AACA;;AACA;;AACA;;AAdA;AACA;AACA;AAGA;;AAGA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAT,CAAyBC,KAAzB,EAAgCC,YAAhC,EAA+C;AAAA,0BAO1C,+BAAkBD,KAAlB,EAAyB,gBAAzB,CAP0C;AAAA,MAE7CE,QAF6C,qBAE7CA,QAF6C;AAAA,MAG7CC,SAH6C,qBAG7CA,SAH6C;AAAA,gDAI7CC,SAJ6C;AAAA,MAI7CA,SAJ6C,sCAIjC,CAJiC;AAAA,gDAK7CC,QAL6C;AAAA,MAK7CA,QAL6C,sCAKlC,GALkC;AAAA,MAM1CC,UAN0C;;AAAA,2BASnB,kCATmB;AAAA,MAStCC,KATsC,sBAStCA,KATsC;AAAA,MAS/BC,OAT+B,sBAS/BA,OAT+B;;AAU9C,MAAMC,OAAO,GAAG,gBAAIC,MAAM,CAACX,cAAX,EAA2B,iBAAK;AAAEM,IAAAA,QAAQ,EAARA;AAAF,GAAL,CAA3B,EAAgDF,SAAhD,CAAhB;;AAEA,MAAK,CAAEK,OAAP,EAAiB;AAChB,UAAM,IAAIG,KAAJ,CACL,wDADK,CAAN;AAGA;;AAED,MAAMC,WAAW,GAAGJ,OAAO,CAACK,OAAR,IAAmBL,OAAO,CAACM,SAA/C;AAEA,SACC,4BAAC,eAAD;AACC,kBAAaP,KADd;AAEC,IAAA,EAAE,EAAGQ,UAFN;AAGC,IAAA,SAAS,EAAGN;AAHb,KAIMH,UAJN,EAKME,OALN,GAOGI,WAAW,IACZ,4BAAC,UAAD;AACC,IAAA,SAAS,EAAGF,MAAM,CAACM,SADpB;AAEC,IAAA,SAAS,EAAGZ,SAFb;AAGC,IAAA,GAAG,EAAGH;AAHP,KAKGC,QALH,CARF,CADD;AAmBA;;eAEc,6BAAgBH,cAAhB,EAAgC,gBAAhC,C","sourcesContent":["/**\n * External dependencies\n */\nimport { contextConnect, useContextSystem } from '@wp-g2/context';\nimport { css, cx } from '@wp-g2/styles';\n// eslint-disable-next-line no-restricted-imports\nimport { Popover as ReakitPopover } from 'reakit';\n\n/**\n * Internal dependencies\n */\nimport { Card } from '../card';\nimport { View } from '../view';\nimport { usePopoverContext } from './context';\nimport * as styles from './styles';\n\n/**\n *\n * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').ContentProps, 'div'>} props\n * @param {import('react').Ref<any>} forwardedRef\n */\nfunction PopoverContent( props, forwardedRef ) {\n\tconst {\n\t\tchildren,\n\t\tclassName,\n\t\televation = 5,\n\t\tmaxWidth = 360,\n\t\t...otherProps\n\t} = useContextSystem( props, 'PopoverContent' );\n\n\tconst { label, popover } = usePopoverContext();\n\tconst classes = cx( styles.PopoverContent, css( { maxWidth } ), className );\n\n\tif ( ! popover ) {\n\t\tthrow new Error(\n\t\t\t'`PopoverContent` must only be used inside a `Popover`.'\n\t\t);\n\t}\n\n\tconst showContent = popover.visible || popover.animating;\n\n\treturn (\n\t\t<ReakitPopover\n\t\t\taria-label={ label }\n\t\t\tas={ View }\n\t\t\tclassName={ classes }\n\t\t\t{ ...otherProps }\n\t\t\t{ ...popover }\n\t\t>\n\t\t\t{ showContent && (\n\t\t\t\t<Card\n\t\t\t\t\tclassName={ styles.cardStyle }\n\t\t\t\t\televation={ elevation }\n\t\t\t\t\tref={ forwardedRef }\n\t\t\t\t>\n\t\t\t\t\t{ children }\n\t\t\t\t</Card>\n\t\t\t) }\n\t\t</ReakitPopover>\n\t);\n}\n\nexport default contextConnect( PopoverContent, 'PopoverContent' );\n"]}