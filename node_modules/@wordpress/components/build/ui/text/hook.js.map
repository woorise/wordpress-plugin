{"version":3,"sources":["@wordpress/components/src/ui/text/hook.js"],"names":["useText","props","adjustLineHeightForInnerControls","align","children","className","color","ellipsizeMode","isDestructive","display","highlightEscape","highlightCaseSensitive","highlightWords","highlightSanitize","isBlock","letterSpacing","lineHeightProp","lineHeight","optimizeReadabilityFor","size","truncate","upperCase","variant","weight","ui","get","otherProps","content","isHighlighter","Array","isArray","isCaption","TypeError","autoEscape","caseSensitive","searchWords","sanitize","classes","sx","getLineHeight","Base","fontSize","fontWeight","textAlign","textTransform","optimalTextColor","isOptimalTextColorDark","styles","Text","destructive","highlighterText","block","muted","finalEllipsizeMode","finalComponentProps","truncateProps","Children","map","child","isLink","value","space"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { hasNamespace, useContextSystem } from '@wp-g2/context';\nimport { css, cx, getFontSize, ui } from '@wp-g2/styles';\nimport { isPlainObject, isNil } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, Children, cloneElement } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { useTruncate } from '../truncate';\nimport { getOptimalTextShade } from '../utils';\nimport * as styles from './styles';\nimport { createHighlighterText } from './utils';\n\n/**\n * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').Props, 'span'>} props\n */\nexport default function useText( props ) {\n\tconst {\n\t\tadjustLineHeightForInnerControls,\n\t\talign,\n\t\tchildren,\n\t\tclassName,\n\t\tcolor,\n\t\tellipsizeMode,\n\t\tisDestructive = false,\n\t\tdisplay,\n\t\thighlightEscape = false,\n\t\thighlightCaseSensitive = false,\n\t\thighlightWords,\n\t\thighlightSanitize,\n\t\tisBlock = false,\n\t\tletterSpacing,\n\t\tlineHeight: lineHeightProp,\n\t\toptimizeReadabilityFor,\n\t\tsize,\n\t\ttruncate = false,\n\t\tupperCase = false,\n\t\tvariant,\n\t\tweight = ui.get( 'fontWeight' ),\n\t\t...otherProps\n\t} = useContextSystem( props, 'Text' );\n\n\t/** @type {import('react').ReactNode} */\n\tlet content = children;\n\tconst isHighlighter = Array.isArray( highlightWords );\n\tconst isCaption = size === 'caption';\n\n\tif ( isHighlighter ) {\n\t\tif ( typeof children !== 'string' ) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'`children` of `Text` must only be `string` types when `highlightWords` is defined'\n\t\t\t);\n\t\t}\n\n\t\tcontent = createHighlighterText( {\n\t\t\tautoEscape: highlightEscape,\n\t\t\t// Disable reason: We need to disable this otherwise it erases the cast\n\t\t\t// eslint-disable-next-line object-shorthand\n\t\t\tchildren: /** @type {string} */ ( children ),\n\t\t\tcaseSensitive: highlightCaseSensitive,\n\t\t\tsearchWords: highlightWords,\n\t\t\tsanitize: highlightSanitize,\n\t\t} );\n\t}\n\n\tconst classes = useMemo( () => {\n\t\tconst sx = {};\n\n\t\tconst lineHeight = getLineHeight( {\n\t\t\tlineHeight: lineHeightProp,\n\t\t\tadjustLineHeightForInnerControls,\n\t\t} );\n\n\t\tsx.Base = css( {\n\t\t\tcolor,\n\t\t\tdisplay,\n\t\t\tfontSize: getFontSize( size ),\n\t\t\t/* eslint-disable jsdoc/valid-types */\n\t\t\tfontWeight: /** @type {import('react').CSSProperties['fontWeight']} */ ( weight ),\n\t\t\t/* eslint-enable jsdoc/valid-types */\n\t\t\tlineHeight,\n\t\t\tletterSpacing,\n\t\t\ttextAlign: align,\n\t\t} );\n\n\t\tsx.upperCase = css( { textTransform: 'uppercase' } );\n\n\t\tsx.optimalTextColor = null;\n\n\t\tif ( optimizeReadabilityFor ) {\n\t\t\tconst isOptimalTextColorDark =\n\t\t\t\tgetOptimalTextShade( optimizeReadabilityFor ) === 'dark';\n\n\t\t\tsx.optimalTextColor = isOptimalTextColorDark\n\t\t\t\t? css( { color: ui.get( 'black' ) } )\n\t\t\t\t: css( { color: ui.get( 'white' ) } );\n\t\t}\n\n\t\treturn cx(\n\t\t\tstyles.Text,\n\t\t\tsx.Base,\n\t\t\tsx.optimalTextColor,\n\t\t\tisDestructive && styles.destructive,\n\t\t\t!! isHighlighter && styles.highlighterText,\n\t\t\tisBlock && styles.block,\n\t\t\tisCaption && styles.muted,\n\t\t\tvariant && styles[ variant ],\n\t\t\tupperCase && sx.upperCase,\n\t\t\tclassName\n\t\t);\n\t}, [\n\t\tadjustLineHeightForInnerControls,\n\t\talign,\n\t\tclassName,\n\t\tcolor,\n\t\tdisplay,\n\t\tisBlock,\n\t\tisCaption,\n\t\tisDestructive,\n\t\tisHighlighter,\n\t\tletterSpacing,\n\t\tlineHeightProp,\n\t\toptimizeReadabilityFor,\n\t\tsize,\n\t\tupperCase,\n\t\tvariant,\n\t\tweight,\n\t] );\n\n\t/** @type {undefined | 'auto' | 'none'} */\n\tlet finalEllipsizeMode;\n\tif ( truncate === true ) {\n\t\tfinalEllipsizeMode = 'auto';\n\t}\n\tif ( truncate === false ) {\n\t\tfinalEllipsizeMode = 'none';\n\t}\n\n\tconst finalComponentProps = {\n\t\t...otherProps,\n\t\tclassName: classes,\n\t\tchildren,\n\t\tellipsizeMode: ellipsizeMode || finalEllipsizeMode,\n\t};\n\n\tconst truncateProps = useTruncate( finalComponentProps );\n\n\t/**\n\t * Enhance child `<Link />` components to inherit font size.\n\t */\n\tif ( ! truncate && Array.isArray( children ) ) {\n\t\tcontent = Children.map( children, ( child ) => {\n\t\t\t// @ts-ignore\n\t\t\tif ( ! isPlainObject( child ) || ! ( 'props' in child ) ) {\n\t\t\t\treturn child;\n\t\t\t}\n\n\t\t\tconst isLink = hasNamespace( child, [ 'Link' ] );\n\t\t\tif ( isLink ) {\n\t\t\t\treturn cloneElement( child, {\n\t\t\t\t\tsize: child.props.size || 'inherit',\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn child;\n\t\t} );\n\t}\n\n\treturn {\n\t\t...truncateProps,\n\t\tchildren: truncate ? truncateProps.children : content,\n\t};\n}\n\n/* eslint-disable jsdoc/valid-types */\n/**\n * @param {Object} props\n * @param {import('./types').Props['adjustLineHeightForInnerControls']} [props.adjustLineHeightForInnerControls]\n * @param {import('react').CSSProperties['lineHeight']} [props.lineHeight]\n */\n/* eslint-enable jsdoc/valid-types */\nfunction getLineHeight( { adjustLineHeightForInnerControls, lineHeight } ) {\n\tif ( ! isNil( lineHeight ) ) return lineHeight;\n\n\tif ( ! adjustLineHeightForInnerControls ) return;\n\n\tlet value = `calc(${ ui.get( 'controlHeight' ) } + ${ ui.space( 2 ) })`;\n\n\tswitch ( adjustLineHeightForInnerControls ) {\n\t\tcase 'large':\n\t\t\tvalue = `calc(${ ui.get( 'controlHeightLarge' ) } + ${ ui.space(\n\t\t\t\t2\n\t\t\t) })`;\n\t\t\tbreak;\n\t\tcase 'small':\n\t\t\tvalue = `calc(${ ui.get( 'controlHeightSmall' ) } + ${ ui.space(\n\t\t\t\t2\n\t\t\t) })`;\n\t\t\tbreak;\n\t\tcase 'xSmall':\n\t\t\tvalue = `calc(${ ui.get( 'controlHeightXSmall' ) } + ${ ui.space(\n\t\t\t\t2\n\t\t\t) })`;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn value;\n}\n"]}