"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useGrid;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var _element = require("@wordpress/element");

var _utils = require("./utils");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').Props, 'div'>} props
 */
function useGrid(props) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'Grid'),
      align = _useContextSystem.align,
      alignment = _useContextSystem.alignment,
      className = _useContextSystem.className,
      columnGap = _useContextSystem.columnGap,
      _useContextSystem$col = _useContextSystem.columns,
      columns = _useContextSystem$col === void 0 ? 2 : _useContextSystem$col,
      _useContextSystem$gap = _useContextSystem.gap,
      gap = _useContextSystem$gap === void 0 ? 3 : _useContextSystem$gap,
      _useContextSystem$isI = _useContextSystem.isInline,
      isInline = _useContextSystem$isI === void 0 ? false : _useContextSystem$isI,
      justify = _useContextSystem.justify,
      rowGap = _useContextSystem.rowGap,
      rows = _useContextSystem.rows,
      templateColumns = _useContextSystem.templateColumns,
      templateRows = _useContextSystem.templateRows,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["align", "alignment", "className", "columnGap", "columns", "gap", "isInline", "justify", "rowGap", "rows", "templateColumns", "templateRows"]);

  var columnsAsArray = Array.isArray(columns) ? columns : [columns];
  var column = (0, _styles.useResponsiveValue)(columnsAsArray);
  var rowsAsArray = Array.isArray(rows) ? rows : [rows];
  var row = (0, _styles.useResponsiveValue)(rowsAsArray);
  var gridTemplateColumns = templateColumns || !!columns && "repeat(".concat(column, ", 1fr)");
  var gridTemplateRows = templateRows || !!rows && "repeat(".concat(row, ", 1fr)");
  var classes = (0, _element.useMemo)(function () {
    var alignmentProps = (0, _utils.getAlignmentProps)(alignment);
    var gridClasses = (0, _styles.css)(_objectSpread({
      alignItems: align,
      display: isInline ? 'inline-grid' : 'grid',
      gap: gap,
      gridTemplateColumns: gridTemplateColumns || undefined,
      gridTemplateRows: gridTemplateRows || undefined,
      gridRowGap: rowGap,
      gridColumnGap: columnGap,
      justifyContent: justify,
      verticalAlign: isInline ? 'middle' : undefined
    }, alignmentProps));
    return (0, _styles.cx)(gridClasses, className);
  }, [align, alignment, className, columnGap, gap, gridTemplateColumns, gridTemplateRows, isInline, justify, rowGap]);
  return _objectSpread(_objectSpread({}, otherProps), {}, {
    className: classes
  });
}
//# sourceMappingURL=hook.js.map