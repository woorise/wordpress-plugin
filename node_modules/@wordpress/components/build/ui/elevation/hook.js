"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useElevation = useElevation;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var _lodash = require("lodash");

var _element = require("@wordpress/element");

var styles = _interopRequireWildcard(require("./styles"));

var _templateObject, _templateObject2, _templateObject3;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').Props, 'div'>} props
 */
function useElevation(props) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'Elevation'),
      active = _useContextSystem.active,
      _useContextSystem$bor = _useContextSystem.borderRadius,
      borderRadius = _useContextSystem$bor === void 0 ? 'inherit' : _useContextSystem$bor,
      className = _useContextSystem.className,
      focus = _useContextSystem.focus,
      hover = _useContextSystem.hover,
      _useContextSystem$isI = _useContextSystem.isInteractive,
      isInteractive = _useContextSystem$isI === void 0 ? false : _useContextSystem$isI,
      _useContextSystem$off = _useContextSystem.offset,
      offset = _useContextSystem$off === void 0 ? 0 : _useContextSystem$off,
      _useContextSystem$val = _useContextSystem.value,
      value = _useContextSystem$val === void 0 ? 0 : _useContextSystem$val,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["active", "borderRadius", "className", "focus", "hover", "isInteractive", "offset", "value"]);

  var classes = (0, _element.useMemo)(function () {
    /** @type {number | undefined} */
    var hoverValue = !(0, _lodash.isNil)(hover) ? hover : value * 2;
    /** @type {number | undefined} */

    var activeValue = !(0, _lodash.isNil)(active) ? active : value / 2;

    if (!isInteractive) {
      hoverValue = !(0, _lodash.isNil)(hover) ? hover : undefined;
      activeValue = !(0, _lodash.isNil)(active) ? active : undefined;
    }

    var transition = "box-shadow ".concat(_styles.ui.get('transitionDuration'), " ").concat(_styles.ui.get('transitionTimingFunction'));
    var sx = {};
    sx.Base = (0, _styles.css)({
      borderRadius: borderRadius,
      bottom: offset,
      boxShadow: (0, _styles.getBoxShadow)(value),
      opacity: _styles.ui.get('elevationIntensity'),
      left: offset,
      right: offset,
      top: offset,
      transition: transition
    });

    if (!(0, _lodash.isNil)(hoverValue)) {
      sx.hover = (0, _styles.css)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2.default)(["\n\t\t\t\t*:hover > & {\n\t\t\t\t\tbox-shadow: ", ";\n\t\t\t\t}\n\t\t\t"])), (0, _styles.getBoxShadow)(hoverValue));
    }

    if (!(0, _lodash.isNil)(activeValue)) {
      sx.active = (0, _styles.css)(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2.default)(["\n\t\t\t\t*:active > & {\n\t\t\t\t\tbox-shadow: ", ";\n\t\t\t\t}\n\t\t\t"])), (0, _styles.getBoxShadow)(activeValue));
    }

    if (!(0, _lodash.isNil)(focus)) {
      sx.focus = (0, _styles.css)(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2.default)(["\n\t\t\t\t*:focus > & {\n\t\t\t\t\tbox-shadow: ", ";\n\t\t\t\t}\n\t\t\t"])), (0, _styles.getBoxShadow)(focus));
    }

    return (0, _styles.cx)(styles.Elevation, sx.Base, sx.hover && sx.hover, sx.focus && sx.focus, sx.active && sx.active, className);
  }, [active, borderRadius, className, focus, hover, isInteractive, offset, value]);
  return _objectSpread(_objectSpread({}, otherProps), {}, {
    className: classes,
    'aria-hidden': true
  });
}
//# sourceMappingURL=hook.js.map