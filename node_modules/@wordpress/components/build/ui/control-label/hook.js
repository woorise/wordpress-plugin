"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useControlLabel = useControlLabel;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _context = require("@wp-g2/context");

var _styles = require("@wp-g2/styles");

var _formGroup = require("../form-group");

var _text = require("../text");

var styles = _interopRequireWildcard(require("./styles"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @param {import('@wp-g2/create-styles').ViewOwnProps<import('./types').Props, 'label'>} props
 */
function useControlLabel(props) {
  var _useContextSystem = (0, _context.useContextSystem)(props, 'ControlLabel'),
      htmlForProp = _useContextSystem.htmlFor,
      _useContextSystem$isB = _useContextSystem.isBlock,
      isBlock = _useContextSystem$isB === void 0 ? false : _useContextSystem$isB,
      _useContextSystem$siz = _useContextSystem.size,
      size = _useContextSystem$siz === void 0 ? 'medium' : _useContextSystem$siz,
      _useContextSystem$tru = _useContextSystem.truncate,
      truncate = _useContextSystem$tru === void 0 ? true : _useContextSystem$tru,
      otherProps = (0, _objectWithoutProperties2.default)(_useContextSystem, ["htmlFor", "isBlock", "size", "truncate"]);

  var _useText = (0, _text.useText)(_objectSpread(_objectSpread({}, otherProps), {}, {
    isBlock: isBlock,
    truncate: truncate
  })),
      className = _useText.className,
      textProps = (0, _objectWithoutProperties2.default)(_useText, ["className"]);

  var htmlFor = (0, _formGroup.useFormGroupContextId)(htmlForProp);
  var classes = (0, _styles.cx)(styles.ControlLabel, styles[size], className, isBlock ? styles.block : styles.inline);
  return _objectSpread(_objectSpread({}, textProps), {}, {
    className: classes,
    htmlFor: htmlFor
  });
}
//# sourceMappingURL=hook.js.map