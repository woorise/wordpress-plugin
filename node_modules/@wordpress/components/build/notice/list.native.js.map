{"version":3,"sources":["@wordpress/components/src/notice/list.native.js"],"names":["NoticeList","arguments","removeNotice","bind","id","props","notices","shouldStack","length","styles","list","reverse","map","notice","Component","select","getNotices","dispatch"],"mappings":";;;;;;;;;AAQA;;;;;;;;;;;;;;;;AALA;;AAMA;;AACA;;AAKA;;AACA;;;;;;IAEMA,U;;;;;AACL,wBAAc;AAAA;;AAAA;AACb,+BAAUC,SAAV;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,6CAApB;AAFa;AAGb;;;;WAED,sBAAcC,EAAd,EAAmB;AAAA,UACVF,YADU,GACO,KAAKG,KADZ,CACVH,YADU;AAElBA,MAAAA,YAAY,CAAEE,EAAF,CAAZ;AACA;;;WAED,kBAAS;AAAA;;AAAA,wBACyB,KAAKC,KAD9B;AAAA,UACAC,OADA,eACAA,OADA;AAAA,UACSC,WADT,eACSA,WADT;;AAGR,UAAK,CAAED,OAAO,CAACE,MAAf,EAAwB;AACvB,eAAO,IAAP;AACA;;AAED,aACC,4BAAC,iBAAD;AAAM,QAAA,KAAK,EAAGC,eAAOC,IAArB;AAA4B,QAAA,GAAG,EAAGJ,OAAO,CAACE;AAA1C,SACGD,WAAW,GACZD,OAAO,CACLK,OADF,GAEEC,GAFF,CAEO,UAAEC,MAAF;AAAA,eACL,4BAAC,SAAD,6BACMA,MADN;AAEC,UAAA,GAAG,EAAGA,MAAM,CAACT,EAFd;AAGC,UAAA,cAAc,EAAG,MAAI,CAACF;AAHvB,WADK;AAAA,OAFP,CADY,GAWZ,4BAAC,SAAD,6BACMI,OAAO,CAAEA,OAAO,CAACE,MAAR,GAAiB,CAAnB,CADb;AAEC,QAAA,cAAc,EAAG,KAAKN;AAFvB,SAZF,CADD;AAoBA;;;EAtCuBY,kB;;eAyCV,sBAAS,CACvB,sBAAY,UAAEC,MAAF,EAAc;AAAA,gBACFA,MAAM,CAAE,cAAF,CADJ;AAAA,MACjBC,UADiB,WACjBA,UADiB;;AAGzB,SAAO;AACNV,IAAAA,OAAO,EAAEU,UAAU;AADb,GAAP;AAGA,CAND,CADuB,EAQvB,wBAAc,UAAEC,QAAF,EAAgB;AAAA,kBACJA,QAAQ,CAAE,cAAF,CADJ;AAAA,MACrBf,YADqB,aACrBA,YADqB;;AAG7B,SAAO;AACNA,IAAAA,YAAY,EAAZA;AADM,GAAP;AAGA,CAND,CARuB,CAAT,EAeVF,UAfU,C","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport Notice from './';\nimport styles from './style.scss';\n\nclass NoticeList extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.removeNotice = this.removeNotice.bind( this );\n\t}\n\n\tremoveNotice( id ) {\n\t\tconst { removeNotice } = this.props;\n\t\tremoveNotice( id );\n\t}\n\n\trender() {\n\t\tconst { notices, shouldStack } = this.props;\n\n\t\tif ( ! notices.length ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<View style={ styles.list } key={ notices.length }>\n\t\t\t\t{ shouldStack ? (\n\t\t\t\t\tnotices\n\t\t\t\t\t\t.reverse()\n\t\t\t\t\t\t.map( ( notice ) => (\n\t\t\t\t\t\t\t<Notice\n\t\t\t\t\t\t\t\t{ ...notice }\n\t\t\t\t\t\t\t\tkey={ notice.id }\n\t\t\t\t\t\t\t\tonNoticeHidden={ this.removeNotice }\n\t\t\t\t\t\t\t></Notice>\n\t\t\t\t\t\t) )\n\t\t\t\t) : (\n\t\t\t\t\t<Notice\n\t\t\t\t\t\t{ ...notices[ notices.length - 1 ] }\n\t\t\t\t\t\tonNoticeHidden={ this.removeNotice }\n\t\t\t\t\t></Notice>\n\t\t\t\t) }\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getNotices } = select( 'core/notices' );\n\n\t\treturn {\n\t\t\tnotices: getNotices(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { removeNotice } = dispatch( 'core/notices' );\n\n\t\treturn {\n\t\t\tremoveNotice,\n\t\t};\n\t} ),\n] )( NoticeList );\n"]}