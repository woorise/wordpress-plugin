"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _classnames = _interopRequireDefault(require("classnames"));

var _keycodes = require("@wordpress/keycodes");

var _compose = require("@wordpress/compose");

var _withFocusOutside = _interopRequireDefault(require("../higher-order/with-focus-outside"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function ModalFrameContent(_ref) {
  var overlayClassName = _ref.overlayClassName,
      contentLabel = _ref.contentLabel,
      _ref$aria = _ref.aria,
      describedby = _ref$aria.describedby,
      labelledby = _ref$aria.labelledby,
      children = _ref.children,
      className = _ref.className,
      role = _ref.role,
      style = _ref.style,
      focusOnMount = _ref.focusOnMount,
      shouldCloseOnEsc = _ref.shouldCloseOnEsc,
      onRequestClose = _ref.onRequestClose;

  function handleEscapeKeyDown(event) {
    if (shouldCloseOnEsc && event.keyCode === _keycodes.ESCAPE) {
      event.stopPropagation();

      if (onRequestClose) {
        onRequestClose(event);
      }
    }
  }

  var focusOnMountRef = (0, _compose.useFocusOnMount)(focusOnMount);
  var constrainedTabbingRef = (0, _compose.useConstrainedTabbing)();
  var focusReturnRef = (0, _compose.useFocusReturn)();
  return (// eslint-disable-next-line jsx-a11y/no-static-element-interactions
    (0, _element.createElement)("div", {
      className: (0, _classnames.default)('components-modal__screen-overlay', overlayClassName),
      onKeyDown: handleEscapeKeyDown
    }, (0, _element.createElement)("div", {
      className: (0, _classnames.default)('components-modal__frame', className),
      style: style,
      ref: (0, _compose.useMergeRefs)([constrainedTabbingRef, focusReturnRef, focusOnMountRef]),
      role: role,
      "aria-label": contentLabel,
      "aria-labelledby": contentLabel ? null : labelledby,
      "aria-describedby": describedby,
      tabIndex: "-1"
    }, children))
  );
}

var ModalFrame = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(ModalFrame, _Component);

  var _super = _createSuper(ModalFrame);

  function ModalFrame() {
    var _this;

    (0, _classCallCheck2.default)(this, ModalFrame);
    _this = _super.apply(this, arguments);
    _this.handleFocusOutside = _this.handleFocusOutside.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }
  /**
   * Callback function called when clicked outside the modal.
   *
   * @param {Object} event Mouse click event.
   */


  (0, _createClass2.default)(ModalFrame, [{
    key: "handleFocusOutside",
    value: function handleFocusOutside(event) {
      if (this.props.shouldCloseOnClickOutside && this.props.onRequestClose) {
        this.props.onRequestClose(event);
      }
    }
    /**
     * Renders the modal frame element.
     *
     * @return {WPElement} The modal frame element.
     */

  }, {
    key: "render",
    value: function render() {
      return (0, _element.createElement)(ModalFrameContent, this.props);
    }
  }]);
  return ModalFrame;
}(_element.Component);

var _default = (0, _withFocusOutside.default)(ModalFrame);

exports.default = _default;
//# sourceMappingURL=frame.js.map