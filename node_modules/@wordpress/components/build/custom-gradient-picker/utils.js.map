{"version":3,"sources":["@wordpress/components/src/custom-gradient-picker/utils.js"],"names":["getLinearGradientRepresentationOfARadial","gradientAST","type","orientation","HORIZONTAL_GRADIENT_ORIENTATION","colorStops","hasUnsupportedLength","item","length","undefined","getGradientAstWithDefault","value","gradientParser","parse","error","DEFAULT_GRADIENT","DIRECTIONAL_ORIENTATION_ANGLE_MAP","toString","some","step","forEach","stop","index","getGradientAstWithControlPoints","newControlPoints","map","position","color","toRgb","r","g","b","a","getStopCssColor","colorStop","join"],"mappings":";;;;;;;;;;;;;;AAGA;;AACA;;AAKA;;AAKA;;;;;;AAEO,SAASA,wCAAT,CAAmDC,WAAnD,EAAiE;AACvE,SAAO,mCAAmB;AACzBC,IAAAA,IAAI,EAAE,iBADmB;AAEzBC,IAAAA,WAAW,EAAEC,0CAFY;AAGzBC,IAAAA,UAAU,EAAEJ,WAAW,CAACI;AAHC,GAAnB,CAAP;AAKA;;AAED,SAASC,oBAAT,CAA+BC,IAA/B,EAAsC;AACrC,SAAOA,IAAI,CAACC,MAAL,KAAgBC,SAAhB,IAA6BF,IAAI,CAACC,MAAL,CAAYN,IAAZ,KAAqB,GAAzD;AACA;;AAEM,SAASQ,yBAAT,CAAoCC,KAApC,EAA4C;AAAA;;AAClD;AACA;AACA,MAAIV,WAAJ;;AAEA,MAAI;AACHA,IAAAA,WAAW,GAAGW,wBAAeC,KAAf,CAAsBF,KAAtB,EAA+B,CAA/B,CAAd;AACAV,IAAAA,WAAW,CAACU,KAAZ,GAAoBA,KAApB;AACA,GAHD,CAGE,OAAQG,KAAR,EAAgB;AACjBb,IAAAA,WAAW,GAAGW,wBAAeC,KAAf,CAAsBE,2BAAtB,EAA0C,CAA1C,CAAd;AACAd,IAAAA,WAAW,CAACU,KAAZ,GAAoBI,2BAApB;AACA;;AAED,MAAK,0BAAAd,WAAW,CAACE,WAAZ,gFAAyBD,IAAzB,MAAkC,aAAvC,EAAuD;AACtDD,IAAAA,WAAW,CAACE,WAAZ,CAAwBD,IAAxB,GAA+B,SAA/B;AACAD,IAAAA,WAAW,CAACE,WAAZ,CAAwBQ,KAAxB,GAAgCK,6CAC/Bf,WAAW,CAACE,WAAZ,CAAwBQ,KADO,EAE9BM,QAF8B,EAAhC;AAGA;;AAED,MAAKhB,WAAW,CAACI,UAAZ,CAAuBa,IAAvB,CAA6BZ,oBAA7B,CAAL,EAA2D;AAAA,uBACnCL,WADmC;AAAA,QAClDI,UADkD,gBAClDA,UADkD;AAE1D,QAAMc,IAAI,GAAG,OAAQd,UAAU,CAACG,MAAX,GAAoB,CAA5B,CAAb;AACAH,IAAAA,UAAU,CAACe,OAAX,CAAoB,UAAEC,IAAF,EAAQC,KAAR,EAAmB;AACtCD,MAAAA,IAAI,CAACb,MAAL,GAAc;AACbG,QAAAA,KAAK,EAAEQ,IAAI,GAAGG,KADD;AAEbpB,QAAAA,IAAI,EAAE;AAFO,OAAd;AAIA,KALD;AAMAD,IAAAA,WAAW,CAACU,KAAZ,GAAoB,mCAAmBV,WAAnB,CAApB;AACA;;AAED,SAAOA,WAAP;AACA;;AAEM,SAASsB,+BAAT,CACNtB,WADM,EAENuB,gBAFM,EAGL;AACD,yCACIvB,WADJ;AAECI,IAAAA,UAAU,EAAEmB,gBAAgB,CAACC,GAAjB,CAAsB,gBAA2B;AAAA,UAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,UAAbC,KAAa,QAAbA,KAAa;;AAAA,6BACrC,wBAAWA,KAAX,EAAmBC,KAAnB,EADqC;AAAA,UACpDC,CADoD,oBACpDA,CADoD;AAAA,UACjDC,CADiD,oBACjDA,CADiD;AAAA,UAC9CC,CAD8C,oBAC9CA,CAD8C;AAAA,UAC3CC,CAD2C,oBAC3CA,CAD2C;;AAE5D,aAAO;AACNxB,QAAAA,MAAM,EAAE;AACPN,UAAAA,IAAI,EAAE,GADC;AAEPS,UAAAA,KAAK,EAAEe,QAAQ,CAACT,QAAT;AAFA,SADF;AAKNf,QAAAA,IAAI,EAAE8B,CAAC,GAAG,CAAJ,GAAQ,MAAR,GAAiB,KALjB;AAMNrB,QAAAA,KAAK,EAAEqB,CAAC,GAAG,CAAJ,GAAQ,CAAEH,CAAF,EAAKC,CAAL,EAAQC,CAAR,EAAWC,CAAX,CAAR,GAAyB,CAAEH,CAAF,EAAKC,CAAL,EAAQC,CAAR;AAN1B,OAAP;AAQA,KAVW;AAFb;AAcA;;AAEM,SAASE,eAAT,CAA0BC,SAA1B,EAAsC;AAC5C,UAASA,SAAS,CAAChC,IAAnB;AACC,SAAK,KAAL;AACC,wBAAYgC,SAAS,CAACvB,KAAtB;;AACD,SAAK,SAAL;AACC,aAAOuB,SAAS,CAACvB,KAAjB;;AACD,SAAK,KAAL;AACA,SAAK,MAAL;AACC,uBAAWuB,SAAS,CAAChC,IAArB,cAA+BgC,SAAS,CAACvB,KAAV,CAAgBwB,IAAhB,CAAsB,GAAtB,CAA/B;;AACD;AACC;AACA;AACA,aAAO,aAAP;AAXF;AAaA","sourcesContent":["/**\n * External dependencies\n */\nimport gradientParser from 'gradient-parser';\nimport tinycolor from 'tinycolor2';\n\n/**\n * Internal dependencies\n */\nimport {\n\tDEFAULT_GRADIENT,\n\tHORIZONTAL_GRADIENT_ORIENTATION,\n\tDIRECTIONAL_ORIENTATION_ANGLE_MAP,\n} from './constants';\nimport { serializeGradient } from './serializer';\n\nexport function getLinearGradientRepresentationOfARadial( gradientAST ) {\n\treturn serializeGradient( {\n\t\ttype: 'linear-gradient',\n\t\torientation: HORIZONTAL_GRADIENT_ORIENTATION,\n\t\tcolorStops: gradientAST.colorStops,\n\t} );\n}\n\nfunction hasUnsupportedLength( item ) {\n\treturn item.length === undefined || item.length.type !== '%';\n}\n\nexport function getGradientAstWithDefault( value ) {\n\t// gradientAST will contain the gradient AST as parsed by gradient-parser npm module.\n\t// More information of its structure available at https://www.npmjs.com/package/gradient-parser#ast.\n\tlet gradientAST;\n\n\ttry {\n\t\tgradientAST = gradientParser.parse( value )[ 0 ];\n\t\tgradientAST.value = value;\n\t} catch ( error ) {\n\t\tgradientAST = gradientParser.parse( DEFAULT_GRADIENT )[ 0 ];\n\t\tgradientAST.value = DEFAULT_GRADIENT;\n\t}\n\n\tif ( gradientAST.orientation?.type === 'directional' ) {\n\t\tgradientAST.orientation.type = 'angular';\n\t\tgradientAST.orientation.value = DIRECTIONAL_ORIENTATION_ANGLE_MAP[\n\t\t\tgradientAST.orientation.value\n\t\t].toString();\n\t}\n\n\tif ( gradientAST.colorStops.some( hasUnsupportedLength ) ) {\n\t\tconst { colorStops } = gradientAST;\n\t\tconst step = 100 / ( colorStops.length - 1 );\n\t\tcolorStops.forEach( ( stop, index ) => {\n\t\t\tstop.length = {\n\t\t\t\tvalue: step * index,\n\t\t\t\ttype: '%',\n\t\t\t};\n\t\t} );\n\t\tgradientAST.value = serializeGradient( gradientAST );\n\t}\n\n\treturn gradientAST;\n}\n\nexport function getGradientAstWithControlPoints(\n\tgradientAST,\n\tnewControlPoints\n) {\n\treturn {\n\t\t...gradientAST,\n\t\tcolorStops: newControlPoints.map( ( { position, color } ) => {\n\t\t\tconst { r, g, b, a } = tinycolor( color ).toRgb();\n\t\t\treturn {\n\t\t\t\tlength: {\n\t\t\t\t\ttype: '%',\n\t\t\t\t\tvalue: position.toString(),\n\t\t\t\t},\n\t\t\t\ttype: a < 1 ? 'rgba' : 'rgb',\n\t\t\t\tvalue: a < 1 ? [ r, g, b, a ] : [ r, g, b ],\n\t\t\t};\n\t\t} ),\n\t};\n}\n\nexport function getStopCssColor( colorStop ) {\n\tswitch ( colorStop.type ) {\n\t\tcase 'hex':\n\t\t\treturn `#${ colorStop.value }`;\n\t\tcase 'literal':\n\t\t\treturn colorStop.value;\n\t\tcase 'rgb':\n\t\tcase 'rgba':\n\t\t\treturn `${ colorStop.type }(${ colorStop.value.join( ',' ) })`;\n\t\tdefault:\n\t\t\t// Should be unreachable if passing an AST from gradient-parser.\n\t\t\t// See https://github.com/rafaelcaricio/gradient-parser#ast.\n\t\t\treturn 'transparent';\n\t}\n}\n"]}