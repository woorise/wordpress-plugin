"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.alignmentHelpers = exports.ALIGNMENT_BREAKPOINTS = exports.WIDE_ALIGNMENTS = void 0;
var WIDE_ALIGNMENTS = {
  alignments: {
    wide: 'wide',
    full: 'full'
  },
  // `innerContainers`: Group of blocks based on `InnerBlocks` component,
  // used to nest other blocks inside
  innerContainers: ['core/group', 'core/columns', 'core/column', 'core/buttons', 'core/button'],
  excludeBlocks: ['core/heading']
};
exports.WIDE_ALIGNMENTS = WIDE_ALIGNMENTS;
var ALIGNMENT_BREAKPOINTS = {
  wide: 1024,
  large: 820,
  medium: 768,
  small: 680,
  mobile: 480
};
exports.ALIGNMENT_BREAKPOINTS = ALIGNMENT_BREAKPOINTS;

var isFullWidth = function isFullWidth(align) {
  return align === WIDE_ALIGNMENTS.alignments.full;
};

var isWideWidth = function isWideWidth(align) {
  return align === WIDE_ALIGNMENTS.alignments.wide;
};

var isWider = function isWider(width, breakpoint) {
  return width > ALIGNMENT_BREAKPOINTS[breakpoint];
};

var isContainerRelated = function isContainerRelated(blockName) {
  return WIDE_ALIGNMENTS.innerContainers.includes(blockName);
};

var alignmentHelpers = {
  isFullWidth: isFullWidth,
  isWideWidth: isWideWidth,
  isWider: isWider,
  isContainerRelated: isContainerRelated
};
exports.alignmentHelpers = alignmentHelpers;
//# sourceMappingURL=alignments.native.js.map