{"version":3,"sources":["@wordpress/components/src/mobile/utils/use-unit-converter-to-mobile.native.js"],"names":["getValueAndUnit","value","unit","regex","splitValue","match","filter","v","valueToConvert","valueUnit","undefined","convertUnitToMobile","containerSize","globalStyles","width","height","fontSize","Number","vw","Math","round","vh","useConvertUnitToMobile","GlobalStylesContext","styles","Dimensions","get","windowSizes","setWindowSizes","addEventListener","onDimensionsChange","removeEventListener","window"],"mappings":";;;;;;;;;;;AAGA;;AAKA;;AAWA;;AAnBA;AACA;AACA;;AAGA;AACA;AACA;;AASA;AACA;AACA;AAGA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAEC,KAAF,EAASC,IAAT,EAAmB;AAAA;;AAC1C,MAAMC,KAAK,GAAG,iBAAd;AAEA,MAAMC,UAAU,qBAAOH,KAAP,wDAAG,KAChBI,KADgB,CACTF,KADS,CAAH,+CAAG,WAEhBG,MAFgB,CAER,UAAEC,CAAF;AAAA,WAASA,CAAC,KAAK,EAAf;AAAA,GAFQ,CAAnB;;AAIA,MAAKH,UAAL,EAAkB;AACjB,WAAO;AACNI,MAAAA,cAAc,EAAEJ,UAAU,CAAE,CAAF,CADpB;AAENK,MAAAA,SAAS,EAAEP,IAAI,IAAIE,UAAU,CAAE,CAAF;AAFvB,KAAP;AAIA;;AACD,SAAOM,SAAP;AACA,CAdD;;;;AAgBA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAEC,aAAF,EAAiBC,YAAjB,EAA+BZ,KAA/B,EAAsCC,IAAtC,EAAgD;AAAA,MACnEY,KADmE,GACjDF,aADiD,CACnEE,KADmE;AAAA,MAC5DC,MAD4D,GACjDH,aADiD,CAC5DG,MAD4D;;AAAA,cAErCf,eAAe,CAAEC,KAAF,EAASC,IAAT,CAAf,IAAkC,EAFG;AAAA,MAEnEM,cAFmE,SAEnEA,cAFmE;AAAA,MAEnDC,SAFmD,SAEnDA,SAFmD;;AAAA,cAGjDI,YAAY,IAAI,EAHiC;AAAA,6BAGnEG,QAHmE;AAAA,MAGnEA,QAHmE,+BAGxD,EAHwD;;AAK3E,UAASP,SAAT;AACC,SAAK,KAAL;AACA,SAAK,IAAL;AACC,aAAOD,cAAc,GAAGQ,QAAxB;;AACD,SAAK,GAAL;AACC,aAAOC,MAAM,CAAET,cAAc,GAAG,GAAnB,CAAN,GAAiCM,KAAxC;;AACD,SAAK,IAAL;AACC,aAAOG,MAAM,CAAET,cAAF,CAAb;;AACD,SAAK,IAAL;AACC,UAAMU,EAAE,GAAGJ,KAAK,GAAG,GAAnB;AACA,aAAOK,IAAI,CAACC,KAAL,CAAYZ,cAAc,GAAGU,EAA7B,CAAP;;AACD,SAAK,IAAL;AACC,UAAMG,EAAE,GAAGN,MAAM,GAAG,GAApB;AACA,aAAOI,IAAI,CAACC,KAAL,CAAYZ,cAAc,GAAGa,EAA7B,CAAP;;AACD;AACC,aAAOJ,MAAM,CAAET,cAAc,GAAG,GAAnB,CAAN,GAAiCM,KAAxC;AAfF;AAiBA,CAtBD;;;;AAwBA,IAAMQ,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAErB,KAAF,EAASC,IAAT,EAAmB;AAAA,oBAChB,yBAAYqB,4BAAZ,CADgB;AAAA,MAC3BC,MAD2B,eACzCX,YADyC;;AAAA,kBAET,uBACvCY,wBAAWC,GAAX,CAAgB,QAAhB,CADuC,CAFS;AAAA;AAAA,MAEzCC,WAFyC;AAAA,MAE5BC,cAF4B;;AAMjD,0BAAW,YAAM;AAChBH,4BAAWI,gBAAX,CAA6B,QAA7B,EAAuCC,kBAAvC;;AAEA,WAAO,YAAM;AACZL,8BAAWM,mBAAX,CAAgC,QAAhC,EAA0CD,kBAA1C;AACA,KAFD;AAGA,GAND,EAMG,EANH;AAQA,MAAMA,kBAAkB,GAAG,0BAAa,iBAAkB;AAAA,QAAdE,MAAc,SAAdA,MAAc;AACzDJ,IAAAA,cAAc,CAAEI,MAAF,CAAd;AACA,GAF0B,EAExB,EAFwB,CAA3B;AAIA,SAAO,sBAAS,YAAM;AAAA,2BACiBhC,eAAe,CAAEC,KAAF,EAASC,IAAT,CADhC;AAAA,QACbM,cADa,oBACbA,cADa;AAAA,QACGC,SADH,oBACGA,SADH;;AAGrB,WAAOE,mBAAmB,CACzBgB,WADyB,EAEzBH,MAFyB,EAGzBhB,cAHyB,EAIzBC,SAJyB,CAA1B;AAMA,GATM,EASJ,CAAEkB,WAAF,EAAe1B,KAAf,EAAsBC,IAAtB,CATI,CAAP;AAUA,CA5BD","sourcesContent":["/**\n * External dependencies\n */\nimport { Dimensions } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tuseContext,\n\tuseEffect,\n\tuseState,\n\tuseMemo,\n\tuseCallback,\n} from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport GlobalStylesContext from '../global-styles-context';\n\nconst getValueAndUnit = ( value, unit ) => {\n\tconst regex = /(\\d+\\.?\\d*)(.*)/;\n\n\tconst splitValue = `${ value }`\n\t\t?.match( regex )\n\t\t?.filter( ( v ) => v !== '' );\n\n\tif ( splitValue ) {\n\t\treturn {\n\t\t\tvalueToConvert: splitValue[ 1 ],\n\t\t\tvalueUnit: unit || splitValue[ 2 ],\n\t\t};\n\t}\n\treturn undefined;\n};\n\nconst convertUnitToMobile = ( containerSize, globalStyles, value, unit ) => {\n\tconst { width, height } = containerSize;\n\tconst { valueToConvert, valueUnit } = getValueAndUnit( value, unit ) || {};\n\tconst { fontSize = 16 } = globalStyles || {};\n\n\tswitch ( valueUnit ) {\n\t\tcase 'rem':\n\t\tcase 'em':\n\t\t\treturn valueToConvert * fontSize;\n\t\tcase '%':\n\t\t\treturn Number( valueToConvert / 100 ) * width;\n\t\tcase 'px':\n\t\t\treturn Number( valueToConvert );\n\t\tcase 'vw':\n\t\t\tconst vw = width / 100;\n\t\t\treturn Math.round( valueToConvert * vw );\n\t\tcase 'vh':\n\t\t\tconst vh = height / 100;\n\t\t\treturn Math.round( valueToConvert * vh );\n\t\tdefault:\n\t\t\treturn Number( valueToConvert / 100 ) * width;\n\t}\n};\n\nconst useConvertUnitToMobile = ( value, unit ) => {\n\tconst { globalStyles: styles } = useContext( GlobalStylesContext );\n\tconst [ windowSizes, setWindowSizes ] = useState(\n\t\tDimensions.get( 'window' )\n\t);\n\n\tuseEffect( () => {\n\t\tDimensions.addEventListener( 'change', onDimensionsChange );\n\n\t\treturn () => {\n\t\t\tDimensions.removeEventListener( 'change', onDimensionsChange );\n\t\t};\n\t}, [] );\n\n\tconst onDimensionsChange = useCallback( ( { window } ) => {\n\t\tsetWindowSizes( window );\n\t}, [] );\n\n\treturn useMemo( () => {\n\t\tconst { valueToConvert, valueUnit } = getValueAndUnit( value, unit );\n\n\t\treturn convertUnitToMobile(\n\t\t\twindowSizes,\n\t\t\tstyles,\n\t\t\tvalueToConvert,\n\t\t\tvalueUnit\n\t\t);\n\t}, [ windowSizes, value, unit ] );\n};\n\nexport { convertUnitToMobile, useConvertUnitToMobile, getValueAndUnit };\n"]}