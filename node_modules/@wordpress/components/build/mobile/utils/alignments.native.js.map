{"version":3,"sources":["@wordpress/components/src/mobile/utils/alignments.native.js"],"names":["WIDE_ALIGNMENTS","alignments","wide","full","innerContainers","excludeBlocks","ALIGNMENT_BREAKPOINTS","large","medium","small","mobile","isFullWidth","align","isWideWidth","isWider","width","breakpoint","isContainerRelated","blockName","includes","alignmentHelpers"],"mappings":";;;;;;AAAO,IAAMA,eAAe,GAAG;AAC9BC,EAAAA,UAAU,EAAE;AACXC,IAAAA,IAAI,EAAE,MADK;AAEXC,IAAAA,IAAI,EAAE;AAFK,GADkB;AAK9B;AACA;AACAC,EAAAA,eAAe,EAAE,CAChB,YADgB,EAEhB,cAFgB,EAGhB,aAHgB,EAIhB,cAJgB,EAKhB,aALgB,CAPa;AAc9BC,EAAAA,aAAa,EAAE,CAAE,cAAF;AAde,CAAxB;;AAiBA,IAAMC,qBAAqB,GAAG;AACpCJ,EAAAA,IAAI,EAAE,IAD8B;AAEpCK,EAAAA,KAAK,EAAE,GAF6B;AAGpCC,EAAAA,MAAM,EAAE,GAH4B;AAIpCC,EAAAA,KAAK,EAAE,GAJ6B;AAKpCC,EAAAA,MAAM,EAAE;AAL4B,CAA9B;;;AAQP,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAEC,KAAF;AAAA,SAAaA,KAAK,KAAKZ,eAAe,CAACC,UAAhB,CAA2BE,IAAlD;AAAA,CAApB;;AAEA,IAAMU,WAAW,GAAG,SAAdA,WAAc,CAAED,KAAF;AAAA,SAAaA,KAAK,KAAKZ,eAAe,CAACC,UAAhB,CAA2BC,IAAlD;AAAA,CAApB;;AAEA,IAAMY,OAAO,GAAG,SAAVA,OAAU,CAAEC,KAAF,EAASC,UAAT;AAAA,SACfD,KAAK,GAAGT,qBAAqB,CAAEU,UAAF,CADd;AAAA,CAAhB;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAEC,SAAF;AAAA,SAC1BlB,eAAe,CAACI,eAAhB,CAAgCe,QAAhC,CAA0CD,SAA1C,CAD0B;AAAA,CAA3B;;AAGO,IAAME,gBAAgB,GAAG;AAC/BT,EAAAA,WAAW,EAAXA,WAD+B;AAE/BE,EAAAA,WAAW,EAAXA,WAF+B;AAG/BC,EAAAA,OAAO,EAAPA,OAH+B;AAI/BG,EAAAA,kBAAkB,EAAlBA;AAJ+B,CAAzB","sourcesContent":["export const WIDE_ALIGNMENTS = {\n\talignments: {\n\t\twide: 'wide',\n\t\tfull: 'full',\n\t},\n\t// `innerContainers`: Group of blocks based on `InnerBlocks` component,\n\t// used to nest other blocks inside\n\tinnerContainers: [\n\t\t'core/group',\n\t\t'core/columns',\n\t\t'core/column',\n\t\t'core/buttons',\n\t\t'core/button',\n\t],\n\texcludeBlocks: [ 'core/heading' ],\n};\n\nexport const ALIGNMENT_BREAKPOINTS = {\n\twide: 1024,\n\tlarge: 820,\n\tmedium: 768,\n\tsmall: 680,\n\tmobile: 480,\n};\n\nconst isFullWidth = ( align ) => align === WIDE_ALIGNMENTS.alignments.full;\n\nconst isWideWidth = ( align ) => align === WIDE_ALIGNMENTS.alignments.wide;\n\nconst isWider = ( width, breakpoint ) =>\n\twidth > ALIGNMENT_BREAKPOINTS[ breakpoint ];\n\nconst isContainerRelated = ( blockName ) =>\n\tWIDE_ALIGNMENTS.innerContainers.includes( blockName );\n\nexport const alignmentHelpers = {\n\tisFullWidth,\n\tisWideWidth,\n\tisWider,\n\tisContainerRelated,\n};\n"]}