{"version":3,"sources":["@wordpress/components/src/input-control/input-field.js"],"names":["InputField","ref","disabled","dragDirection","dragThreshold","id","isDragEnabled","isFocused","isPressEnterToChange","onBlur","noop","onChange","onDrag","onDragEnd","onDragStart","onFocus","onKeyDown","onValidate","size","setIsFocused","stateReducer","state","valueProp","value","type","props","change","commit","drag","dragEnd","dragStart","invalidate","pressDown","pressEnter","pressUp","reset","update","_event","isDragging","isDirty","wasDirtyOnBlur","dragCursor","current","event","handleOnBlur","handleOnCommit","handleOnFocus","handleOnChange","nextValue","target","err","handleOnKeyDown","keyCode","UP","DOWN","ENTER","preventDefault","dragGestureProps","dragProps","distance","dragging","stopPropagation","threshold","enabled","handleOnMouseDown","onMouseDown","ownerDocument","activeElement","focus","ForwardedComponent"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\nimport { useDrag } from 'react-use-gesture';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef, useRef } from '@wordpress/element';\nimport { UP, DOWN, ENTER } from '@wordpress/keycodes';\n/**\n * Internal dependencies\n */\nimport { useDragCursor } from './utils';\nimport { Input } from './styles/input-control-styles';\nimport { useInputControlStateReducer } from './state';\nimport { isValueEmpty } from '../utils/values';\nimport { useUpdateEffect } from '../utils';\n\nfunction InputField(\n\t{\n\t\tdisabled = false,\n\t\tdragDirection = 'n',\n\t\tdragThreshold = 10,\n\t\tid,\n\t\tisDragEnabled = false,\n\t\tisFocused,\n\t\tisPressEnterToChange = false,\n\t\tonBlur = noop,\n\t\tonChange = noop,\n\t\tonDrag = noop,\n\t\tonDragEnd = noop,\n\t\tonDragStart = noop,\n\t\tonFocus = noop,\n\t\tonKeyDown = noop,\n\t\tonValidate = noop,\n\t\tsize = 'default',\n\t\tsetIsFocused,\n\t\tstateReducer = ( state ) => state,\n\t\tvalue: valueProp,\n\t\ttype,\n\t\t...props\n\t},\n\tref\n) {\n\tconst {\n\t\t// State\n\t\tstate,\n\t\t// Actions\n\t\tchange,\n\t\tcommit,\n\t\tdrag,\n\t\tdragEnd,\n\t\tdragStart,\n\t\tinvalidate,\n\t\tpressDown,\n\t\tpressEnter,\n\t\tpressUp,\n\t\treset,\n\t\tupdate,\n\t} = useInputControlStateReducer( stateReducer, {\n\t\tisDragEnabled,\n\t\tvalue: valueProp,\n\t\tisPressEnterToChange,\n\t} );\n\n\tconst { _event, value, isDragging, isDirty } = state;\n\tconst wasDirtyOnBlur = useRef( false );\n\n\tconst dragCursor = useDragCursor( isDragging, dragDirection );\n\n\t/*\n\t * Handles syncronization of external and internal value state.\n\t * If not focused and did not hold a dirty value[1] on blur\n\t * updates the value from the props. Otherwise if not holding\n\t * a dirty value[1] propagates the value and event through onChange.\n\t * [1] value is only made dirty if isPressEnterToChange is true\n\t */\n\tuseUpdateEffect( () => {\n\t\tif ( valueProp === value ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( ! isFocused && ! wasDirtyOnBlur.current ) {\n\t\t\tupdate( valueProp );\n\t\t} else if ( ! isDirty ) {\n\t\t\tonChange( value, { event: _event } );\n\t\t\twasDirtyOnBlur.current = false;\n\t\t}\n\t}, [ value, isDirty, isFocused, valueProp ] );\n\n\tconst handleOnBlur = ( event ) => {\n\t\tonBlur( event );\n\t\tsetIsFocused( false );\n\n\t\t/**\n\t\t * If isPressEnterToChange is set, this commits the value to\n\t\t * the onChange callback.\n\t\t */\n\t\tif ( isPressEnterToChange && isDirty ) {\n\t\t\twasDirtyOnBlur.current = true;\n\t\t\tif ( ! isValueEmpty( value ) ) {\n\t\t\t\thandleOnCommit( event );\n\t\t\t} else {\n\t\t\t\treset( valueProp );\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleOnFocus = ( event ) => {\n\t\tonFocus( event );\n\t\tsetIsFocused( true );\n\t};\n\n\tconst handleOnChange = ( event ) => {\n\t\tconst nextValue = event.target.value;\n\t\tchange( nextValue, event );\n\t};\n\n\tconst handleOnCommit = ( event ) => {\n\t\tconst nextValue = event.target.value;\n\n\t\ttry {\n\t\t\tonValidate( nextValue, event );\n\t\t\tcommit( nextValue, event );\n\t\t} catch ( err ) {\n\t\t\tinvalidate( err, event );\n\t\t}\n\t};\n\n\tconst handleOnKeyDown = ( event ) => {\n\t\tconst { keyCode } = event;\n\t\tonKeyDown( event );\n\n\t\tswitch ( keyCode ) {\n\t\t\tcase UP:\n\t\t\t\tpressUp( event );\n\t\t\t\tbreak;\n\n\t\t\tcase DOWN:\n\t\t\t\tpressDown( event );\n\t\t\t\tbreak;\n\n\t\t\tcase ENTER:\n\t\t\t\tpressEnter( event );\n\n\t\t\t\tif ( isPressEnterToChange ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\thandleOnCommit( event );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst dragGestureProps = useDrag(\n\t\t( dragProps ) => {\n\t\t\tconst { distance, dragging, event } = dragProps;\n\n\t\t\tif ( ! distance ) return;\n\t\t\tevent.stopPropagation();\n\n\t\t\t/**\n\t\t\t * Quick return if no longer dragging.\n\t\t\t * This prevents unnecessary value calculations.\n\t\t\t */\n\t\t\tif ( ! dragging ) {\n\t\t\t\tonDragEnd( dragProps );\n\t\t\t\tdragEnd( dragProps );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tonDrag( dragProps );\n\t\t\tdrag( dragProps );\n\n\t\t\tif ( ! isDragging ) {\n\t\t\t\tonDragStart( dragProps );\n\t\t\t\tdragStart( dragProps );\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tthreshold: dragThreshold,\n\t\t\tenabled: isDragEnabled,\n\t\t}\n\t);\n\n\tconst dragProps = isDragEnabled ? dragGestureProps() : {};\n\t/*\n\t * Works around the odd UA (e.g. Firefox) that does not focus inputs of\n\t * type=number when their spinner arrows are pressed.\n\t */\n\tlet handleOnMouseDown;\n\tif ( type === 'number' ) {\n\t\thandleOnMouseDown = ( event ) => {\n\t\t\tprops.onMouseDown?.( event );\n\t\t\tif ( event.target !== event.target.ownerDocument.activeElement ) {\n\t\t\t\tevent.target.focus();\n\t\t\t}\n\t\t};\n\t}\n\n\treturn (\n\t\t<Input\n\t\t\t{ ...props }\n\t\t\t{ ...dragProps }\n\t\t\tclassName=\"components-input-control__input\"\n\t\t\tdisabled={ disabled }\n\t\t\tdragCursor={ dragCursor }\n\t\t\tisDragging={ isDragging }\n\t\t\tid={ id }\n\t\t\tonBlur={ handleOnBlur }\n\t\t\tonChange={ handleOnChange }\n\t\t\tonFocus={ handleOnFocus }\n\t\t\tonKeyDown={ handleOnKeyDown }\n\t\t\tonMouseDown={ handleOnMouseDown }\n\t\t\tref={ ref }\n\t\t\tsize={ size }\n\t\t\tvalue={ value }\n\t\t\ttype={ type }\n\t\t/>\n\t);\n}\n\nconst ForwardedComponent = forwardRef( InputField );\n\nexport default ForwardedComponent;\n"]}