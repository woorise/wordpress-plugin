{"version":3,"sources":["@wordpress/deprecated/src/index.js"],"names":["doAction","logged","Object","create","deprecated","feature","options","since","version","alternative","plugin","link","hint","pluginMessage","sinceMessage","versionMessage","useInsteadMessage","linkMessage","hintMessage","message","console","warn"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,kBAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAe,IAAf,CAAf;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,UAAT,CAAqBC,OAArB,EAA6C;AAAA,MAAfC,OAAe,uEAAL,EAAK;AAAA,MACnDC,KADmD,GACCD,OADD,CACnDC,KADmD;AAAA,MAC5CC,OAD4C,GACCF,OADD,CAC5CE,OAD4C;AAAA,MACnCC,WADmC,GACCH,OADD,CACnCG,WADmC;AAAA,MACtBC,MADsB,GACCJ,OADD,CACtBI,MADsB;AAAA,MACdC,IADc,GACCL,OADD,CACdK,IADc;AAAA,MACRC,IADQ,GACCN,OADD,CACRM,IADQ;AAG3D,MAAMC,aAAa,GAAGH,MAAM,mBAAaA,MAAb,IAAyB,EAArD;AACA,MAAMI,YAAY,GAAGP,KAAK,4BAAsBA,KAAtB,IAAiC,EAA3D;AACA,MAAMQ,cAAc,GAAGP,OAAO,iCACHK,aADG,yBAC2BL,OAD3B,IAE3B,EAFH;AAGA,MAAMQ,iBAAiB,GAAGP,WAAW,yBAClBA,WADkB,iBAElC,EAFH;AAGA,MAAMQ,WAAW,GAAGN,IAAI,mBAAaA,IAAb,IAAuB,EAA/C;AACA,MAAMO,WAAW,GAAGN,IAAI,oBAAcA,IAAd,IAAwB,EAAhD;AACA,MAAMO,OAAO,aAAOd,OAAP,2BAAiCS,YAAjC,SAAkDC,cAAlD,cAAsEC,iBAAtE,SAA4FC,WAA5F,SAA4GC,WAA5G,CAAb,CAb2D,CAe3D;;AACA,MAAKC,OAAO,IAAIlB,MAAhB,EAAyB;AACxB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCD,EAAAA,QAAQ,CAAE,YAAF,EAAgBK,OAAhB,EAAyBC,OAAzB,EAAkCa,OAAlC,CAAR,CAjC2D,CAmC3D;;AACAC,EAAAA,OAAO,CAACC,IAAR,CAAcF,OAAd;AAEAlB,EAAAA,MAAM,CAAEkB,OAAF,CAAN,GAAoB,IAApB;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { doAction } from '@wordpress/hooks';\n\n/**\n * Object map tracking messages which have been logged, for use in ensuring a\n * message is only logged once.\n *\n * @type {Record<string,true|undefined>}\n */\nexport const logged = Object.create( null );\n\n/**\n * Logs a message to notify developers about a deprecated feature.\n *\n * @param {string} feature               Name of the deprecated feature.\n * @param {Object} [options]             Personalisation options\n * @param {string} [options.since]       Version in which the feature was deprecated.\n * @param {string} [options.version]     Version in which the feature will be removed.\n * @param {string} [options.alternative] Feature to use instead\n * @param {string} [options.plugin]      Plugin name if it's a plugin feature\n * @param {string} [options.link]        Link to documentation\n * @param {string} [options.hint]        Additional message to help transition away from the deprecated feature.\n *\n * @example\n * ```js\n * import deprecated from '@wordpress/deprecated';\n *\n * deprecated( 'Eating meat', {\n * \tsince: '2019.01.01'\n * \tversion: '2020.01.01',\n * \talternative: 'vegetables',\n * \tplugin: 'the earth',\n * \thint: 'You may find it beneficial to transition gradually.',\n * } );\n *\n * // Logs: 'Eating meat is deprecated since version 2019.01.01 and will be removed from the earth in version 2020.01.01. Please use vegetables instead. Note: You may find it beneficial to transition gradually.'\n * ```\n */\nexport default function deprecated( feature, options = {} ) {\n\tconst { since, version, alternative, plugin, link, hint } = options;\n\n\tconst pluginMessage = plugin ? ` from ${ plugin }` : '';\n\tconst sinceMessage = since ? ` since version ${ since }` : '';\n\tconst versionMessage = version\n\t\t? ` and will be removed${ pluginMessage } in version ${ version }`\n\t\t: '';\n\tconst useInsteadMessage = alternative\n\t\t? ` Please use ${ alternative } instead.`\n\t\t: '';\n\tconst linkMessage = link ? ` See: ${ link }` : '';\n\tconst hintMessage = hint ? ` Note: ${ hint }` : '';\n\tconst message = `${ feature } is deprecated${ sinceMessage }${ versionMessage }.${ useInsteadMessage }${ linkMessage }${ hintMessage }`;\n\n\t// Skip if already logged.\n\tif ( message in logged ) {\n\t\treturn;\n\t}\n\n\t/**\n\t * Fires whenever a deprecated feature is encountered\n\t *\n\t * @param {string}  feature             Name of the deprecated feature.\n\t * @param {?Object} options             Personalisation options\n\t * @param {string}  options.since       Version in which the feature was deprecated.\n\t * @param {?string} options.version     Version in which the feature will be removed.\n\t * @param {?string} options.alternative Feature to use instead\n\t * @param {?string} options.plugin      Plugin name if it's a plugin feature\n\t * @param {?string} options.link        Link to documentation\n\t * @param {?string} options.hint        Additional message to help transition away from the deprecated feature.\n\t * @param {?string} message             Message sent to console.warn\n\t */\n\tdoAction( 'deprecated', feature, options, message );\n\n\t// eslint-disable-next-line no-console\n\tconsole.warn( message );\n\n\tlogged[ message ] = true;\n}\n"]}