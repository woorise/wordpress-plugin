{"version":3,"sources":["@wordpress/api-fetch/src/middlewares/nonce.js"],"names":["createNonceMiddleware","nonce","middleware","options","next","headers","headerName","toLowerCase"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,qBAAT,CAAgCC,KAAhC,EAAwC;AACvC;AACD;AACA;AACC,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAEC,OAAF,EAAWC,IAAX,EAAqB;AAAA,2BACdD,OADc,CAC/BE,OAD+B;AAAA,QAC/BA,OAD+B,iCACrB,EADqB,qBAGvC;AACA;;AACA,SAAM,IAAMC,UAAZ,IAA0BD,OAA1B,EAAoC;AACnC,UACCC,UAAU,CAACC,WAAX,OAA6B,YAA7B,IACAF,OAAO,CAAEC,UAAF,CAAP,KAA0BJ,UAAU,CAACD,KAFtC,EAGE;AACD,eAAOG,IAAI,CAAED,OAAF,CAAX;AACA;AACD;;AAED,WAAOC,IAAI,iCACPD,OADO;AAEVE,MAAAA,OAAO,kCACHA,OADG;AAEN,sBAAcH,UAAU,CAACD;AAFnB;AAFG,OAAX;AAOA,GArBD;;AAuBAC,EAAAA,UAAU,CAACD,KAAX,GAAmBA,KAAnB;AAEA,SAAOC,UAAP;AACA;;eAEcF,qB","sourcesContent":["/**\n * @param {string} nonce\n * @return {import('../types').ApiFetchMiddleware & { nonce: string }} A middleware to enhance a request with a nonce.\n */\nfunction createNonceMiddleware( nonce ) {\n\t/**\n\t * @type {import('../types').ApiFetchMiddleware & { nonce: string }}\n\t */\n\tconst middleware = ( options, next ) => {\n\t\tconst { headers = {} } = options;\n\n\t\t// If an 'X-WP-Nonce' header (or any case-insensitive variation\n\t\t// thereof) was specified, no need to add a nonce header.\n\t\tfor ( const headerName in headers ) {\n\t\t\tif (\n\t\t\t\theaderName.toLowerCase() === 'x-wp-nonce' &&\n\t\t\t\theaders[ headerName ] === middleware.nonce\n\t\t\t) {\n\t\t\t\treturn next( options );\n\t\t\t}\n\t\t}\n\n\t\treturn next( {\n\t\t\t...options,\n\t\t\theaders: {\n\t\t\t\t...headers,\n\t\t\t\t'X-WP-Nonce': middleware.nonce,\n\t\t\t},\n\t\t} );\n\t};\n\n\tmiddleware.nonce = nonce;\n\n\treturn middleware;\n}\n\nexport default createNonceMiddleware;\n"]}