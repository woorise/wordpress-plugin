{"version":3,"sources":["@wordpress/keycodes/src/index.js"],"names":["BACKSPACE","TAB","ENTER","ESCAPE","SPACE","LEFT","UP","RIGHT","DOWN","DELETE","F10","ALT","CTRL","COMMAND","SHIFT","ZERO","modifiers","primary","_isApple","primaryShift","primaryAlt","secondary","access","ctrl","alt","ctrlShift","shift","shiftAlt","rawShortcut","modifier","character","isAppleOS","toLowerCase","join","displayShortcutList","isApple","replacementKeyMap","modifierKeys","reduce","accumulator","key","replacementKey","capitalizedCharacter","displayShortcut","shortcutList","shortcutAriaLabel","map","getEventModifiers","event","filter","isKeyboardEvent","getModifiers","mods","eventMods","length"],"mappings":"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","sourcesContent":["/**\n * Note: The order of the modifier keys in many of the [foo]Shortcut()\n * functions in this file are intentional and should not be changed. They're\n * designed to fit with the standard menu keyboard shortcuts shown in the\n * user's platform.\n *\n * For example, on MacOS menu shortcuts will place Shift before Command, but\n * on Windows Control will usually come first. So don't provide your own\n * shortcut combos directly to keyboardShortcut().\n */\n\n/**\n * External dependencies\n */\nimport { get, mapValues, includes, capitalize, xor } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { isAppleOS } from './platform';\n\n/** @typedef {typeof ALT | CTRL | COMMAND | SHIFT } WPModifierPart */\n\n/** @typedef {'primary' | 'primaryShift' | 'primaryAlt' | 'secondary' | 'access' | 'ctrl' | 'alt' | 'ctrlShift' | 'shift' | 'shiftAlt'} WPKeycodeModifier */\n\n/**\n * An object of handler functions for each of the possible modifier\n * combinations. A handler will return a value for a given key.\n *\n * @template T\n *\n * @typedef {Record<WPKeycodeModifier, T>} WPModifierHandler\n */\n\n/**\n * @template T\n *\n * @typedef {(character: string, isApple?: () => boolean) => T} WPKeyHandler\n */\n/** @typedef {(event: KeyboardEvent, character: string, isApple?: () => boolean) => boolean} WPEventKeyHandler */\n\n/**\n * Keycode for BACKSPACE key.\n */\nexport const BACKSPACE = 8;\n\n/**\n * Keycode for TAB key.\n */\nexport const TAB = 9;\n\n/**\n * Keycode for ENTER key.\n */\nexport const ENTER = 13;\n\n/**\n * Keycode for ESCAPE key.\n */\nexport const ESCAPE = 27;\n\n/**\n * Keycode for SPACE key.\n */\nexport const SPACE = 32;\n\n/**\n * Keycode for LEFT key.\n */\nexport const LEFT = 37;\n\n/**\n * Keycode for UP key.\n */\nexport const UP = 38;\n\n/**\n * Keycode for RIGHT key.\n */\nexport const RIGHT = 39;\n\n/**\n * Keycode for DOWN key.\n */\nexport const DOWN = 40;\n\n/**\n * Keycode for DELETE key.\n */\nexport const DELETE = 46;\n\n/**\n * Keycode for F10 key.\n */\nexport const F10 = 121;\n\n/**\n * Keycode for ALT key.\n */\nexport const ALT = 'alt';\n\n/**\n * Keycode for CTRL key.\n */\nexport const CTRL = 'ctrl';\n\n/**\n * Keycode for COMMAND/META key.\n */\nexport const COMMAND = 'meta';\n\n/**\n * Keycode for SHIFT key.\n */\nexport const SHIFT = 'shift';\n\n/**\n * Keycode for ZERO key.\n */\nexport const ZERO = 48;\n\n/**\n * Object that contains functions that return the available modifier\n * depending on platform.\n *\n * @type {WPModifierHandler< ( isApple: () => boolean ) => WPModifierPart[]>}\n */\nexport const modifiers = {\n\tprimary: ( _isApple ) => ( _isApple() ? [ COMMAND ] : [ CTRL ] ),\n\tprimaryShift: ( _isApple ) =>\n\t\t_isApple() ? [ SHIFT, COMMAND ] : [ CTRL, SHIFT ],\n\tprimaryAlt: ( _isApple ) =>\n\t\t_isApple() ? [ ALT, COMMAND ] : [ CTRL, ALT ],\n\tsecondary: ( _isApple ) =>\n\t\t_isApple() ? [ SHIFT, ALT, COMMAND ] : [ CTRL, SHIFT, ALT ],\n\taccess: ( _isApple ) => ( _isApple() ? [ CTRL, ALT ] : [ SHIFT, ALT ] ),\n\tctrl: () => [ CTRL ],\n\talt: () => [ ALT ],\n\tctrlShift: () => [ CTRL, SHIFT ],\n\tshift: () => [ SHIFT ],\n\tshiftAlt: () => [ SHIFT, ALT ],\n};\n\n/**\n * An object that contains functions to get raw shortcuts.\n *\n * These are intended for user with the KeyboardShortcuts.\n *\n * @example\n * ```js\n * // Assuming macOS:\n * rawShortcut.primary( 'm' )\n * // \"meta+m\"\"\n * ```\n *\n * @type {WPModifierHandler<WPKeyHandler<string>>} Keyed map of functions to raw\n *                                                 shortcuts.\n */\nexport const rawShortcut = mapValues( modifiers, ( modifier ) => {\n\treturn /** @type {WPKeyHandler<string>} */ (\n\t\tcharacter,\n\t\t_isApple = isAppleOS\n\t) => {\n\t\treturn [ ...modifier( _isApple ), character.toLowerCase() ].join( '+' );\n\t};\n} );\n\n/**\n * Return an array of the parts of a keyboard shortcut chord for display.\n *\n * @example\n * ```js\n * // Assuming macOS:\n * displayShortcutList.primary( 'm' );\n * // [ \"âŒ˜\", \"M\" ]\n * ```\n *\n * @type {WPModifierHandler<WPKeyHandler<string[]>>} Keyed map of functions to\n *                                                   shortcut sequences.\n */\nexport const displayShortcutList = mapValues( modifiers, ( modifier ) => {\n\treturn /** @type {WPKeyHandler<string[]>} */ (\n\t\tcharacter,\n\t\t_isApple = isAppleOS\n\t) => {\n\t\tconst isApple = _isApple();\n\t\tconst replacementKeyMap = {\n\t\t\t[ ALT ]: isApple ? 'âŒ¥' : 'Alt',\n\t\t\t[ CTRL ]: isApple ? 'âŒƒ' : 'Ctrl', // Make sure âŒƒ is the U+2303 UP ARROWHEAD unicode character and not the caret character.\n\t\t\t[ COMMAND ]: 'âŒ˜',\n\t\t\t[ SHIFT ]: isApple ? 'â‡§' : 'Shift',\n\t\t};\n\n\t\tconst modifierKeys = modifier( _isApple ).reduce(\n\t\t\t( accumulator, key ) => {\n\t\t\t\tconst replacementKey = get( replacementKeyMap, key, key );\n\t\t\t\t// If on the Mac, adhere to platform convention and don't show plus between keys.\n\t\t\t\tif ( isApple ) {\n\t\t\t\t\treturn [ ...accumulator, replacementKey ];\n\t\t\t\t}\n\n\t\t\t\treturn [ ...accumulator, replacementKey, '+' ];\n\t\t\t},\n\t\t\t/** @type {string[]} */ ( [] )\n\t\t);\n\n\t\tconst capitalizedCharacter = capitalize( character );\n\t\treturn [ ...modifierKeys, capitalizedCharacter ];\n\t};\n} );\n\n/**\n * An object that contains functions to display shortcuts.\n *\n * @example\n * ```js\n * // Assuming macOS:\n * displayShortcut.primary( 'm' );\n * // \"âŒ˜M\"\n * ```\n *\n * @type {WPModifierHandler<WPKeyHandler<string>>} Keyed map of functions to\n *                                                 display shortcuts.\n */\nexport const displayShortcut = mapValues(\n\tdisplayShortcutList,\n\t( shortcutList ) => {\n\t\treturn /** @type {WPKeyHandler<string>} */ (\n\t\t\tcharacter,\n\t\t\t_isApple = isAppleOS\n\t\t) => shortcutList( character, _isApple ).join( '' );\n\t}\n);\n\n/**\n * An object that contains functions to return an aria label for a keyboard\n * shortcut.\n *\n * @example\n * ```js\n * // Assuming macOS:\n * shortcutAriaLabel.primary( '.' );\n * // \"Command + Period\"\n * ```\n *\n * @type {WPModifierHandler<WPKeyHandler<string>>} Keyed map of functions to\n *                                                 shortcut ARIA labels.\n */\nexport const shortcutAriaLabel = mapValues( modifiers, ( modifier ) => {\n\treturn /** @type {WPKeyHandler<string>} */ (\n\t\tcharacter,\n\t\t_isApple = isAppleOS\n\t) => {\n\t\tconst isApple = _isApple();\n\t\tconst replacementKeyMap = {\n\t\t\t[ SHIFT ]: 'Shift',\n\t\t\t[ COMMAND ]: isApple ? 'Command' : 'Control',\n\t\t\t[ CTRL ]: 'Control',\n\t\t\t[ ALT ]: isApple ? 'Option' : 'Alt',\n\t\t\t/* translators: comma as in the character ',' */\n\t\t\t',': __( 'Comma' ),\n\t\t\t/* translators: period as in the character '.' */\n\t\t\t'.': __( 'Period' ),\n\t\t\t/* translators: backtick as in the character '`' */\n\t\t\t'`': __( 'Backtick' ),\n\t\t};\n\n\t\treturn [ ...modifier( _isApple ), character ]\n\t\t\t.map( ( key ) => capitalize( get( replacementKeyMap, key, key ) ) )\n\t\t\t.join( isApple ? ' ' : ' + ' );\n\t};\n} );\n\n/**\n * From a given KeyboardEvent, returns an array of active modifier constants for\n * the event.\n *\n * @param {KeyboardEvent} event Keyboard event.\n *\n * @return {Array<WPModifierPart>} Active modifier constants.\n */\nfunction getEventModifiers( event ) {\n\treturn /** @type {WPModifierPart[]} */ ( [\n\t\tALT,\n\t\tCTRL,\n\t\tCOMMAND,\n\t\tSHIFT,\n\t] ).filter(\n\t\t( key ) =>\n\t\t\tevent[\n\t\t\t\t/** @type {'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'} */ ( `${ key }Key` )\n\t\t\t]\n\t);\n}\n\n/**\n * An object that contains functions to check if a keyboard event matches a\n * predefined shortcut combination.\n *\n * @example\n * ```js\n * // Assuming an event for âŒ˜M key press:\n * isKeyboardEvent.primary( event, 'm' );\n * // true\n * ```\n *\n * @type {WPModifierHandler<WPEventKeyHandler>} Keyed map of functions\n *                                                       to match events.\n */\nexport const isKeyboardEvent = mapValues( modifiers, ( getModifiers ) => {\n\treturn /** @type {WPEventKeyHandler} */ (\n\t\tevent,\n\t\tcharacter,\n\t\t_isApple = isAppleOS\n\t) => {\n\t\tconst mods = getModifiers( _isApple );\n\t\tconst eventMods = getEventModifiers( event );\n\n\t\tif ( xor( mods, eventMods ).length ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! character ) {\n\t\t\treturn includes( mods, event.key.toLowerCase() );\n\t\t}\n\n\t\treturn event.key === character;\n\t};\n} );\n"]}