{"version":3,"sources":["@wordpress/compose/src/hooks/use-throttle/index.js"],"names":["useThrottle","args","throttled","throttle","cancel"],"mappings":";;;;;;;AAGA;;AACA;;AAKA;;AATA;AACA;AACA;;AAIA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,WAAT,GAAgC;AAAA,oCAAPC,IAAO;AAAPA,IAAAA,IAAO;AAAA;;AAC9C,MAAMC,SAAS,GAAG,4BAAY;AAAA,WAAMC,+BAAaF,IAAb,CAAN;AAAA,GAAZ,EAAuCA,IAAvC,CAAlB;AACA,0BAAW;AAAA,WAAM;AAAA,aAAMC,SAAS,CAACE,MAAV,EAAN;AAAA,KAAN;AAAA,GAAX,EAA2C,CAAEF,SAAF,CAA3C;AACA,SAAOA,SAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { throttle } from 'lodash';\nimport { useMemoOne } from 'use-memo-one';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\n\n/**\n * Throttles a function with Lodash's `throttle`. A new throttled function will\n * be returned and any scheduled calls cancelled if any of the arguments change,\n * including the function to throttle, so please wrap functions created on\n * render in components in `useCallback`.\n *\n * @param {...any} args Arguments passed to Lodash's `throttle`.\n *\n * @return {Function} Throttled function.\n */\nexport default function useThrottle( ...args ) {\n\tconst throttled = useMemoOne( () => throttle( ...args ), args );\n\tuseEffect( () => () => throttled.cancel(), [ throttled ] );\n\treturn throttled;\n}\n"]}