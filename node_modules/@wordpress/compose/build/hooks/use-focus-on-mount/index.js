"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useFocusOnMount;

var _element = require("@wordpress/element");

var _dom = require("@wordpress/dom");

/**
 * WordPress dependencies
 */

/**
 * Hook used to focus the first tabbable element on mount.
 *
 * @param {boolean|string} focusOnMount Focus on mount mode.
 * @return {Function} Ref callback.
 *
 * @example
 * ```js
 * import { useFocusOnMount } from '@wordpress/compose';
 *
 * const WithFocusOnMount = () => {
 *     const ref = useFocusOnMount()
 *     return (
 *         <div ref={ ref }>
 *             <Button />
 *             <Button />
 *         </div>
 *     );
 * }
 * ```
 */
function useFocusOnMount() {
  var focusOnMount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'firstElement';
  var focusOnMountRef = (0, _element.useRef)(focusOnMount);
  (0, _element.useEffect)(function () {
    focusOnMountRef.current = focusOnMount;
  }, [focusOnMount]);
  return (0, _element.useCallback)(function (node) {
    if (!node || focusOnMountRef.current === false) {
      return;
    }

    if (node.contains(node.ownerDocument.activeElement)) {
      return;
    }

    var target = node;

    if (focusOnMountRef.current === 'firstElement') {
      var firstTabbable = _dom.focus.tabbable.find(node)[0];

      if (firstTabbable) {
        target = firstTabbable;
      }
    }

    target.focus();
  }, []);
}
//# sourceMappingURL=index.js.map