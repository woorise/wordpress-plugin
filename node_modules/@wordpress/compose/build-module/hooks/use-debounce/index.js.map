{"version":3,"sources":["@wordpress/compose/src/hooks/use-debounce/index.js"],"names":["debounce","useMemoOne","useEffect","useDebounce","args","debounced","cancel"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,QAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA;AACA;AACA;;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,WAAT,GAAgC;AAAA,oCAAPC,IAAO;AAAPA,IAAAA,IAAO;AAAA;;AAC9C,MAAMC,SAAS,GAAGJ,UAAU,CAAE;AAAA,WAAMD,QAAQ,MAAR,SAAaI,IAAb,CAAN;AAAA,GAAF,EAA6BA,IAA7B,CAA5B;AACAF,EAAAA,SAAS,CAAE;AAAA,WAAM;AAAA,aAAMG,SAAS,CAACC,MAAV,EAAN;AAAA,KAAN;AAAA,GAAF,EAAkC,CAAED,SAAF,CAAlC,CAAT;AACA,SAAOA,SAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { debounce } from 'lodash';\nimport { useMemoOne } from 'use-memo-one';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\n\n/**\n * Debounces a function with Lodash's `debounce`. A new debounced function will\n * be returned and any scheduled calls cancelled if any of the arguments change,\n * including the function to debounce, so please wrap functions created on\n * render in components in `useCallback`.\n *\n * @param {...any} args Arguments passed to Lodash's `debounce`.\n *\n * @return {Function} Debounced function.\n */\nexport default function useDebounce( ...args ) {\n\tconst debounced = useMemoOne( () => debounce( ...args ), args );\n\tuseEffect( () => () => debounced.cancel(), [ debounced ] );\n\treturn debounced;\n}\n"]}