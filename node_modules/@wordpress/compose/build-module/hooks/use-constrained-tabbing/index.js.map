{"version":3,"sources":["@wordpress/compose/src/hooks/use-constrained-tabbing/index.js"],"names":["TAB","focus","useCallback","useConstrainedTabbing","ref","node","addEventListener","event","keyCode","tabbables","tabbable","find","length","firstTabbable","lastTabbable","shiftKey","target","preventDefault","includes"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,qBAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,qBAAT,GAAiC;AAChC,MAAMC,GAAG,GAAGF,WAAW,CAAE,UAAEG,IAAF,EAAY;AACpC,QAAK,CAAEA,IAAP,EAAc;AACb;AACA;;AACDA,IAAAA,IAAI,CAACC,gBAAL,CAAuB,SAAvB,EAAkC,UAAEC,KAAF,EAAa;AAC9C,UAAKA,KAAK,CAACC,OAAN,KAAkBR,GAAvB,EAA6B;AAC5B;AACA;;AAED,UAAMS,SAAS,GAAGR,KAAK,CAACS,QAAN,CAAeC,IAAf,CAAqBN,IAArB,CAAlB;;AACA,UAAK,CAAEI,SAAS,CAACG,MAAjB,EAA0B;AACzB;AACA;;AACD,UAAMC,aAAa,GAAGJ,SAAS,CAAE,CAAF,CAA/B;AACA,UAAMK,YAAY,GAAGL,SAAS,CAAEA,SAAS,CAACG,MAAV,GAAmB,CAArB,CAA9B;;AAEA,UAAKL,KAAK,CAACQ,QAAN,IAAkBR,KAAK,CAACS,MAAN,KAAiBH,aAAxC,EAAwD;AACvDN,QAAAA,KAAK,CAACU,cAAN;AACAH,QAAAA,YAAY,CAACb,KAAb;AACA,OAHD,MAGO,IAAK,CAAEM,KAAK,CAACQ,QAAR,IAAoBR,KAAK,CAACS,MAAN,KAAiBF,YAA1C,EAAyD;AAC/DP,QAAAA,KAAK,CAACU,cAAN;AACAJ,QAAAA,aAAa,CAACZ,KAAd;AACA;AACJ;AACA;AACA;AACI,OAPM,MAOA,IAAK,CAAEQ,SAAS,CAACS,QAAV,CAAoBX,KAAK,CAACS,MAA1B,CAAP,EAA4C;AAClDT,QAAAA,KAAK,CAACU,cAAN;AACAJ,QAAAA,aAAa,CAACZ,KAAd;AACA;AACD,KA1BD;AA2BA,GA/BsB,EA+BpB,EA/BoB,CAAvB;AAiCA,SAAOG,GAAP;AACA;;AAED,eAAeD,qBAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { TAB } from '@wordpress/keycodes';\nimport { focus } from '@wordpress/dom';\nimport { useCallback } from '@wordpress/element';\n\n/**\n * In Dialogs/modals, the tabbing must be constrained to the content of\n * the wrapper element. This hook adds the behavior to the returned ref.\n *\n * @return {Object|Function} Element Ref.\n *\n * @example\n * ```js\n * import { useConstrainedTabbing } from '@wordpress/compose';\n *\n * const ConstrainedTabbingExample = () => {\n *     const constrainedTabbingRef = useConstrainedTabbing()\n *     return (\n *         <div ref={ constrainedTabbingRef }>\n *             <Button />\n *             <Button />\n *         </div>\n *     );\n * }\n * ```\n */\nfunction useConstrainedTabbing() {\n\tconst ref = useCallback( ( node ) => {\n\t\tif ( ! node ) {\n\t\t\treturn;\n\t\t}\n\t\tnode.addEventListener( 'keydown', ( event ) => {\n\t\t\tif ( event.keyCode !== TAB ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst tabbables = focus.tabbable.find( node );\n\t\t\tif ( ! tabbables.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst firstTabbable = tabbables[ 0 ];\n\t\t\tconst lastTabbable = tabbables[ tabbables.length - 1 ];\n\n\t\t\tif ( event.shiftKey && event.target === firstTabbable ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tlastTabbable.focus();\n\t\t\t} else if ( ! event.shiftKey && event.target === lastTabbable ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tfirstTabbable.focus();\n\t\t\t\t/*\n\t\t\t\t * When pressing Tab and none of the tabbables has focus, the keydown\n\t\t\t\t * event happens on the wrapper div: move focus on the first tabbable.\n\t\t\t\t */\n\t\t\t} else if ( ! tabbables.includes( event.target ) ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tfirstTabbable.focus();\n\t\t\t}\n\t\t} );\n\t}, [] );\n\n\treturn ref;\n}\n\nexport default useConstrainedTabbing;\n"]}