{"version":3,"sources":["@wordpress/dom/src/dom/get-rectangle-from-range.js"],"names":["getRectangleFromRange","range","collapsed","getBoundingClientRect","startContainer","ownerDocument","nodeName","parentNode","index","Array","from","childNodes","indexOf","createRange","setStart","setEnd","rect","getClientRects","padNode","createTextNode","cloneRange","insertNode","removeChild"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,qBAAT,CAAgCC,KAAhC,EAAwC;AACtD;AACA;AACA;AACA,MAAK,CAAEA,KAAK,CAACC,SAAb,EAAyB;AACxB,WAAOD,KAAK,CAACE,qBAAN,EAAP;AACA;;AANqD,eAQ3BF,KAR2B;AAAA,MAQ9CG,cAR8C,UAQ9CA,cAR8C;AAAA,MAS9CC,aAT8C,GAS5BD,cAT4B,CAS9CC,aAT8C,EAWtD;;AACA,MAAKD,cAAc,CAACE,QAAf,KAA4B,IAAjC,EAAwC;AAAA,QAC/BC,UAD+B,GAChBH,cADgB,CAC/BG,UAD+B;AAEvC,QAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAYH,UAAU,CAACI,UAAvB,EAAoCC,OAApC,CACbR,cADa,CAAd;AAIAH,IAAAA,KAAK,GAAGI,aAAa,CAACQ,WAAd,EAAR;AACAZ,IAAAA,KAAK,CAACa,QAAN,CAAgBP,UAAhB,EAA4BC,KAA5B;AACAP,IAAAA,KAAK,CAACc,MAAN,CAAcR,UAAd,EAA0BC,KAA1B;AACA;;AAED,MAAIQ,IAAI,GAAGf,KAAK,CAACgB,cAAN,GAAwB,CAAxB,CAAX,CAvBsD,CAyBtD;AACA;AACA;AACA;AACA;;AACA,MAAK,CAAED,IAAP,EAAc;AACb,QAAME,OAAO,GAAGb,aAAa,CAACc,cAAd,CAA8B,QAA9B,CAAhB,CADa,CAEb;;AACAlB,IAAAA,KAAK,GAAGA,KAAK,CAACmB,UAAN,EAAR;AACAnB,IAAAA,KAAK,CAACoB,UAAN,CAAkBH,OAAlB;AACAF,IAAAA,IAAI,GAAGf,KAAK,CAACgB,cAAN,GAAwB,CAAxB,CAAP;AACAC,IAAAA,OAAO,CAACX,UAAR,CAAmBe,WAAnB,CAAgCJ,OAAhC;AACA;;AAED,SAAOF,IAAP;AACA","sourcesContent":["/**\n * Get the rectangle of a given Range.\n *\n * @param {Range} range The range.\n *\n * @return {DOMRect} The rectangle.\n */\nexport default function getRectangleFromRange( range ) {\n\t// For uncollapsed ranges, get the rectangle that bounds the contents of the\n\t// range; this a rectangle enclosing the union of the bounding rectangles\n\t// for all the elements in the range.\n\tif ( ! range.collapsed ) {\n\t\treturn range.getBoundingClientRect();\n\t}\n\n\tconst { startContainer } = range;\n\tconst { ownerDocument } = startContainer;\n\n\t// Correct invalid \"BR\" ranges. The cannot contain any children.\n\tif ( startContainer.nodeName === 'BR' ) {\n\t\tconst { parentNode } = startContainer;\n\t\tconst index = Array.from( parentNode.childNodes ).indexOf(\n\t\t\tstartContainer\n\t\t);\n\n\t\trange = ownerDocument.createRange();\n\t\trange.setStart( parentNode, index );\n\t\trange.setEnd( parentNode, index );\n\t}\n\n\tlet rect = range.getClientRects()[ 0 ];\n\n\t// If the collapsed range starts (and therefore ends) at an element node,\n\t// `getClientRects` can be empty in some browsers. This can be resolved\n\t// by adding a temporary text node with zero-width space to the range.\n\t//\n\t// See: https://stackoverflow.com/a/6847328/995445\n\tif ( ! rect ) {\n\t\tconst padNode = ownerDocument.createTextNode( '\\u200b' );\n\t\t// Do not modify the live range.\n\t\trange = range.cloneRange();\n\t\trange.insertNode( padNode );\n\t\trect = range.getClientRects()[ 0 ];\n\t\tpadNode.parentNode.removeChild( padNode );\n\t}\n\n\treturn rect;\n}\n"]}