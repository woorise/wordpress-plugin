/**
 * WordPress dependencies
 */
import { createRegistryControl } from '@wordpress/data';
/**
 * Internal dependencies
 */

import { store as blockEditorStore } from '../store';
export var __unstableMarkAutomaticChangeFinalControl = function __unstableMarkAutomaticChangeFinalControl() {
  return {
    type: 'MARK_AUTOMATIC_CHANGE_FINAL_CONTROL'
  };
};
var controls = {
  SLEEP: function SLEEP(_ref) {
    var duration = _ref.duration;
    return new Promise(function (resolve) {
      setTimeout(resolve, duration);
    });
  },
  MARK_AUTOMATIC_CHANGE_FINAL_CONTROL: createRegistryControl(function (registry) {
    return function () {
      var _window = window,
          _window$requestIdleCa = _window.requestIdleCallback,
          requestIdleCallback = _window$requestIdleCa === void 0 ? function (callback) {
        return setTimeout(callback, 100);
      } : _window$requestIdleCa;
      requestIdleCallback(function () {
        return registry.dispatch(blockEditorStore).__unstableMarkAutomaticChangeFinal();
      });
    };
  })
};
export default controls;
//# sourceMappingURL=controls.js.map