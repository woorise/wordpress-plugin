{"version":3,"sources":["@wordpress/block-editor/src/hooks/text-transform.js"],"names":["hasBlockSupport","TextTransformControl","useEditorFeature","cleanEmptyObject","TEXT_TRANSFORM_SUPPORT_KEY","TextTransformEdit","props","style","attributes","setAttributes","isDisabled","useIsTextTransformDisabled","onChange","newTransform","typography","textTransform","blockName","name","notSupported","hasTextTransforms"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,SAASA,eAAT,QAAgC,mBAAhC;AAEA;AACA;AACA;;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,gBAAT,QAAiC,SAAjC;AAEA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,0BAA0B,GAAG,6BAAnC;AAEP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA4BC,KAA5B,EAAoC;AAAA;;AAAA,MAE3BC,KAF2B,GAItCD,KAJsC,CAEzCE,UAFyC,CAE3BD,KAF2B;AAAA,MAGzCE,aAHyC,GAItCH,KAJsC,CAGzCG,aAHyC;AAK1C,MAAMC,UAAU,GAAGC,0BAA0B,CAAEL,KAAF,CAA7C;;AAEA,MAAKI,UAAL,EAAkB;AACjB,WAAO,IAAP;AACA;;AAED,WAASE,QAAT,CAAmBC,YAAnB,EAAkC;AACjCJ,IAAAA,aAAa,CAAE;AACdF,MAAAA,KAAK,EAAEJ,gBAAgB,iCACnBI,KADmB;AAEtBO,QAAAA,UAAU,kCACNP,KADM,aACNA,KADM,uBACNA,KAAK,CAAEO,UADD;AAETC,UAAAA,aAAa,EAAEF;AAFN;AAFY;AADT,KAAF,CAAb;AASA;;AAED,SACC,cAAC,oBAAD;AACC,IAAA,KAAK,EAAGN,KAAH,aAAGA,KAAH,4CAAGA,KAAK,CAAEO,UAAV,sDAAG,kBAAmBC,aAD5B;AAEC,IAAA,QAAQ,EAAGH;AAFZ,IADD;AAMA;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASD,0BAAT,GAAgE;AAAA,iFAAL,EAAK;AAAA,MAAnBK,SAAmB,QAAzBC,IAAyB;;AACtE,MAAMC,YAAY,GAAG,CAAElB,eAAe,CACrCgB,SADqC,EAErCZ,0BAFqC,CAAtC;AAIA,MAAMe,iBAAiB,GAAGjB,gBAAgB,CACzC,iCADyC,CAA1C;AAGA,SAAOgB,YAAY,IAAI,CAAEC,iBAAzB;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { hasBlockSupport } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport TextTransformControl from '../components/text-transform-control';\nimport useEditorFeature from '../components/use-editor-feature';\nimport { cleanEmptyObject } from './utils';\n\n/**\n * Key within block settings' supports array indicating support for text\n * transforms e.g. settings found in `block.json`.\n */\nexport const TEXT_TRANSFORM_SUPPORT_KEY = '__experimentalTextTransform';\n\n/**\n * Inspector control panel containing the text transform options.\n *\n * @param  {Object} props Block properties.\n * @return {WPElement}    Text transform edit element.\n */\nexport function TextTransformEdit( props ) {\n\tconst {\n\t\tattributes: { style },\n\t\tsetAttributes,\n\t} = props;\n\tconst isDisabled = useIsTextTransformDisabled( props );\n\n\tif ( isDisabled ) {\n\t\treturn null;\n\t}\n\n\tfunction onChange( newTransform ) {\n\t\tsetAttributes( {\n\t\t\tstyle: cleanEmptyObject( {\n\t\t\t\t...style,\n\t\t\t\ttypography: {\n\t\t\t\t\t...style?.typography,\n\t\t\t\t\ttextTransform: newTransform,\n\t\t\t\t},\n\t\t\t} ),\n\t\t} );\n\t}\n\n\treturn (\n\t\t<TextTransformControl\n\t\t\tvalue={ style?.typography?.textTransform }\n\t\t\tonChange={ onChange }\n\t\t/>\n\t);\n}\n\n/**\n * Checks if text-transform settings have been disabled.\n *\n * @param  {string} name Name of the block.\n * @return {boolean}     Whether or not the setting is disabled.\n */\nexport function useIsTextTransformDisabled( { name: blockName } = {} ) {\n\tconst notSupported = ! hasBlockSupport(\n\t\tblockName,\n\t\tTEXT_TRANSFORM_SUPPORT_KEY\n\t);\n\tconst hasTextTransforms = useEditorFeature(\n\t\t'typography.customTextTransforms'\n\t);\n\treturn notSupported || ! hasTextTransforms;\n}\n"]}