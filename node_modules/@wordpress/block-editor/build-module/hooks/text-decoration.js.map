{"version":3,"sources":["@wordpress/block-editor/src/hooks/text-decoration.js"],"names":["hasBlockSupport","TextDecorationControl","useEditorFeature","cleanEmptyObject","TEXT_DECORATION_SUPPORT_KEY","TextDecorationEdit","props","style","attributes","setAttributes","isDisabled","useIsTextDecorationDisabled","onChange","newDecoration","typography","textDecoration","blockName","name","notSupported","hasTextDecoration"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,SAASA,eAAT,QAAgC,mBAAhC;AAEA;AACA;AACA;;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,gBAAT,QAAiC,SAAjC;AAEA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,2BAA2B,GAAG,8BAApC;AAEP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,CAA6BC,KAA7B,EAAqC;AAAA;;AAAA,MAE5BC,KAF4B,GAIvCD,KAJuC,CAE1CE,UAF0C,CAE5BD,KAF4B;AAAA,MAG1CE,aAH0C,GAIvCH,KAJuC,CAG1CG,aAH0C;AAK3C,MAAMC,UAAU,GAAGC,2BAA2B,CAAEL,KAAF,CAA9C;;AAEA,MAAKI,UAAL,EAAkB;AACjB,WAAO,IAAP;AACA;;AAED,WAASE,QAAT,CAAmBC,aAAnB,EAAmC;AAClCJ,IAAAA,aAAa,CAAE;AACdF,MAAAA,KAAK,EAAEJ,gBAAgB,iCACnBI,KADmB;AAEtBO,QAAAA,UAAU,kCACNP,KADM,aACNA,KADM,uBACNA,KAAK,CAAEO,UADD;AAETC,UAAAA,cAAc,EAAEF;AAFP;AAFY;AADT,KAAF,CAAb;AASA;;AAED,SACC,cAAC,qBAAD;AACC,IAAA,KAAK,EAAGN,KAAH,aAAGA,KAAH,4CAAGA,KAAK,CAAEO,UAAV,sDAAG,kBAAmBC,cAD5B;AAEC,IAAA,QAAQ,EAAGH;AAFZ,IADD;AAMA;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASD,2BAAT,GAAiE;AAAA,iFAAL,EAAK;AAAA,MAAnBK,SAAmB,QAAzBC,IAAyB;;AACvE,MAAMC,YAAY,GAAG,CAAElB,eAAe,CACrCgB,SADqC,EAErCZ,2BAFqC,CAAtC;AAIA,MAAMe,iBAAiB,GAAGjB,gBAAgB,CACzC,kCADyC,CAA1C;AAIA,SAAOgB,YAAY,IAAI,CAAEC,iBAAzB;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { hasBlockSupport } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport TextDecorationControl from '../components/text-decoration-control';\nimport useEditorFeature from '../components/use-editor-feature';\nimport { cleanEmptyObject } from './utils';\n\n/**\n * Key within block settings' supports array indicating support for text\n * decorations e.g. settings found in `block.json`.\n */\nexport const TEXT_DECORATION_SUPPORT_KEY = '__experimentalTextDecoration';\n\n/**\n * Inspector control panel containing the text decoration options.\n *\n * @param  {Object} props Block properties.\n * @return {WPElement}    Text decoration edit element.\n */\nexport function TextDecorationEdit( props ) {\n\tconst {\n\t\tattributes: { style },\n\t\tsetAttributes,\n\t} = props;\n\tconst isDisabled = useIsTextDecorationDisabled( props );\n\n\tif ( isDisabled ) {\n\t\treturn null;\n\t}\n\n\tfunction onChange( newDecoration ) {\n\t\tsetAttributes( {\n\t\t\tstyle: cleanEmptyObject( {\n\t\t\t\t...style,\n\t\t\t\ttypography: {\n\t\t\t\t\t...style?.typography,\n\t\t\t\t\ttextDecoration: newDecoration,\n\t\t\t\t},\n\t\t\t} ),\n\t\t} );\n\t}\n\n\treturn (\n\t\t<TextDecorationControl\n\t\t\tvalue={ style?.typography?.textDecoration }\n\t\t\tonChange={ onChange }\n\t\t/>\n\t);\n}\n\n/**\n * Checks if text-decoration settings have been disabled.\n *\n * @param  {string} name Name of the block.\n * @return {boolean}     Whether or not the setting is disabled.\n */\nexport function useIsTextDecorationDisabled( { name: blockName } = {} ) {\n\tconst notSupported = ! hasBlockSupport(\n\t\tblockName,\n\t\tTEXT_DECORATION_SUPPORT_KEY\n\t);\n\tconst hasTextDecoration = useEditorFeature(\n\t\t'typography.customTextDecorations'\n\t);\n\n\treturn notSupported || ! hasTextDecoration;\n}\n"]}