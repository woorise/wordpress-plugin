import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { getBlockSupport } from '@wordpress/blocks';
import { PanelBody } from '@wordpress/components';
import { Platform } from '@wordpress/element';
import { __ } from '@wordpress/i18n';
/**
 * Internal dependencies
 */

import InspectorControls from '../components/inspector-controls';
import { BorderRadiusEdit, useIsBorderRadiusDisabled } from './border-radius';
export var BORDER_SUPPORT_KEY = '__experimentalBorder';
export function BorderPanel(props) {
  var isDisabled = useIsBorderDisabled(props);
  var isSupported = hasBorderSupport(props.name);

  if (isDisabled || !isSupported) {
    return null;
  }

  return createElement(InspectorControls, null, createElement(PanelBody, {
    title: __('Border settings')
  }, createElement(BorderRadiusEdit, props)));
}
/**
 * Determine whether there is block support for borders.
 *
 * @param {string} blockName Block name.
 * @return {boolean}         Whether there is support.
 */

export function hasBorderSupport(blockName) {
  if (Platform.OS !== 'web') {
    return false;
  }

  var support = getBlockSupport(blockName, BORDER_SUPPORT_KEY); // Further border properties to be added in future iterations.
  // e.g. support && ( support.radius || support.width || support.style )

  return !!(true === support || support !== null && support !== void 0 && support.radius);
}
/**
 * Determines whether there is any block support for borders e.g. border radius,
 * style, width etc.
 *
 * @param  {Object} props Block properties.
 * @return {boolean}      If border support is completely disabled.
 */

var useIsBorderDisabled = function useIsBorderDisabled() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  // Further border properties to be added in future iterations.
  // e.g. const configs = [
  // 		useIsBorderRadiusDisabled( props ),
  //		useIsBorderWidthDisabled( props ),
  // ];
  var configs = [useIsBorderRadiusDisabled(props)];
  return configs.every(Boolean);
};
//# sourceMappingURL=border.js.map