{"version":3,"sources":["@wordpress/block-editor/src/components/block-toolbar/index.native.js"],"names":["useSelect","BlockControls","UngroupButton","store","blockEditorStore","BlockToolbar","select","getBlockMode","getSelectedBlockClientIds","isBlockValid","selectedBlockClientIds","blockClientIds","isValid","length","mode"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,aAA1C;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA,mBACIL,SAAS,CAAE,UAAEM,MAAF,EAAc;AAAA,kBAK9DA,MAAM,CAAEF,gBAAF,CALwD;AAAA,QAEjEG,YAFiE,WAEjEA,YAFiE;AAAA,QAGjEC,yBAHiE,WAGjEA,yBAHiE;AAAA,QAIjEC,YAJiE,WAIjEA,YAJiE;;AAMlE,QAAMC,sBAAsB,GAAGF,yBAAyB,EAAxD;AAEA,WAAO;AACNG,MAAAA,cAAc,EAAED,sBADV;AAENE,MAAAA,OAAO,EACNF,sBAAsB,CAACG,MAAvB,KAAkC,CAAlC,GACGJ,YAAY,CAAEC,sBAAsB,CAAE,CAAF,CAAxB,CADf,GAEG,IALE;AAMNI,MAAAA,IAAI,EACHJ,sBAAsB,CAACG,MAAvB,KAAkC,CAAlC,GACGN,YAAY,CAAEG,sBAAsB,CAAE,CAAF,CAAxB,CADf,GAEG;AATE,KAAP;AAWA,GAnBkD,EAmBhD,EAnBgD,CADb;AAAA,MAC9BC,cAD8B,cAC9BA,cAD8B;AAAA,MACdC,OADc,cACdA,OADc;AAAA,MACLE,IADK,cACLA,IADK;;AAsBtC,MAAKH,cAAc,CAACE,MAAf,KAA0B,CAA/B,EAAmC;AAClC,WAAO,IAAP;AACA;;AAED,SACC,8BACGC,IAAI,KAAK,QAAT,IAAqBF,OAArB,IACD,8BACC,cAAC,aAAD,OADD,EAEC,cAAC,aAAD,CAAe,IAAf;AAAoB,IAAA,KAAK,EAAC;AAA1B,IAFD,EAGC,cAAC,aAAD,CAAe,IAAf,OAHD,EAIC,cAAC,aAAD,CAAe,IAAf;AAAoB,IAAA,KAAK,EAAC;AAA1B,IAJD,EAKC,cAAC,aAAD,CAAe,IAAf;AAAoB,IAAA,KAAK,EAAC;AAA1B,IALD,CAFF,CADD;AAaA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport BlockControls from '../block-controls';\nimport UngroupButton from '../ungroup-button';\nimport { store as blockEditorStore } from '../../store';\n\nexport default function BlockToolbar() {\n\tconst { blockClientIds, isValid, mode } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetBlockMode,\n\t\t\tgetSelectedBlockClientIds,\n\t\t\tisBlockValid,\n\t\t} = select( blockEditorStore );\n\t\tconst selectedBlockClientIds = getSelectedBlockClientIds();\n\n\t\treturn {\n\t\t\tblockClientIds: selectedBlockClientIds,\n\t\t\tisValid:\n\t\t\t\tselectedBlockClientIds.length === 1\n\t\t\t\t\t? isBlockValid( selectedBlockClientIds[ 0 ] )\n\t\t\t\t\t: null,\n\t\t\tmode:\n\t\t\t\tselectedBlockClientIds.length === 1\n\t\t\t\t\t? getBlockMode( selectedBlockClientIds[ 0 ] )\n\t\t\t\t\t: null,\n\t\t};\n\t}, [] );\n\n\tif ( blockClientIds.length === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ mode === 'visual' && isValid && (\n\t\t\t\t<>\n\t\t\t\t\t<UngroupButton />\n\t\t\t\t\t<BlockControls.Slot group=\"block\" />\n\t\t\t\t\t<BlockControls.Slot />\n\t\t\t\t\t<BlockControls.Slot group=\"inline\" />\n\t\t\t\t\t<BlockControls.Slot group=\"other\" />\n\t\t\t\t</>\n\t\t\t) }\n\t\t</>\n\t);\n}\n"]}