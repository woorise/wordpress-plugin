import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { getBlockMenuDefaultClassName } from '@wordpress/blocks';
/**
 * Internal dependencies
 */

import InserterListItem from '../inserter-list-item';
import { InserterListboxGroup, InserterListboxRow } from '../inserter-listbox';

function chunk(array, size) {
  var chunks = [];

  for (var i = 0, j = array.length; i < j; i += size) {
    chunks.push(array.slice(i, i + size));
  }

  return chunks;
}

function BlockTypesList(_ref) {
  var _ref$items = _ref.items,
      items = _ref$items === void 0 ? [] : _ref$items,
      onSelect = _ref.onSelect,
      _ref$onHover = _ref.onHover,
      onHover = _ref$onHover === void 0 ? function () {} : _ref$onHover,
      children = _ref.children,
      label = _ref.label,
      _ref$isDraggable = _ref.isDraggable,
      isDraggable = _ref$isDraggable === void 0 ? true : _ref$isDraggable;
  return createElement(InserterListboxGroup, {
    className: "block-editor-block-types-list",
    "aria-label": label
  }, chunk(items, 3).map(function (row, i) {
    return createElement(InserterListboxRow, {
      key: i
    }, row.map(function (item, j) {
      return createElement(InserterListItem, {
        key: item.id,
        item: item,
        className: getBlockMenuDefaultClassName(item.id),
        onSelect: onSelect,
        onHover: onHover,
        isDraggable: isDraggable,
        isFirst: i === 0 && j === 0
      });
    }));
  }), children);
}

export default BlockTypesList;
//# sourceMappingURL=index.js.map