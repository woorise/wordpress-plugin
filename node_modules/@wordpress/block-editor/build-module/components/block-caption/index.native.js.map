{"version":3,"sources":["@wordpress/block-editor/src/components/block-caption/index.native.js"],"names":["View","Caption","RichText","compose","withDispatch","withSelect","styles","store","blockEditorStore","BlockCaption","accessible","accessibilityLabelCreator","onBlur","onChange","onFocus","isSelected","shouldDisplay","text","insertBlocksAfter","container","padding","select","clientId","getBlockAttributes","getSelectedBlockClientId","caption","isBlockSelected","isEmpty","dispatch","updateBlockAttributes"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,IAAT,QAAqB,cAArB;AAEA;AACA;AACA;;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,yBAAlC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,iBAAzC;AAEA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,aAA1C;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MACpBC,UADoB,QACpBA,UADoB;AAAA,MAEpBC,yBAFoB,QAEpBA,yBAFoB;AAAA,MAGpBC,MAHoB,QAGpBA,MAHoB;AAAA,MAIpBC,QAJoB,QAIpBA,QAJoB;AAAA,MAKpBC,OALoB,QAKpBA,OALoB;AAAA,MAMpBC,UANoB,QAMpBA,UANoB;AAAA,MAOpBC,aAPoB,QAOpBA,aAPoB;AAAA,MAQpBC,IARoB,QAQpBA,IARoB;AAAA,MASpBC,iBAToB,QASpBA,iBAToB;AAAA,SAWpB,cAAC,IAAD;AAAM,IAAA,KAAK,EAAG,CAAEZ,MAAM,CAACa,SAAT,EAAoBH,aAAa,IAAIV,MAAM,CAACc,OAA5C;AAAd,KACC,cAAC,OAAD;AACC,IAAA,yBAAyB,EAAGT,yBAD7B;AAEC,IAAA,UAAU,EAAGD,UAFd;AAGC,IAAA,UAAU,EAAGK,UAHd;AAIC,IAAA,MAAM,EAAGH,MAJV;AAKC,IAAA,QAAQ,EAAGC,QALZ;AAMC,IAAA,OAAO,EAAGC,OANX;AAOC,IAAA,aAAa,EAAGE,aAPjB;AAQC,IAAA,KAAK,EAAGC,IART;AASC,IAAA,iBAAiB,EAAGC;AATrB,IADD,CAXoB;AAAA,CAArB;;AA0BA,eAAef,OAAO,CAAE,CACvBE,UAAU,CAAE,UAAEgB,MAAF,SAA4B;AAAA,MAAhBC,QAAgB,SAAhBA,QAAgB;;AAAA,gBACkBD,MAAM,CAC9Db,gBAD8D,CADxB;AAAA,MAC/Be,kBAD+B,WAC/BA,kBAD+B;AAAA,MACXC,wBADW,WACXA,wBADW;;AAAA,cAInBD,kBAAkB,CAAED,QAAF,CAAlB,IAAkC,EAJf;AAAA,MAI/BG,OAJ+B,SAI/BA,OAJ+B;;AAKvC,MAAMC,eAAe,GAAGF,wBAAwB,OAAOF,QAAvD,CALuC,CAOvC;AACA;;AACA,MAAMN,aAAa,GAClB,CAAEd,QAAQ,CAACyB,OAAT,CAAkBF,OAAlB,CAAF,GAAgC,CAAhC,IAAqCC,eADtC;AAGA,SAAO;AACNV,IAAAA,aAAa,EAAbA,aADM;AAENC,IAAAA,IAAI,EAAEQ;AAFA,GAAP;AAIA,CAhBS,CADa,EAkBvBrB,YAAY,CAAE,UAAEwB,QAAF,SAA8B;AAAA,MAAhBN,QAAgB,SAAhBA,QAAgB;;AAAA,kBACTM,QAAQ,CAAEpB,gBAAF,CADC;AAAA,MACnCqB,qBADmC,aACnCA,qBADmC;;AAE3C,SAAO;AACNhB,IAAAA,QAAQ,EAAE,kBAAEY,OAAF,EAAe;AACxBI,MAAAA,qBAAqB,CAAEP,QAAF,EAAY;AAAEG,QAAAA,OAAO,EAAPA;AAAF,OAAZ,CAArB;AACA;AAHK,GAAP;AAKA,CAPW,CAlBW,CAAF,CAAP,CA0BVhB,YA1BU,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Caption, RichText } from '@wordpress/block-editor';\nimport { compose } from '@wordpress/compose';\nimport { withDispatch, withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport styles from './styles.scss';\nimport { store as blockEditorStore } from '../../store';\n\nconst BlockCaption = ( {\n\taccessible,\n\taccessibilityLabelCreator,\n\tonBlur,\n\tonChange,\n\tonFocus,\n\tisSelected,\n\tshouldDisplay,\n\ttext,\n\tinsertBlocksAfter,\n} ) => (\n\t<View style={ [ styles.container, shouldDisplay && styles.padding ] }>\n\t\t<Caption\n\t\t\taccessibilityLabelCreator={ accessibilityLabelCreator }\n\t\t\taccessible={ accessible }\n\t\t\tisSelected={ isSelected }\n\t\t\tonBlur={ onBlur }\n\t\t\tonChange={ onChange }\n\t\t\tonFocus={ onFocus }\n\t\t\tshouldDisplay={ shouldDisplay }\n\t\t\tvalue={ text }\n\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t/>\n\t</View>\n);\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst { getBlockAttributes, getSelectedBlockClientId } = select(\n\t\t\tblockEditorStore\n\t\t);\n\t\tconst { caption } = getBlockAttributes( clientId ) || {};\n\t\tconst isBlockSelected = getSelectedBlockClientId() === clientId;\n\n\t\t// We'll render the caption so that the soft keyboard is not forced to close on Android\n\t\t// but still hide it by setting its display style to none. See wordpress-mobile/gutenberg-mobile#1221\n\t\tconst shouldDisplay =\n\t\t\t! RichText.isEmpty( caption ) > 0 || isBlockSelected;\n\n\t\treturn {\n\t\t\tshouldDisplay,\n\t\t\ttext: caption,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { clientId } ) => {\n\t\tconst { updateBlockAttributes } = dispatch( blockEditorStore );\n\t\treturn {\n\t\t\tonChange: ( caption ) => {\n\t\t\t\tupdateBlockAttributes( clientId, { caption } );\n\t\t\t},\n\t\t};\n\t} ),\n] )( BlockCaption );\n"]}