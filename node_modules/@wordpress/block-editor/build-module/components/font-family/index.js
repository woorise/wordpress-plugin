import _extends from "@babel/runtime/helpers/esm/extends";
import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { isEmpty } from 'lodash';
/**
 * WordPress dependencies
 */

import { SelectControl } from '@wordpress/components';
import { __ } from '@wordpress/i18n';
/**
 * Internal dependencies
 */

import useEditorFeature from '../use-editor-feature';
export default function FontFamilyControl(_ref) {
  var _ref$value = _ref.value,
      value = _ref$value === void 0 ? '' : _ref$value,
      onChange = _ref.onChange,
      fontFamilies = _ref.fontFamilies,
      props = _objectWithoutProperties(_ref, ["value", "onChange", "fontFamilies"]);

  var blockLevelFontFamilies = useEditorFeature('typography.fontFamilies');

  if (!fontFamilies) {
    fontFamilies = blockLevelFontFamilies;
  }

  if (isEmpty(fontFamilies)) {
    return null;
  }

  var options = [{
    value: '',
    label: __('Default')
  }].concat(_toConsumableArray(fontFamilies.map(function (_ref2) {
    var fontFamily = _ref2.fontFamily,
        name = _ref2.name;
    return {
      value: fontFamily,
      label: name || fontFamily
    };
  })));
  return createElement(SelectControl, _extends({
    label: __('Font family'),
    options: options,
    value: value,
    onChange: onChange,
    labelPosition: "top"
  }, props));
}
//# sourceMappingURL=index.js.map