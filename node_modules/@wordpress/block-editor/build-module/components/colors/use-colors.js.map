{"version":3,"sources":["@wordpress/block-editor/src/components/colors/use-colors.js"],"names":["memoize","classnames","kebabCase","camelCase","castArray","startCase","isFunction","__","useSelect","useDispatch","useCallback","useMemo","useEffect","Children","cloneElement","useState","InspectorControls","useBlockEditContext","ColorPanel","useEditorFeature","store","blockEditorStore","getComputedStyle","node","ownerDocument","defaultView","DEFAULT_COLORS","COMMON_COLOR_LABELS","textColor","backgroundColor","InspectorControlsColorPanel","props","__experimentalUseColors","colorConfigs","panelTitle","colorPanelProps","contrastCheckers","panelChildren","colorDetector","targetRef","backgroundColorTargetRef","textColorTargetRef","deps","clientId","settingsColors","select","getBlockAttributes","attributes","updateBlockAttributes","setAttributes","newAttributes","createComponent","name","property","className","color","colorValue","customColor","children","componentClassName","style","componentStyle","colorStyle","extraProps","map","child","maxSize","length","createSetColor","colors","newColor","find","_color","undefined","slug","detectedBackgroundColor","setDetectedBackgroundColor","detectedColor","setDetectedColor","needsBackgroundColor","needsColor","current","backgroundColorNode","parentNode","nodeType","ELEMENT_NODE","reduce","acc","colorConfig","colorSettings","components","panelLabel","label","componentName","replace","__color","displayName","setColor","value","onChange","wrappedColorPanelProps","title","initialOpen"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport classnames from 'classnames';\nimport { kebabCase, camelCase, castArray, startCase, isFunction } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tuseCallback,\n\tuseMemo,\n\tuseEffect,\n\tChildren,\n\tcloneElement,\n\tuseState,\n} from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport InspectorControls from '../inspector-controls';\nimport { useBlockEditContext } from '../block-edit';\nimport ColorPanel from './color-panel';\nimport useEditorFeature from '../use-editor-feature';\nimport { store as blockEditorStore } from '../../store';\n\nfunction getComputedStyle( node ) {\n\treturn node.ownerDocument.defaultView.getComputedStyle( node );\n}\n\nconst DEFAULT_COLORS = [];\n\nconst COMMON_COLOR_LABELS = {\n\ttextColor: __( 'Text Color' ),\n\tbackgroundColor: __( 'Background Color' ),\n};\n\nconst InspectorControlsColorPanel = ( props ) => (\n\t<InspectorControls>\n\t\t<ColorPanel { ...props } />\n\t</InspectorControls>\n);\n\nexport default function __experimentalUseColors(\n\tcolorConfigs,\n\t{\n\t\tpanelTitle = __( 'Color settings' ),\n\t\tcolorPanelProps,\n\t\tcontrastCheckers,\n\t\tpanelChildren,\n\t\tcolorDetector: {\n\t\t\ttargetRef,\n\t\t\tbackgroundColorTargetRef = targetRef,\n\t\t\ttextColorTargetRef = targetRef,\n\t\t} = {},\n\t} = {\n\t\tpanelTitle: __( 'Color settings' ),\n\t},\n\tdeps = []\n) {\n\tconst { clientId } = useBlockEditContext();\n\tconst settingsColors =\n\t\tuseEditorFeature( 'color.palette' ) || DEFAULT_COLORS;\n\tconst { attributes } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockAttributes } = select( blockEditorStore );\n\t\t\treturn {\n\t\t\t\tattributes: getBlockAttributes( clientId ),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\tconst setAttributes = useCallback(\n\t\t( newAttributes ) => updateBlockAttributes( clientId, newAttributes ),\n\t\t[ updateBlockAttributes, clientId ]\n\t);\n\n\tconst createComponent = useMemo(\n\t\t() =>\n\t\t\tmemoize(\n\t\t\t\t(\n\t\t\t\t\tname,\n\t\t\t\t\tproperty,\n\t\t\t\t\tclassName,\n\t\t\t\t\tcolor,\n\t\t\t\t\tcolorValue,\n\t\t\t\t\tcustomColor\n\t\t\t\t) => ( {\n\t\t\t\t\tchildren,\n\t\t\t\t\tclassName: componentClassName = '',\n\t\t\t\t\tstyle: componentStyle = {},\n\t\t\t\t} ) => {\n\t\t\t\t\tlet colorStyle = {};\n\t\t\t\t\tif ( color ) {\n\t\t\t\t\t\tcolorStyle = { [ property ]: colorValue };\n\t\t\t\t\t} else if ( customColor ) {\n\t\t\t\t\t\tcolorStyle = { [ property ]: customColor };\n\t\t\t\t\t}\n\t\t\t\t\tconst extraProps = {\n\t\t\t\t\t\tclassName: classnames( componentClassName, {\n\t\t\t\t\t\t\t[ `has-${ kebabCase( color ) }-${ kebabCase(\n\t\t\t\t\t\t\t\tproperty\n\t\t\t\t\t\t\t) }` ]: color,\n\t\t\t\t\t\t\t[ className || `has-${ kebabCase( name ) }` ]:\n\t\t\t\t\t\t\t\tcolor || customColor,\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t...colorStyle,\n\t\t\t\t\t\t\t...componentStyle,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( isFunction( children ) ) {\n\t\t\t\t\t\treturn children( extraProps );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t// Clone children, setting the style property from the color configuration,\n\t\t\t\t\t\t// if not already set explicitly through props.\n\t\t\t\t\t\tChildren.map( children, ( child ) => {\n\t\t\t\t\t\t\treturn cloneElement( child, {\n\t\t\t\t\t\t\t\tclassName: classnames(\n\t\t\t\t\t\t\t\t\tchild.props.className,\n\t\t\t\t\t\t\t\t\textraProps.className\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t...extraProps.style,\n\t\t\t\t\t\t\t\t\t...( child.props.style || {} ),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\t{ maxSize: colorConfigs.length }\n\t\t\t),\n\t\t[ colorConfigs.length ]\n\t);\n\tconst createSetColor = useMemo(\n\t\t() =>\n\t\t\tmemoize(\n\t\t\t\t( name, colors ) => ( newColor ) => {\n\t\t\t\t\tconst color = colors.find(\n\t\t\t\t\t\t( _color ) => _color.color === newColor\n\t\t\t\t\t);\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t[ color\n\t\t\t\t\t\t\t? camelCase( `custom ${ name }` )\n\t\t\t\t\t\t\t: name ]: undefined,\n\t\t\t\t\t} );\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t[ color\n\t\t\t\t\t\t\t? name\n\t\t\t\t\t\t\t: camelCase( `custom ${ name }` ) ]: color\n\t\t\t\t\t\t\t? color.slug\n\t\t\t\t\t\t\t: newColor,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmaxSize: colorConfigs.length,\n\t\t\t\t}\n\t\t\t),\n\t\t[ setAttributes, colorConfigs.length ]\n\t);\n\n\tconst [ detectedBackgroundColor, setDetectedBackgroundColor ] = useState();\n\tconst [ detectedColor, setDetectedColor ] = useState();\n\n\tuseEffect( () => {\n\t\tif ( ! contrastCheckers ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet needsBackgroundColor = false;\n\t\tlet needsColor = false;\n\t\tfor ( const { backgroundColor, textColor } of castArray(\n\t\t\tcontrastCheckers\n\t\t) ) {\n\t\t\tif ( ! needsBackgroundColor ) {\n\t\t\t\tneedsBackgroundColor = backgroundColor === true;\n\t\t\t}\n\t\t\tif ( ! needsColor ) {\n\t\t\t\tneedsColor = textColor === true;\n\t\t\t}\n\t\t\tif ( needsBackgroundColor && needsColor ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( needsColor ) {\n\t\t\tsetDetectedColor(\n\t\t\t\tgetComputedStyle( textColorTargetRef.current ).color\n\t\t\t);\n\t\t}\n\n\t\tif ( needsBackgroundColor ) {\n\t\t\tlet backgroundColorNode = backgroundColorTargetRef.current;\n\t\t\tlet backgroundColor = getComputedStyle( backgroundColorNode )\n\t\t\t\t.backgroundColor;\n\t\t\twhile (\n\t\t\t\tbackgroundColor === 'rgba(0, 0, 0, 0)' &&\n\t\t\t\tbackgroundColorNode.parentNode &&\n\t\t\t\tbackgroundColorNode.parentNode.nodeType ===\n\t\t\t\t\tbackgroundColorNode.parentNode.ELEMENT_NODE\n\t\t\t) {\n\t\t\t\tbackgroundColorNode = backgroundColorNode.parentNode;\n\t\t\t\tbackgroundColor = getComputedStyle( backgroundColorNode )\n\t\t\t\t\t.backgroundColor;\n\t\t\t}\n\n\t\t\tsetDetectedBackgroundColor( backgroundColor );\n\t\t}\n\t}, [\n\t\tcolorConfigs.reduce(\n\t\t\t( acc, colorConfig ) =>\n\t\t\t\t`${ acc } | ${ attributes[ colorConfig.name ] } | ${\n\t\t\t\t\tattributes[ camelCase( `custom ${ colorConfig.name }` ) ]\n\t\t\t\t}`,\n\t\t\t''\n\t\t),\n\t\t...deps,\n\t] );\n\n\treturn useMemo( () => {\n\t\tconst colorSettings = {};\n\n\t\tconst components = colorConfigs.reduce( ( acc, colorConfig ) => {\n\t\t\tif ( typeof colorConfig === 'string' ) {\n\t\t\t\tcolorConfig = { name: colorConfig };\n\t\t\t}\n\t\t\tconst {\n\t\t\t\tname, // E.g. 'backgroundColor'.\n\t\t\t\tproperty = name, // E.g. 'backgroundColor'.\n\t\t\t\tclassName,\n\n\t\t\t\tpanelLabel = colorConfig.label ||\n\t\t\t\t\tCOMMON_COLOR_LABELS[ name ] ||\n\t\t\t\t\tstartCase( name ), // E.g. 'Background color'.\n\t\t\t\tcomponentName = startCase( name ).replace( /\\s/g, '' ), // E.g. 'BackgroundColor'.\n\n\t\t\t\tcolor = colorConfig.color,\n\t\t\t\tcolors = settingsColors,\n\t\t\t} = {\n\t\t\t\t...colorConfig,\n\t\t\t\tcolor: attributes[ colorConfig.name ],\n\t\t\t};\n\n\t\t\tconst customColor = attributes[ camelCase( `custom ${ name }` ) ];\n\t\t\t// We memoize the non-primitives to avoid unnecessary updates\n\t\t\t// when they are used as props for other components.\n\t\t\tconst _color = customColor\n\t\t\t\t? undefined\n\t\t\t\t: colors.find( ( __color ) => __color.slug === color );\n\t\t\tacc[ componentName ] = createComponent(\n\t\t\t\tname,\n\t\t\t\tproperty,\n\t\t\t\tclassName,\n\t\t\t\tcolor,\n\t\t\t\t_color && _color.color,\n\t\t\t\tcustomColor\n\t\t\t);\n\t\t\tacc[ componentName ].displayName = componentName;\n\t\t\tacc[ componentName ].color = customColor\n\t\t\t\t? customColor\n\t\t\t\t: _color && _color.color;\n\t\t\tacc[ componentName ].slug = color;\n\t\t\tacc[ componentName ].setColor = createSetColor( name, colors );\n\n\t\t\tcolorSettings[ componentName ] = {\n\t\t\t\tvalue: _color\n\t\t\t\t\t? _color.color\n\t\t\t\t\t: attributes[ camelCase( `custom ${ name }` ) ],\n\t\t\t\tonChange: acc[ componentName ].setColor,\n\t\t\t\tlabel: panelLabel,\n\t\t\t\tcolors,\n\t\t\t};\n\t\t\t// These settings will be spread over the `colors` in\n\t\t\t// `colorPanelProps`, so we need to unset the key here,\n\t\t\t// if not set to an actual value, to avoid overwriting\n\t\t\t// an actual value in `colorPanelProps`.\n\t\t\tif ( ! colors ) {\n\t\t\t\tdelete colorSettings[ componentName ].colors;\n\t\t\t}\n\n\t\t\treturn acc;\n\t\t}, {} );\n\n\t\tconst wrappedColorPanelProps = {\n\t\t\ttitle: panelTitle,\n\t\t\tinitialOpen: false,\n\t\t\tcolorSettings,\n\t\t\tcolorPanelProps,\n\t\t\tcontrastCheckers,\n\t\t\tdetectedBackgroundColor,\n\t\t\tdetectedColor,\n\t\t\tpanelChildren,\n\t\t};\n\t\treturn {\n\t\t\t...components,\n\t\t\tColorPanel: <ColorPanel { ...wrappedColorPanelProps } />,\n\t\t\tInspectorControlsColorPanel: (\n\t\t\t\t<InspectorControlsColorPanel { ...wrappedColorPanelProps } />\n\t\t\t),\n\t\t};\n\t}, [\n\t\tattributes,\n\t\tsetAttributes,\n\t\tdetectedColor,\n\t\tdetectedBackgroundColor,\n\t\t...deps,\n\t] );\n}\n"]}