{"version":3,"sources":["@wordpress/block-editor/src/components/colors/color-panel.js"],"names":["map","PanelColorSettings","ContrastChecker","resolveContrastCheckerColor","color","colorSettings","detectedColor","ColorPanel","title","colorPanelProps","contrastCheckers","detectedBackgroundColor","panelChildren","initialOpen","Object","values","Array","isArray","backgroundColor","textColor","rest","value"],"mappings":";;;;AAAA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,QAApB;AAEA;AACA;AACA;;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA,OAAOC,eAAP,MAA4B,qBAA5B;;AAEA,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAEC,KAAF,EAASC,aAAT,EAAwBC,aAAxB,EAA2C;AAC9E,MAAK,OAAOF,KAAP,KAAiB,UAAtB,EAAmC;AAClC,WAAOA,KAAK,CAAEC,aAAF,CAAZ;AACA,GAFD,MAEO,IAAKD,KAAK,KAAK,IAAf,EAAsB;AAC5B,WAAOE,aAAP;AACA;;AACD,SAAOF,KAAP;AACA,CAPD;;AASA,eAAe,SAASG,UAAT,OASX;AAAA,MARHC,KAQG,QARHA,KAQG;AAAA,MAPHH,aAOG,QAPHA,aAOG;AAAA,MANHI,eAMG,QANHA,eAMG;AAAA,MALHC,gBAKG,QALHA,gBAKG;AAAA,MAJHC,uBAIG,QAJHA,uBAIG;AAAA,MAHHL,aAGG,QAHHA,aAGG;AAAA,MAFHM,aAEG,QAFHA,aAEG;AAAA,MADHC,WACG,QADHA,WACG;AACH,SACC,cAAC,kBAAD;AACC,IAAA,KAAK,EAAGL,KADT;AAEC,IAAA,WAAW,EAAGK,WAFf;AAGC,IAAA,aAAa,EAAGC,MAAM,CAACC,MAAP,CAAeV,aAAf;AAHjB,KAIMI,eAJN,GAMGC,gBAAgB,KACfM,KAAK,CAACC,OAAN,CAAeP,gBAAf,IACCA,gBAAgB,CAACV,GAAjB,CACA,iBAA+C;AAAA,QAA3CkB,eAA2C,SAA3CA,eAA2C;AAAA,QAA1BC,SAA0B,SAA1BA,SAA0B;AAAA,QAAZC,IAAY;;AAC9CF,IAAAA,eAAe,GAAGf,2BAA2B,CAC5Ce,eAD4C,EAE5Cb,aAF4C,EAG5CM,uBAH4C,CAA7C;AAKAQ,IAAAA,SAAS,GAAGhB,2BAA2B,CACtCgB,SADsC,EAEtCd,aAFsC,EAGtCC,aAHsC,CAAvC;AAKA,WACC,cAAC,eAAD;AACC,MAAA,GAAG,YAAOY,eAAP,cAA4BC,SAA5B,CADJ;AAEC,MAAA,eAAe,EAAGD,eAFnB;AAGC,MAAA,SAAS,EAAGC;AAHb,OAIMC,IAJN,EADD;AAQA,GApBD,CADD,GAuBCpB,GAAG,CAAEK,aAAF,EAAiB,iBAAiB;AAAA,QAAbgB,KAAa,SAAbA,KAAa;AAAA,QAEpCH,eAFoC,GAIjCR,gBAJiC,CAEpCQ,eAFoC;AAAA,QAGpCC,SAHoC,GAIjCT,gBAJiC,CAGpCS,SAHoC;AAKrCD,IAAAA,eAAe,GAAGf,2BAA2B,CAC5Ce,eAAe,IAAIG,KADyB,EAE5ChB,aAF4C,EAG5CM,uBAH4C,CAA7C;AAKAQ,IAAAA,SAAS,GAAGhB,2BAA2B,CACtCgB,SAAS,IAAIE,KADyB,EAEtChB,aAFsC,EAGtCC,aAHsC,CAAvC;AAKA,WACC,cAAC,eAAD,eACMI,gBADN;AAEC,MAAA,GAAG,YAAOQ,eAAP,cAA4BC,SAA5B,CAFJ;AAGC,MAAA,eAAe,EAAGD,eAHnB;AAIC,MAAA,SAAS,EAAGC;AAJb,OADD;AAQC,GAvBE,CAxBW,CANnB,EAsDG,OAAOP,aAAP,KAAyB,UAAzB,GACCA,aAAa,CAAEP,aAAF,CADd,GAECO,aAxDJ,CADD;AA4DA","sourcesContent":["/**\n * External dependencies\n */\nimport { map } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport PanelColorSettings from '../panel-color-settings';\nimport ContrastChecker from '../contrast-checker';\n\nconst resolveContrastCheckerColor = ( color, colorSettings, detectedColor ) => {\n\tif ( typeof color === 'function' ) {\n\t\treturn color( colorSettings );\n\t} else if ( color === true ) {\n\t\treturn detectedColor;\n\t}\n\treturn color;\n};\n\nexport default function ColorPanel( {\n\ttitle,\n\tcolorSettings,\n\tcolorPanelProps,\n\tcontrastCheckers,\n\tdetectedBackgroundColor,\n\tdetectedColor,\n\tpanelChildren,\n\tinitialOpen,\n} ) {\n\treturn (\n\t\t<PanelColorSettings\n\t\t\ttitle={ title }\n\t\t\tinitialOpen={ initialOpen }\n\t\t\tcolorSettings={ Object.values( colorSettings ) }\n\t\t\t{ ...colorPanelProps }\n\t\t>\n\t\t\t{ contrastCheckers &&\n\t\t\t\t( Array.isArray( contrastCheckers )\n\t\t\t\t\t? contrastCheckers.map(\n\t\t\t\t\t\t\t( { backgroundColor, textColor, ...rest } ) => {\n\t\t\t\t\t\t\t\tbackgroundColor = resolveContrastCheckerColor(\n\t\t\t\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\t\t\t\tcolorSettings,\n\t\t\t\t\t\t\t\t\tdetectedBackgroundColor\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\ttextColor = resolveContrastCheckerColor(\n\t\t\t\t\t\t\t\t\ttextColor,\n\t\t\t\t\t\t\t\t\tcolorSettings,\n\t\t\t\t\t\t\t\t\tdetectedColor\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ContrastChecker\n\t\t\t\t\t\t\t\t\t\tkey={ `${ backgroundColor }-${ textColor }` }\n\t\t\t\t\t\t\t\t\t\tbackgroundColor={ backgroundColor }\n\t\t\t\t\t\t\t\t\t\ttextColor={ textColor }\n\t\t\t\t\t\t\t\t\t\t{ ...rest }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t  )\n\t\t\t\t\t: map( colorSettings, ( { value } ) => {\n\t\t\t\t\t\t\tlet {\n\t\t\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\t\t\ttextColor,\n\t\t\t\t\t\t\t} = contrastCheckers;\n\t\t\t\t\t\t\tbackgroundColor = resolveContrastCheckerColor(\n\t\t\t\t\t\t\t\tbackgroundColor || value,\n\t\t\t\t\t\t\t\tcolorSettings,\n\t\t\t\t\t\t\t\tdetectedBackgroundColor\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttextColor = resolveContrastCheckerColor(\n\t\t\t\t\t\t\t\ttextColor || value,\n\t\t\t\t\t\t\t\tcolorSettings,\n\t\t\t\t\t\t\t\tdetectedColor\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ContrastChecker\n\t\t\t\t\t\t\t\t\t{ ...contrastCheckers }\n\t\t\t\t\t\t\t\t\tkey={ `${ backgroundColor }-${ textColor }` }\n\t\t\t\t\t\t\t\t\tbackgroundColor={ backgroundColor }\n\t\t\t\t\t\t\t\t\ttextColor={ textColor }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t  } ) ) }\n\t\t\t{ typeof panelChildren === 'function'\n\t\t\t\t? panelChildren( colorSettings )\n\t\t\t\t: panelChildren }\n\t\t</PanelColorSettings>\n\t);\n}\n"]}