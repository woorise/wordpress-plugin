{"version":3,"sources":["@wordpress/block-editor/src/components/colors/with-colors.js"],"names":["isString","kebabCase","reduce","upperFirst","Component","compose","createHigherOrderComponent","getColorClassName","getColorObjectByColorValue","getColorObjectByAttributeValues","getMostReadableColor","useEditorFeature","DEFAULT_COLORS","withCustomColorPalette","colorsArray","WrappedComponent","props","withEditorColorPalette","colors","createColorHOC","colorTypes","withColorPalette","colorMap","colorObject","colorType","setters","createSetters","colorUtils","bind","state","colorValue","settersAccumulator","colorContext","colorAttributeName","upperFirstColorAttributeName","customColorAttributeName","createSetColor","setAttributes","slug","undefined","previousState","attributes","newState","previousColorObject","previousColor","color","class","createCustomColorsHOC","withColors"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { isString, kebabCase, reduce, upperFirst } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { compose, createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetColorClassName,\n\tgetColorObjectByColorValue,\n\tgetColorObjectByAttributeValues,\n\tgetMostReadableColor,\n} from './utils';\nimport useEditorFeature from '../use-editor-feature';\n\nconst DEFAULT_COLORS = [];\n\n/**\n * Higher order component factory for injecting the `colorsArray` argument as\n * the colors prop in the `withCustomColors` HOC.\n *\n * @param {Array} colorsArray An array of color objects.\n *\n * @return {Function} The higher order component.\n */\nconst withCustomColorPalette = ( colorsArray ) =>\n\tcreateHigherOrderComponent(\n\t\t( WrappedComponent ) => ( props ) => (\n\t\t\t<WrappedComponent { ...props } colors={ colorsArray } />\n\t\t),\n\t\t'withCustomColorPalette'\n\t);\n\n/**\n * Higher order component factory for injecting the editor colors as the\n * `colors` prop in the `withColors` HOC.\n *\n * @return {Function} The higher order component.\n */\nconst withEditorColorPalette = () =>\n\tcreateHigherOrderComponent(\n\t\t( WrappedComponent ) => ( props ) => {\n\t\t\tconst colors =\n\t\t\t\tuseEditorFeature( 'color.palette' ) || DEFAULT_COLORS;\n\t\t\treturn <WrappedComponent { ...props } colors={ colors } />;\n\t\t},\n\t\t'withEditorColorPalette'\n\t);\n\n/**\n * Helper function used with `createHigherOrderComponent` to create\n * higher order components for managing color logic.\n *\n * @param {Array}    colorTypes       An array of color types (e.g. 'backgroundColor, borderColor).\n * @param {Function} withColorPalette A HOC for injecting the 'colors' prop into the WrappedComponent.\n *\n * @return {WPComponent} The component that can be used as a HOC.\n */\nfunction createColorHOC( colorTypes, withColorPalette ) {\n\tconst colorMap = reduce(\n\t\tcolorTypes,\n\t\t( colorObject, colorType ) => {\n\t\t\treturn {\n\t\t\t\t...colorObject,\n\t\t\t\t...( isString( colorType )\n\t\t\t\t\t? { [ colorType ]: kebabCase( colorType ) }\n\t\t\t\t\t: colorType ),\n\t\t\t};\n\t\t},\n\t\t{}\n\t);\n\n\treturn compose( [\n\t\twithColorPalette,\n\t\t( WrappedComponent ) => {\n\t\t\treturn class extends Component {\n\t\t\t\tconstructor( props ) {\n\t\t\t\t\tsuper( props );\n\n\t\t\t\t\tthis.setters = this.createSetters();\n\t\t\t\t\tthis.colorUtils = {\n\t\t\t\t\t\tgetMostReadableColor: this.getMostReadableColor.bind(\n\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.state = {};\n\t\t\t\t}\n\n\t\t\t\tgetMostReadableColor( colorValue ) {\n\t\t\t\t\tconst { colors } = this.props;\n\t\t\t\t\treturn getMostReadableColor( colors, colorValue );\n\t\t\t\t}\n\n\t\t\t\tcreateSetters() {\n\t\t\t\t\treturn reduce(\n\t\t\t\t\t\tcolorMap,\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tsettersAccumulator,\n\t\t\t\t\t\t\tcolorContext,\n\t\t\t\t\t\t\tcolorAttributeName\n\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\tconst upperFirstColorAttributeName = upperFirst(\n\t\t\t\t\t\t\t\tcolorAttributeName\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst customColorAttributeName = `custom${ upperFirstColorAttributeName }`;\n\t\t\t\t\t\t\tsettersAccumulator[\n\t\t\t\t\t\t\t\t`set${ upperFirstColorAttributeName }`\n\t\t\t\t\t\t\t] = this.createSetColor(\n\t\t\t\t\t\t\t\tcolorAttributeName,\n\t\t\t\t\t\t\t\tcustomColorAttributeName\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn settersAccumulator;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{}\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tcreateSetColor( colorAttributeName, customColorAttributeName ) {\n\t\t\t\t\treturn ( colorValue ) => {\n\t\t\t\t\t\tconst colorObject = getColorObjectByColorValue(\n\t\t\t\t\t\t\tthis.props.colors,\n\t\t\t\t\t\t\tcolorValue\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.props.setAttributes( {\n\t\t\t\t\t\t\t[ colorAttributeName ]:\n\t\t\t\t\t\t\t\tcolorObject && colorObject.slug\n\t\t\t\t\t\t\t\t\t? colorObject.slug\n\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\t[ customColorAttributeName ]:\n\t\t\t\t\t\t\t\tcolorObject && colorObject.slug\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: colorValue,\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tstatic getDerivedStateFromProps(\n\t\t\t\t\t{ attributes, colors },\n\t\t\t\t\tpreviousState\n\t\t\t\t) {\n\t\t\t\t\treturn reduce(\n\t\t\t\t\t\tcolorMap,\n\t\t\t\t\t\t( newState, colorContext, colorAttributeName ) => {\n\t\t\t\t\t\t\tconst colorObject = getColorObjectByAttributeValues(\n\t\t\t\t\t\t\t\tcolors,\n\t\t\t\t\t\t\t\tattributes[ colorAttributeName ],\n\t\t\t\t\t\t\t\tattributes[\n\t\t\t\t\t\t\t\t\t`custom${ upperFirst(\n\t\t\t\t\t\t\t\t\t\tcolorAttributeName\n\t\t\t\t\t\t\t\t\t) }`\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst previousColorObject =\n\t\t\t\t\t\t\t\tpreviousState[ colorAttributeName ];\n\t\t\t\t\t\t\tconst previousColor = previousColorObject?.color;\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * The \"and previousColorObject\" condition checks that a previous color object was already computed.\n\t\t\t\t\t\t\t * At the start previousColorObject and colorValue are both equal to undefined\n\t\t\t\t\t\t\t * bus as previousColorObject does not exist we should compute the object.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tpreviousColor === colorObject.color &&\n\t\t\t\t\t\t\t\tpreviousColorObject\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tnewState[\n\t\t\t\t\t\t\t\t\tcolorAttributeName\n\t\t\t\t\t\t\t\t] = previousColorObject;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnewState[ colorAttributeName ] = {\n\t\t\t\t\t\t\t\t\t...colorObject,\n\t\t\t\t\t\t\t\t\tclass: getColorClassName(\n\t\t\t\t\t\t\t\t\t\tcolorContext,\n\t\t\t\t\t\t\t\t\t\tcolorObject.slug\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn newState;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{}\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\trender() {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<WrappedComponent\n\t\t\t\t\t\t\t{ ...{\n\t\t\t\t\t\t\t\t...this.props,\n\t\t\t\t\t\t\t\tcolors: undefined,\n\t\t\t\t\t\t\t\t...this.state,\n\t\t\t\t\t\t\t\t...this.setters,\n\t\t\t\t\t\t\t\tcolorUtils: this.colorUtils,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t] );\n}\n\n/**\n * A higher-order component factory for creating a 'withCustomColors' HOC, which handles color logic\n * for class generation color value, retrieval and color attribute setting.\n *\n * Use this higher-order component to work with a custom set of colors.\n *\n * @example\n *\n * ```jsx\n * const CUSTOM_COLORS = [ { name: 'Red', slug: 'red', color: '#ff0000' }, { name: 'Blue', slug: 'blue', color: '#0000ff' } ];\n * const withCustomColors = createCustomColorsHOC( CUSTOM_COLORS );\n * // ...\n * export default compose(\n *     withCustomColors( 'backgroundColor', 'borderColor' ),\n *     MyColorfulComponent,\n * );\n * ```\n *\n * @param {Array} colorsArray The array of color objects (name, slug, color, etc... ).\n *\n * @return {Function} Higher-order component.\n */\nexport function createCustomColorsHOC( colorsArray ) {\n\treturn ( ...colorTypes ) => {\n\t\tconst withColorPalette = withCustomColorPalette( colorsArray );\n\t\treturn createHigherOrderComponent(\n\t\t\tcreateColorHOC( colorTypes, withColorPalette ),\n\t\t\t'withCustomColors'\n\t\t);\n\t};\n}\n\n/**\n * A higher-order component, which handles color logic for class generation color value, retrieval and color attribute setting.\n *\n * For use with the default editor/theme color palette.\n *\n * @example\n *\n * ```jsx\n * export default compose(\n *     withColors( 'backgroundColor', { textColor: 'color' } ),\n *     MyColorfulComponent,\n * );\n * ```\n *\n * @param {...(Object|string)} colorTypes The arguments can be strings or objects. If the argument is an object,\n *                                        it should contain the color attribute name as key and the color context as value.\n *                                        If the argument is a string the value should be the color attribute name,\n *                                        the color context is computed by applying a kebab case transform to the value.\n *                                        Color context represents the context/place where the color is going to be used.\n *                                        The class name of the color is generated using 'has' followed by the color name\n *                                        and ending with the color context all in kebab case e.g: has-green-background-color.\n *\n * @return {Function} Higher-order component.\n */\nexport default function withColors( ...colorTypes ) {\n\tconst withColorPalette = withEditorColorPalette();\n\treturn createHigherOrderComponent(\n\t\tcreateColorHOC( colorTypes, withColorPalette ),\n\t\t'withColors'\n\t);\n}\n"]}