import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { useContext } from '@wordpress/element';
import { __experimentalToolbarContext as ToolbarContext, ToolbarGroup } from '@wordpress/components';
/**
 * Internal dependencies
 */

import groups from './groups';
export default function BlockControlsSlot(_ref) {
  var _ref$group = _ref.group,
      group = _ref$group === void 0 ? 'default' : _ref$group,
      props = _objectWithoutProperties(_ref, ["group"]);

  var accessibleToolbarState = useContext(ToolbarContext);
  var Slot = groups[group].Slot;

  if (group === 'default') {
    return createElement(Slot, _extends({}, props, {
      fillProps: accessibleToolbarState
    }));
  }

  return createElement(Slot, _extends({}, props, {
    fillProps: accessibleToolbarState
  }), function (fills) {
    if (!fills.length) {
      return null;
    }

    return createElement(ToolbarGroup, null, fills);
  });
}
//# sourceMappingURL=slot.native.js.map