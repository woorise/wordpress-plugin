{"version":3,"sources":["@wordpress/block-editor/src/components/unit-control/index.js"],"names":["__experimentalUnitControl","BaseUnitControl","useEditorFeature","UnitControl","unitsProp","units","props","useCustomUnits","filterUnitsWithSettings","settings","filter","unit","includes","value","availableUnits","usedUnits","length"],"mappings":";;;;AAAA;AACA;AACA;AACA,SAASA,yBAAyB,IAAIC,eAAtC,QAA6D,uBAA7D;AAEA;AACA;AACA;;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AAEA,eAAe,SAASC,WAAT,OAAuD;AAAA,MAAxBC,SAAwB,QAA/BC,KAA+B;AAAA,MAAVC,KAAU;;AACrE,MAAMD,KAAK,GAAGE,cAAc,CAAEH,SAAF,CAA5B;AAEA,SAAO,cAAC,eAAD;AAAiB,IAAA,KAAK,EAAGC;AAAzB,KAAsCC,KAAtC,EAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASE,uBAAT,GAA8D;AAAA,MAA5BC,QAA4B,uEAAjB,EAAiB;AAAA,MAAbJ,KAAa,uEAAL,EAAK;AAC7D,SAAOA,KAAK,CAACK,MAAN,CAAc,UAAEC,IAAF,EAAY;AAChC,WAAOF,QAAQ,CAACG,QAAT,CAAmBD,IAAI,CAACE,KAAxB,CAAP;AACA,GAFM,CAAP;AAGA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASN,cAAT,CAAyBF,KAAzB,EAAiC;AACvC,MAAMS,cAAc,GAAGZ,gBAAgB,CAAE,eAAF,CAAvC;AACA,MAAMa,SAAS,GAAGP,uBAAuB,CACxC,CAAEM,cAAF,GAAmB,EAAnB,GAAwBA,cADgB,EAExCT,KAFwC,CAAzC;AAKA,SAAOU,SAAS,CAACC,MAAV,KAAqB,CAArB,GAAyB,KAAzB,GAAiCD,SAAxC;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __experimentalUnitControl as BaseUnitControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport useEditorFeature from '../use-editor-feature';\n\nexport default function UnitControl( { units: unitsProp, ...props } ) {\n\tconst units = useCustomUnits( unitsProp );\n\n\treturn <BaseUnitControl units={ units } { ...props } />;\n}\n\n/**\n * Filters available units based on values defined by settings.\n *\n * @param {Array} settings Collection of preferred units.\n * @param {Array} units Collection of available units.\n *\n * @return {Array} Filtered units based on settings.\n */\nfunction filterUnitsWithSettings( settings = [], units = [] ) {\n\treturn units.filter( ( unit ) => {\n\t\treturn settings.includes( unit.value );\n\t} );\n}\n\n/**\n * Custom hook to retrieve and consolidate units setting from add_theme_support().\n *\n * @param {Array} units Collection of available units.\n *\n * @return {Array} Filtered units based on settings.\n */\nexport function useCustomUnits( units ) {\n\tconst availableUnits = useEditorFeature( 'spacing.units' );\n\tconst usedUnits = filterUnitsWithSettings(\n\t\t! availableUnits ? [] : availableUnits,\n\t\tunits\n\t);\n\n\treturn usedUnits.length === 0 ? false : usedUnits;\n}\n"]}