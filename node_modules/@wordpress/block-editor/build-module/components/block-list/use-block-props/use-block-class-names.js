/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { useSelect } from '@wordpress/data';
import { isReusableBlock, getBlockType } from '@wordpress/blocks';
/**
 * Internal dependencies
 */

import { store as blockEditorStore } from '../../../store';
/**
 * Returns the class names used for the different states of the block.
 *
 * @param {string} clientId The block client ID.
 *
 * @return {string} The class names.
 */

export function useBlockClassNames(clientId) {
  return useSelect(function (select) {
    var _select = select(blockEditorStore),
        isBlockBeingDragged = _select.isBlockBeingDragged,
        isBlockHighlighted = _select.isBlockHighlighted,
        isBlockSelected = _select.isBlockSelected,
        isBlockMultiSelected = _select.isBlockMultiSelected,
        getBlockName = _select.getBlockName,
        getSettings = _select.getSettings,
        hasSelectedInnerBlock = _select.hasSelectedInnerBlock,
        getActiveBlockIdByBlockNames = _select.__experimentalGetActiveBlockIdByBlockNames;

    var _getSettings = getSettings(),
        spotlightEntityBlocks = _getSettings.__experimentalSpotlightEntityBlocks;

    var isDragging = isBlockBeingDragged(clientId);
    var isSelected = isBlockSelected(clientId);
    var name = getBlockName(clientId);
    var checkDeep = true; // "ancestor" is the more appropriate label due to "deep" check

    var isAncestorOfSelectedBlock = hasSelectedInnerBlock(clientId, checkDeep);
    var activeEntityBlockId = getActiveBlockIdByBlockNames(spotlightEntityBlocks);
    return classnames('block-editor-block-list__block', {
      'is-selected': isSelected && !isDragging,
      'is-highlighted': isBlockHighlighted(clientId),
      'is-multi-selected': isBlockMultiSelected(clientId),
      'is-reusable': isReusableBlock(getBlockType(name)),
      'is-dragging': isDragging,
      'has-child-selected': isAncestorOfSelectedBlock && !isDragging,
      'has-active-entity': activeEntityBlockId,
      // Determine if there is an active entity area to spotlight.
      'is-active-entity': activeEntityBlockId === clientId
    });
  }, [clientId]);
}
//# sourceMappingURL=use-block-class-names.js.map