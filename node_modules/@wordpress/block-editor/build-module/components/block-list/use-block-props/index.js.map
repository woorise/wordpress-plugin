{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/use-block-props/index.js"],"names":["classnames","useContext","__","sprintf","__unstableGetBlockProps","getBlockProps","getBlockType","useMergeRefs","useSelect","useMovingAnimation","BlockListBlockContext","useFocusFirstElement","useIsHovered","useBlockClassNames","useBlockDefaultClassName","useBlockCustomClassName","useBlockMovingModeClassNames","useEventHandlers","useNavModeExit","useBlockNodes","store","blockEditorStore","BLOCK_ANIMATION_THRESHOLD","useBlockProps","props","__unstableIsHtml","clientId","index","className","wrapperProps","select","getBlockMode","getBlockName","isTyping","getGlobalBlockCount","isBlockSelected","isBlockMultiSelected","isAncestorMultiSelected","isFirstMultiSelectedBlock","isSelected","isPartOfMultiSelection","blockName","mode","name","blockTitle","title","isPartOfSelection","adjustScrolling","enableAnimation","blockLabel","htmlSuffix","mergedRefs","ref","triggerAnimationOnChange","id","tabIndex","role","style","save"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useContext } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\t__unstableGetBlockProps as getBlockProps,\n\tgetBlockType,\n} from '@wordpress/blocks';\nimport { useMergeRefs } from '@wordpress/compose';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport useMovingAnimation from '../../use-moving-animation';\nimport { BlockListBlockContext } from '../block';\nimport { useFocusFirstElement } from './use-focus-first-element';\nimport { useIsHovered } from './use-is-hovered';\nimport { useBlockClassNames } from './use-block-class-names';\nimport { useBlockDefaultClassName } from './use-block-default-class-name';\nimport { useBlockCustomClassName } from './use-block-custom-class-name';\nimport { useBlockMovingModeClassNames } from './use-block-moving-mode-class-names';\nimport { useEventHandlers } from './use-event-handlers';\nimport { useNavModeExit } from './use-nav-mode-exit';\nimport { useBlockNodes } from './use-block-nodes';\nimport { store as blockEditorStore } from '../../../store';\n\n/**\n * If the block count exceeds the threshold, we disable the reordering animation\n * to avoid laginess.\n */\nconst BLOCK_ANIMATION_THRESHOLD = 200;\n\n/**\n * This hook is used to lightly mark an element as a block element. The element\n * should be the outermost element of a block. Call this hook and pass the\n * returned props to the element to mark as a block. If you define a ref for the\n * element, it is important to pass the ref to this hook, which the hook in turn\n * will pass to the component through the props it returns. Optionally, you can\n * also pass any other props through this hook, and they will be merged and\n * returned.\n *\n * @param {Object}  props   Optional. Props to pass to the element. Must contain\n *                          the ref if one is defined.\n * @param {Object}  options Options for internal use only.\n * @param {boolean} options.__unstableIsHtml\n *\n * @return {Object} Props to pass to the element to mark as a block.\n */\nexport function useBlockProps( props = {}, { __unstableIsHtml } = {} ) {\n\tconst { clientId, index, className, wrapperProps = {} } = useContext(\n\t\tBlockListBlockContext\n\t);\n\tconst {\n\t\tmode,\n\t\tname,\n\t\tblockTitle,\n\t\tisPartOfSelection,\n\t\tadjustScrolling,\n\t\tenableAnimation,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockMode,\n\t\t\t\tgetBlockName,\n\t\t\t\tisTyping,\n\t\t\t\tgetGlobalBlockCount,\n\t\t\t\tisBlockSelected,\n\t\t\t\tisBlockMultiSelected,\n\t\t\t\tisAncestorMultiSelected,\n\t\t\t\tisFirstMultiSelectedBlock,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst isSelected = isBlockSelected( clientId );\n\t\t\tconst isPartOfMultiSelection =\n\t\t\t\tisBlockMultiSelected( clientId ) ||\n\t\t\t\tisAncestorMultiSelected( clientId );\n\t\t\tconst blockName = getBlockName( clientId );\n\t\t\treturn {\n\t\t\t\tmode: getBlockMode( clientId ),\n\t\t\t\tname: blockName,\n\t\t\t\tblockTitle: getBlockType( blockName ).title,\n\t\t\t\tisPartOfSelection: isSelected || isPartOfMultiSelection,\n\t\t\t\tadjustScrolling:\n\t\t\t\t\tisSelected || isFirstMultiSelectedBlock( clientId ),\n\t\t\t\tenableAnimation:\n\t\t\t\t\t! isTyping() &&\n\t\t\t\t\tgetGlobalBlockCount() <= BLOCK_ANIMATION_THRESHOLD,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\t// translators: %s: Type of block (i.e. Text, Image etc)\n\tconst blockLabel = sprintf( __( 'Block: %s' ), blockTitle );\n\tconst htmlSuffix = mode === 'html' && ! __unstableIsHtml ? '-visual' : '';\n\tconst mergedRefs = useMergeRefs( [\n\t\tprops.ref,\n\t\tuseFocusFirstElement( clientId ),\n\t\tuseBlockNodes( clientId ),\n\t\tuseEventHandlers( clientId ),\n\t\tuseNavModeExit( clientId ),\n\t\tuseIsHovered(),\n\t\tuseMovingAnimation( {\n\t\t\tisSelected: isPartOfSelection,\n\t\t\tadjustScrolling,\n\t\t\tenableAnimation,\n\t\t\ttriggerAnimationOnChange: index,\n\t\t} ),\n\t] );\n\n\treturn {\n\t\t...wrapperProps,\n\t\t...props,\n\t\tref: mergedRefs,\n\t\tid: `block-${ clientId }${ htmlSuffix }`,\n\t\ttabIndex: 0,\n\t\trole: 'group',\n\t\t'aria-label': blockLabel,\n\t\t'data-block': clientId,\n\t\t'data-type': name,\n\t\t'data-title': blockTitle,\n\t\tclassName: classnames(\n\t\t\tclassName,\n\t\t\tprops.className,\n\t\t\twrapperProps.className,\n\t\t\tuseBlockClassNames( clientId ),\n\t\t\tuseBlockDefaultClassName( clientId ),\n\t\t\tuseBlockCustomClassName( clientId ),\n\t\t\tuseBlockMovingModeClassNames( clientId )\n\t\t),\n\t\tstyle: { ...wrapperProps.style, ...props.style },\n\t};\n}\n\n/**\n * Call within a save function to get the props for the block wrapper.\n *\n * @param {Object} props Optional. Props to pass to the element.\n */\nuseBlockProps.save = getBlockProps;\n"]}