{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/use-block-props/use-event-handlers.js"],"names":["useContext","isTextField","ENTER","BACKSPACE","DELETE","useSelect","useDispatch","useRefEffect","isInsideRootBlock","SelectionStart","store","blockEditorStore","useEventHandlers","clientId","onSelectionStart","select","isBlockSelected","getBlockRootClientId","getBlockIndex","isSelected","rootClientId","index","insertDefaultBlock","removeBlock","selectBlock","node","onFocus","event","target","addEventListener","removeEventListener","onKeyDown","keyCode","preventDefault","onMouseLeave","buttons","onDragStart"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useContext } from '@wordpress/element';\nimport { isTextField } from '@wordpress/dom';\nimport { ENTER, BACKSPACE, DELETE } from '@wordpress/keycodes';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useRefEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { isInsideRootBlock } from '../../../utils/dom';\nimport { SelectionStart } from '../../writing-flow';\nimport { store as blockEditorStore } from '../../../store';\n\n/**\n * Adds block behaviour:\n *   - Selects the block if it receives focus.\n *   - Removes the block on BACKSPACE.\n *   - Inserts a default block on ENTER.\n *   - Initiates selection start for multi-selection.\n *   - Disables dragging of block contents.\n *\n * @param {string} clientId Block client ID.\n */\nexport function useEventHandlers( clientId ) {\n\tconst onSelectionStart = useContext( SelectionStart );\n\tconst { isSelected, rootClientId, index } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tisBlockSelected,\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetBlockIndex,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\treturn {\n\t\t\t\tisSelected: isBlockSelected( clientId ),\n\t\t\t\trootClientId: getBlockRootClientId( clientId ),\n\t\t\t\tindex: getBlockIndex( clientId ),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\tconst { insertDefaultBlock, removeBlock, selectBlock } = useDispatch(\n\t\tblockEditorStore\n\t);\n\n\treturn useRefEffect(\n\t\t( node ) => {\n\t\t\tif ( ! isSelected ) {\n\t\t\t\t/**\n\t\t\t\t * Marks the block as selected when focused and not already\n\t\t\t\t * selected. This specifically handles the case where block does not\n\t\t\t\t * set focus on its own (via `setFocus`), typically if there is no\n\t\t\t\t * focusable input in the block.\n\t\t\t\t *\n\t\t\t\t * @param {FocusEvent} event Focus event.\n\t\t\t\t */\n\t\t\t\tfunction onFocus( event ) {\n\t\t\t\t\t// If an inner block is focussed, that block is resposible for\n\t\t\t\t\t// setting the selected block.\n\t\t\t\t\tif ( ! isInsideRootBlock( node, event.target ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectBlock( clientId );\n\t\t\t\t}\n\n\t\t\t\tnode.addEventListener( 'focusin', onFocus );\n\n\t\t\t\treturn () => {\n\t\t\t\t\tnode.removeEventListener( 'focusin', onFocus );\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Interprets keydown event intent to remove or insert after block if\n\t\t\t * key event occurs on wrapper node. This can occur when the block has\n\t\t\t * no text fields of its own, particularly after initial insertion, to\n\t\t\t * allow for easy deletion and continuous writing flow to add additional\n\t\t\t * content.\n\t\t\t *\n\t\t\t * @param {KeyboardEvent} event Keydown event.\n\t\t\t */\n\t\t\tfunction onKeyDown( event ) {\n\t\t\t\tconst { keyCode, target } = event;\n\n\t\t\t\tif (\n\t\t\t\t\tkeyCode !== ENTER &&\n\t\t\t\t\tkeyCode !== BACKSPACE &&\n\t\t\t\t\tkeyCode !== DELETE\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( target !== node || isTextField( target ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif ( keyCode === ENTER ) {\n\t\t\t\t\tinsertDefaultBlock( {}, rootClientId, index + 1 );\n\t\t\t\t} else {\n\t\t\t\t\tremoveBlock( clientId );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onMouseLeave( { buttons } ) {\n\t\t\t\t// The primary button must be pressed to initiate selection.\n\t\t\t\t// See https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n\t\t\t\tif ( buttons === 1 ) {\n\t\t\t\t\tonSelectionStart( clientId );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Prevents default dragging behavior within a block. To do: we must\n\t\t\t * handle this in the future and clean up the drag target.\n\t\t\t *\n\t\t\t * @param {DragEvent} event Drag event.\n\t\t\t */\n\t\t\tfunction onDragStart( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tnode.addEventListener( 'keydown', onKeyDown );\n\t\t\tnode.addEventListener( 'mouseleave', onMouseLeave );\n\t\t\tnode.addEventListener( 'dragstart', onDragStart );\n\n\t\t\treturn () => {\n\t\t\t\tnode.removeEventListener( 'mouseleave', onMouseLeave );\n\t\t\t\tnode.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tnode.removeEventListener( 'dragstart', onDragStart );\n\t\t\t};\n\t\t},\n\t\t[\n\t\t\tisSelected,\n\t\t\trootClientId,\n\t\t\tindex,\n\t\t\tonSelectionStart,\n\t\t\tinsertDefaultBlock,\n\t\t\tremoveBlock,\n\t\t\tselectBlock,\n\t\t]\n\t);\n}\n"]}