{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/block-contextual-toolbar.js"],"names":["classnames","__","hasBlockSupport","store","blocksStore","useSelect","NavigableToolbar","BlockToolbar","blockEditorStore","BlockContextualToolbar","focusOnMount","props","select","getBlockName","getBlockParents","getSelectedBlockClientIds","getBlockType","selectedBlockClientIds","selectedBlockClientId","blockType","hasParents","length","classes"],"mappings":";;;;AAAA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,YAAvB;AAEA;AACA;AACA;;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,eAAT,EAA0BC,KAAK,IAAIC,WAAnC,QAAsD,mBAAtD;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,SAASC,YAAT,QAA6B,KAA7B;AACA,SAASJ,KAAK,IAAIK,gBAAlB,QAA0C,aAA1C;;AAEA,SAASC,sBAAT,OAA8D;AAAA,MAA3BC,YAA2B,QAA3BA,YAA2B;AAAA,MAAVC,KAAU;;AAAA,mBAC3BN,SAAS,CAAE,UAAEO,MAAF,EAAc;AAAA,kBAKtDA,MAAM,CAAEJ,gBAAF,CALgD;AAAA,QAEzDK,YAFyD,WAEzDA,YAFyD;AAAA,QAGzDC,eAHyD,WAGzDA,eAHyD;AAAA,QAIzDC,yBAJyD,WAIzDA,yBAJyD;;AAAA,mBAMjCH,MAAM,CAAER,WAAF,CAN2B;AAAA,QAMlDY,YANkD,YAMlDA,YANkD;;AAO1D,QAAMC,sBAAsB,GAAGF,yBAAyB,EAAxD;AACA,QAAMG,qBAAqB,GAAGD,sBAAsB,CAAE,CAAF,CAApD;AACA,WAAO;AACNE,MAAAA,SAAS,EACRD,qBAAqB,IACrBF,YAAY,CAAEH,YAAY,CAAEK,qBAAF,CAAd,CAHP;AAINE,MAAAA,UAAU,EAAEN,eAAe,CAAEI,qBAAF,CAAf,CAAyCG;AAJ/C,KAAP;AAMA,GAf0C,EAexC,EAfwC,CADkB;AAAA,MACrDF,SADqD,cACrDA,SADqD;AAAA,MAC1CC,UAD0C,cAC1CA,UAD0C;;AAiB7D,MAAKD,SAAL,EAAiB;AAChB,QAAK,CAAEjB,eAAe,CAAEiB,SAAF,EAAa,uBAAb,EAAsC,IAAtC,CAAtB,EAAqE;AACpE,aAAO,IAAP;AACA;AACD,GArB4D,CAuB7D;;;AACA,MAAMG,OAAO,GAAGtB,UAAU,CAAE,uCAAF,EAA2C;AACpE,kBAAcoB;AADsD,GAA3C,CAA1B;AAIA,SACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,cAAC,gBAAD;AACC,IAAA,YAAY,EAAGV,YADhB;AAEC,IAAA,SAAS,EAAGY;AACZ;AAHD;AAIC,kBAAarB,EAAE,CAAE,aAAF;AAJhB,KAKMU,KALN,GAOC,cAAC,YAAD,OAPD,CADD,CADD;AAaA;;AAED,eAAeF,sBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { hasBlockSupport, store as blocksStore } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport NavigableToolbar from '../navigable-toolbar';\nimport { BlockToolbar } from '../';\nimport { store as blockEditorStore } from '../../store';\n\nfunction BlockContextualToolbar( { focusOnMount, ...props } ) {\n\tconst { blockType, hasParents } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetBlockName,\n\t\t\tgetBlockParents,\n\t\t\tgetSelectedBlockClientIds,\n\t\t} = select( blockEditorStore );\n\t\tconst { getBlockType } = select( blocksStore );\n\t\tconst selectedBlockClientIds = getSelectedBlockClientIds();\n\t\tconst selectedBlockClientId = selectedBlockClientIds[ 0 ];\n\t\treturn {\n\t\t\tblockType:\n\t\t\t\tselectedBlockClientId &&\n\t\t\t\tgetBlockType( getBlockName( selectedBlockClientId ) ),\n\t\t\thasParents: getBlockParents( selectedBlockClientId ).length,\n\t\t};\n\t}, [] );\n\tif ( blockType ) {\n\t\tif ( ! hasBlockSupport( blockType, '__experimentalToolbar', true ) ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Shifts the toolbar to make room for the parent block selector.\n\tconst classes = classnames( 'block-editor-block-contextual-toolbar', {\n\t\t'has-parent': hasParents,\n\t} );\n\n\treturn (\n\t\t<div className=\"block-editor-block-contextual-toolbar-wrapper\">\n\t\t\t<NavigableToolbar\n\t\t\t\tfocusOnMount={ focusOnMount }\n\t\t\t\tclassName={ classes }\n\t\t\t\t/* translators: accessibility text for the block toolbar */\n\t\t\t\taria-label={ __( 'Block tools' ) }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t<BlockToolbar />\n\t\t\t</NavigableToolbar>\n\t\t</div>\n\t);\n}\n\nexport default BlockContextualToolbar;\n"]}