import { createElement, Fragment } from "@wordpress/element";

/**
 * External dependencies
 */
import tinycolor from 'tinycolor2';
/**
 * WordPress dependencies
 */

import { useCallback } from '@wordpress/element';
/**
 * Internal dependencies
 */

import transformStyles from '../../utils/transform-styles';
var EDITOR_STYLES_SELECTOR = '.editor-styles-wrapper';

function useDarkThemeBodyClassName(styles) {
  return useCallback(function (node) {
    if (!node) {
      return;
    }

    var ownerDocument = node.ownerDocument;
    var defaultView = ownerDocument.defaultView,
        body = ownerDocument.body;
    var canvas = ownerDocument.querySelector(EDITOR_STYLES_SELECTOR);
    var backgroundColor = defaultView.getComputedStyle(canvas, null).getPropertyValue('background-color');

    if (tinycolor(backgroundColor).getLuminance() > 0.5) {
      body.classList.remove('is-dark-theme');
    } else {
      body.classList.add('is-dark-theme');
    }
  }, [styles]);
}

export default function EditorStyles(_ref) {
  var styles = _ref.styles;
  return createElement(Fragment, null, createElement("style", {
    ref: useDarkThemeBodyClassName(styles)
  }), transformStyles(styles, EDITOR_STYLES_SELECTOR).map(function (css, index) {
    return createElement("style", {
      key: index
    }, css);
  }));
}
//# sourceMappingURL=index.js.map