{"version":3,"sources":["@wordpress/block-editor/src/components/block-actions/index.js"],"names":["castArray","first","last","every","useDispatch","useSelect","hasBlockSupport","switchToBlockType","store","blocksStore","useNotifyCopy","blockEditorStore","BlockActions","clientIds","children","updateSelection","__experimentalUpdateSelection","select","canInsertBlockType","getBlockRootClientId","getBlocksByClientId","getTemplateLock","getDefaultBlockName","getGroupingBlockName","blocks","rootClientId","canDuplicate","block","name","canInsertDefaultBlock","removeBlocks","replaceBlocks","duplicateBlocks","insertAfterBlock","insertBeforeBlock","flashBlock","setBlockMovingClientId","setNavigationMode","selectBlock","notifyCopy","isLocked","onDuplicate","onRemove","onInsertBefore","onInsertAfter","onMoveTo","onGroup","length","groupingBlockName","newBlocks","onUngroup","innerBlocks","onCopy","selectedBlockClientIds","map","clientId"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray, first, last, every } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport {\n\thasBlockSupport,\n\tswitchToBlockType,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { useNotifyCopy } from '../copy-handler';\nimport { store as blockEditorStore } from '../../store';\n\nexport default function BlockActions( {\n\tclientIds,\n\tchildren,\n\t__experimentalUpdateSelection: updateSelection,\n} ) {\n\tconst {\n\t\tcanInsertBlockType,\n\t\tgetBlockRootClientId,\n\t\tgetBlocksByClientId,\n\t\tgetTemplateLock,\n\t} = useSelect( ( select ) => select( blockEditorStore ), [] );\n\tconst { getDefaultBlockName, getGroupingBlockName } = useSelect(\n\t\t( select ) => select( blocksStore ),\n\t\t[]\n\t);\n\n\tconst blocks = getBlocksByClientId( clientIds );\n\tconst rootClientId = getBlockRootClientId( clientIds[ 0 ] );\n\tconst canDuplicate = every( blocks, ( block ) => {\n\t\treturn (\n\t\t\t!! block &&\n\t\t\thasBlockSupport( block.name, 'multiple', true ) &&\n\t\t\tcanInsertBlockType( block.name, rootClientId )\n\t\t);\n\t} );\n\n\tconst canInsertDefaultBlock = canInsertBlockType(\n\t\tgetDefaultBlockName(),\n\t\trootClientId\n\t);\n\n\tconst {\n\t\tremoveBlocks,\n\t\treplaceBlocks,\n\t\tduplicateBlocks,\n\t\tinsertAfterBlock,\n\t\tinsertBeforeBlock,\n\t\tflashBlock,\n\t\tsetBlockMovingClientId,\n\t\tsetNavigationMode,\n\t\tselectBlock,\n\t} = useDispatch( blockEditorStore );\n\n\tconst notifyCopy = useNotifyCopy();\n\n\treturn children( {\n\t\tcanDuplicate,\n\t\tcanInsertDefaultBlock,\n\t\tisLocked: !! getTemplateLock( rootClientId ),\n\t\trootClientId,\n\t\tblocks,\n\t\tonDuplicate() {\n\t\t\treturn duplicateBlocks( clientIds, updateSelection );\n\t\t},\n\t\tonRemove() {\n\t\t\treturn removeBlocks( clientIds, updateSelection );\n\t\t},\n\t\tonInsertBefore() {\n\t\t\tinsertBeforeBlock( first( castArray( clientIds ) ) );\n\t\t},\n\t\tonInsertAfter() {\n\t\t\tinsertAfterBlock( last( castArray( clientIds ) ) );\n\t\t},\n\t\tonMoveTo() {\n\t\t\tsetNavigationMode( true );\n\t\t\tselectBlock( clientIds[ 0 ] );\n\t\t\tsetBlockMovingClientId( clientIds[ 0 ] );\n\t\t},\n\t\tonGroup() {\n\t\t\tif ( ! blocks.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst groupingBlockName = getGroupingBlockName();\n\n\t\t\t// Activate the `transform` on `core/group` which does the conversion\n\t\t\tconst newBlocks = switchToBlockType( blocks, groupingBlockName );\n\n\t\t\tif ( ! newBlocks ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treplaceBlocks( clientIds, newBlocks );\n\t\t},\n\t\tonUngroup() {\n\t\t\tif ( ! blocks.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst innerBlocks = blocks[ 0 ].innerBlocks;\n\n\t\t\tif ( ! innerBlocks.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treplaceBlocks( clientIds, innerBlocks );\n\t\t},\n\t\tonCopy() {\n\t\t\tconst selectedBlockClientIds = blocks.map(\n\t\t\t\t( { clientId } ) => clientId\n\t\t\t);\n\t\t\tif ( blocks.length === 1 ) {\n\t\t\t\tflashBlock( selectedBlockClientIds[ 0 ] );\n\t\t\t}\n\t\t\tnotifyCopy( 'copy', selectedBlockClientIds );\n\t\t},\n\t} );\n}\n"]}