{"version":3,"sources":["@wordpress/block-editor/src/components/block-draggable/index.js"],"names":["getBlockType","Draggable","useSelect","useDispatch","useEffect","useRef","BlockDraggableChip","useScrollWhenDragging","store","blockEditorStore","BlockDraggable","children","clientIds","cloneClassname","onDragStart","onDragEnd","elementId","select","getBlockRootClientId","getTemplateLock","getBlockName","rootClientId","templateLock","blockName","srcRootClientId","isDraggable","icon","isDragging","startScrolling","scrollOnDragOver","stopScrolling","startDraggingBlocks","stopDraggingBlocks","current","transferData","type","srcClientIds","event","length","onDraggableStart","onDraggableEnd","draggable"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { getBlockType } from '@wordpress/blocks';\nimport { Draggable } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport BlockDraggableChip from './draggable-chip';\nimport useScrollWhenDragging from './use-scroll-when-dragging';\nimport { store as blockEditorStore } from '../../store';\n\nconst BlockDraggable = ( {\n\tchildren,\n\tclientIds,\n\tcloneClassname,\n\tonDragStart,\n\tonDragEnd,\n\telementId,\n} ) => {\n\tconst { srcRootClientId, isDraggable, icon } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetTemplateLock,\n\t\t\t\tgetBlockName,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst rootClientId = getBlockRootClientId( clientIds[ 0 ] );\n\t\t\tconst templateLock = rootClientId\n\t\t\t\t? getTemplateLock( rootClientId )\n\t\t\t\t: null;\n\t\t\tconst blockName = getBlockName( clientIds[ 0 ] );\n\n\t\t\treturn {\n\t\t\t\tsrcRootClientId: rootClientId,\n\t\t\t\tisDraggable: 'all' !== templateLock,\n\t\t\t\ticon: getBlockType( blockName )?.icon,\n\t\t\t};\n\t\t},\n\t\t[ clientIds ]\n\t);\n\tconst isDragging = useRef( false );\n\tconst [\n\t\tstartScrolling,\n\t\tscrollOnDragOver,\n\t\tstopScrolling,\n\t] = useScrollWhenDragging();\n\n\tconst { startDraggingBlocks, stopDraggingBlocks } = useDispatch(\n\t\tblockEditorStore\n\t);\n\n\t// Stop dragging blocks if the block draggable is unmounted\n\tuseEffect( () => {\n\t\treturn () => {\n\t\t\tif ( isDragging.current ) {\n\t\t\t\tstopDraggingBlocks();\n\t\t\t}\n\t\t};\n\t}, [] );\n\n\tif ( ! isDraggable ) {\n\t\treturn children( { isDraggable: false } );\n\t}\n\n\tconst transferData = {\n\t\ttype: 'block',\n\t\tsrcClientIds: clientIds,\n\t\tsrcRootClientId,\n\t};\n\n\treturn (\n\t\t<Draggable\n\t\t\tcloneClassname={ cloneClassname }\n\t\t\telementId={ elementId }\n\t\t\ttransferData={ transferData }\n\t\t\tonDragStart={ ( event ) => {\n\t\t\t\tstartDraggingBlocks( clientIds );\n\t\t\t\tisDragging.current = true;\n\n\t\t\t\tstartScrolling( event );\n\n\t\t\t\tif ( onDragStart ) {\n\t\t\t\t\tonDragStart();\n\t\t\t\t}\n\t\t\t} }\n\t\t\tonDragOver={ scrollOnDragOver }\n\t\t\tonDragEnd={ () => {\n\t\t\t\tstopDraggingBlocks();\n\t\t\t\tisDragging.current = false;\n\n\t\t\t\tstopScrolling();\n\n\t\t\t\tif ( onDragEnd ) {\n\t\t\t\t\tonDragEnd();\n\t\t\t\t}\n\t\t\t} }\n\t\t\t__experimentalDragComponent={\n\t\t\t\t<BlockDraggableChip count={ clientIds.length } icon={ icon } />\n\t\t\t}\n\t\t>\n\t\t\t{ ( { onDraggableStart, onDraggableEnd } ) => {\n\t\t\t\treturn children( {\n\t\t\t\t\tdraggable: true,\n\t\t\t\t\tonDragStart: onDraggableStart,\n\t\t\t\t\tonDragEnd: onDraggableEnd,\n\t\t\t\t} );\n\t\t\t} }\n\t\t</Draggable>\n\t);\n};\n\nexport default BlockDraggable;\n"]}