{"version":3,"sources":["@wordpress/block-editor/src/components/writing-flow/index.js"],"names":["find","reverse","first","last","useRef","useEffect","createContext","computeCaretRect","focus","isHorizontalEdge","isVerticalEdge","placeCaretAtHorizontalEdge","placeCaretAtVerticalEdge","isEntirelySelected","UP","DOWN","LEFT","RIGHT","TAB","isKeyboardEvent","ESCAPE","useSelect","useDispatch","__","isInSameBlock","getBlockClientId","FocusCapture","useMultiSelection","store","blockEditorStore","SelectionStart","getComputedStyle","node","ownerDocument","defaultView","isFormElement","element","tagName","isNavigationCandidate","keyCode","hasModifier","isVertical","getClosestTabbable","target","isReverse","containerElement","onlyVertical","focusableNodes","focusable","slice","indexOf","targetRect","getBoundingClientRect","isTabCandidate","tabbable","isTabbableIndex","isContentEditable","contentEditable","nodeRect","left","right","selector","select","getSelectedBlockClientId","getMultiSelectedBlocksStartClientId","getMultiSelectedBlocksEndClientId","getPreviousBlockClientId","getNextBlockClientId","getFirstMultiSelectedBlockClientId","getLastMultiSelectedBlockClientId","hasMultiSelection","getBlockOrder","isSelectionEnabled","getBlockSelectionStart","isMultiSelecting","getSettings","selectedBlockClientId","selectionStartClientId","selectionEndClientId","blocks","selectionBeforeEndClientId","selectionAfterEndClientId","selectedFirstClientId","selectedLastClientId","firstBlock","lastBlock","blockSelectionStart","keepCaretInsideBlock","WritingFlow","children","container","focusCaptureBeforeRef","focusCaptureAfterRef","multiSelectionContainer","entirelySelected","noCapture","verticalRect","onSelectionStart","multiSelect","selectBlock","setNavigationMode","onMouseDown","event","current","button","clientId","shiftKey","preventDefault","expandSelection","nextSelectionEndClientId","moveSelection","focusedBlockClientId","isTabbableEdge","closestTabbable","onKeyDown","contains","isUp","isDown","isLeft","isRight","isTab","isEscape","isHorizontal","isNav","isShift","ctrlKey","altKey","metaKey","isNavEdge","direction","next","primary","nativeEvent","defaultPrevented","isReverseDir","getSelection","isCollapsed","onMultiSelectKeyDown","action","lastFocus","onFocusOut","addEventListener","removeEventListener","undefined","position"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { find, reverse, first, last } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useRef, useEffect, createContext } from '@wordpress/element';\nimport {\n\tcomputeCaretRect,\n\tfocus,\n\tisHorizontalEdge,\n\tisVerticalEdge,\n\tplaceCaretAtHorizontalEdge,\n\tplaceCaretAtVerticalEdge,\n\tisEntirelySelected,\n} from '@wordpress/dom';\nimport {\n\tUP,\n\tDOWN,\n\tLEFT,\n\tRIGHT,\n\tTAB,\n\tisKeyboardEvent,\n\tESCAPE,\n} from '@wordpress/keycodes';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { isInSameBlock, getBlockClientId } from '../../utils/dom';\nimport FocusCapture from './focus-capture';\nimport useMultiSelection from './use-multi-selection';\nimport { store as blockEditorStore } from '../../store';\n\nexport const SelectionStart = createContext();\n\nfunction getComputedStyle( node ) {\n\treturn node.ownerDocument.defaultView.getComputedStyle( node );\n}\n\nfunction isFormElement( element ) {\n\tconst { tagName } = element;\n\treturn (\n\t\ttagName === 'INPUT' ||\n\t\ttagName === 'BUTTON' ||\n\t\ttagName === 'SELECT' ||\n\t\ttagName === 'TEXTAREA'\n\t);\n}\n\n/**\n * Returns true if the element should consider edge navigation upon a keyboard\n * event of the given directional key code, or false otherwise.\n *\n * @param {Element} element     HTML element to test.\n * @param {number}  keyCode     KeyboardEvent keyCode to test.\n * @param {boolean} hasModifier Whether a modifier is pressed.\n *\n * @return {boolean} Whether element should consider edge navigation.\n */\nexport function isNavigationCandidate( element, keyCode, hasModifier ) {\n\tconst isVertical = keyCode === UP || keyCode === DOWN;\n\n\t// Currently, all elements support unmodified vertical navigation.\n\tif ( isVertical && ! hasModifier ) {\n\t\treturn true;\n\t}\n\n\t// Native inputs should not navigate horizontally.\n\tconst { tagName } = element;\n\treturn tagName !== 'INPUT' && tagName !== 'TEXTAREA';\n}\n\n/**\n * Returns the optimal tab target from the given focused element in the\n * desired direction. A preference is made toward text fields, falling back\n * to the block focus stop if no other candidates exist for the block.\n *\n * @param {Element} target           Currently focused text field.\n * @param {boolean} isReverse        True if considering as the first field.\n * @param {Element} containerElement Element containing all blocks.\n * @param {boolean} onlyVertical     Whether to only consider tabbable elements\n *                                   that are visually above or under the\n *                                   target.\n *\n * @return {?Element} Optimal tab target, if one exists.\n */\nexport function getClosestTabbable(\n\ttarget,\n\tisReverse,\n\tcontainerElement,\n\tonlyVertical\n) {\n\t// Since the current focus target is not guaranteed to be a text field,\n\t// find all focusables. Tabbability is considered later.\n\tlet focusableNodes = focus.focusable.find( containerElement );\n\n\tif ( isReverse ) {\n\t\tfocusableNodes = reverse( focusableNodes );\n\t}\n\n\t// Consider as candidates those focusables after the current target.\n\t// It's assumed this can only be reached if the target is focusable\n\t// (on its keydown event), so no need to verify it exists in the set.\n\tfocusableNodes = focusableNodes.slice(\n\t\tfocusableNodes.indexOf( target ) + 1\n\t);\n\n\tlet targetRect;\n\n\tif ( onlyVertical ) {\n\t\ttargetRect = target.getBoundingClientRect();\n\t}\n\n\tfunction isTabCandidate( node ) {\n\t\t// Not a candidate if the node is not tabbable.\n\t\tif ( ! focus.tabbable.isTabbableIndex( node ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Skip focusable elements such as links within content editable nodes.\n\t\tif ( node.isContentEditable && node.contentEditable !== 'true' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( onlyVertical ) {\n\t\t\tconst nodeRect = node.getBoundingClientRect();\n\n\t\t\tif (\n\t\t\t\tnodeRect.left >= targetRect.right ||\n\t\t\t\tnodeRect.right <= targetRect.left\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn find( focusableNodes, isTabCandidate );\n}\n\nfunction selector( select ) {\n\tconst {\n\t\tgetSelectedBlockClientId,\n\t\tgetMultiSelectedBlocksStartClientId,\n\t\tgetMultiSelectedBlocksEndClientId,\n\t\tgetPreviousBlockClientId,\n\t\tgetNextBlockClientId,\n\t\tgetFirstMultiSelectedBlockClientId,\n\t\tgetLastMultiSelectedBlockClientId,\n\t\thasMultiSelection,\n\t\tgetBlockOrder,\n\t\tisSelectionEnabled,\n\t\tgetBlockSelectionStart,\n\t\tisMultiSelecting,\n\t\tgetSettings,\n\t} = select( blockEditorStore );\n\n\tconst selectedBlockClientId = getSelectedBlockClientId();\n\tconst selectionStartClientId = getMultiSelectedBlocksStartClientId();\n\tconst selectionEndClientId = getMultiSelectedBlocksEndClientId();\n\tconst blocks = getBlockOrder();\n\n\treturn {\n\t\tselectedBlockClientId,\n\t\tselectionStartClientId,\n\t\tselectionBeforeEndClientId: getPreviousBlockClientId(\n\t\t\tselectionEndClientId || selectedBlockClientId\n\t\t),\n\t\tselectionAfterEndClientId: getNextBlockClientId(\n\t\t\tselectionEndClientId || selectedBlockClientId\n\t\t),\n\t\tselectedFirstClientId: getFirstMultiSelectedBlockClientId(),\n\t\tselectedLastClientId: getLastMultiSelectedBlockClientId(),\n\t\thasMultiSelection: hasMultiSelection(),\n\t\tfirstBlock: first( blocks ),\n\t\tlastBlock: last( blocks ),\n\t\tisSelectionEnabled: isSelectionEnabled(),\n\t\tblockSelectionStart: getBlockSelectionStart(),\n\t\tisMultiSelecting: isMultiSelecting(),\n\t\tkeepCaretInsideBlock: getSettings().keepCaretInsideBlock,\n\t};\n}\n\n/**\n * Handles selection and navigation across blocks. This component should be\n * wrapped around BlockList.\n *\n * @param {Object}    props          Component properties.\n * @param {WPElement} props.children Children to be rendered.\n */\nexport default function WritingFlow( { children } ) {\n\tconst container = useRef();\n\tconst focusCaptureBeforeRef = useRef();\n\tconst focusCaptureAfterRef = useRef();\n\tconst multiSelectionContainer = useRef();\n\n\tconst entirelySelected = useRef();\n\n\t// Reference that holds the a flag for enabling or disabling\n\t// capturing on the focus capture elements.\n\tconst noCapture = useRef();\n\n\t// Here a DOMRect is stored while moving the caret vertically so vertical\n\t// position of the start position can be restored. This is to recreate\n\t// browser behaviour across blocks.\n\tconst verticalRect = useRef();\n\n\tconst onSelectionStart = useMultiSelection( container );\n\n\tconst {\n\t\tselectedBlockClientId,\n\t\tselectionStartClientId,\n\t\tselectionBeforeEndClientId,\n\t\tselectionAfterEndClientId,\n\t\tselectedFirstClientId,\n\t\tselectedLastClientId,\n\t\thasMultiSelection,\n\t\tfirstBlock,\n\t\tlastBlock,\n\t\tisSelectionEnabled,\n\t\tblockSelectionStart,\n\t\tisMultiSelecting,\n\t\tkeepCaretInsideBlock,\n\t} = useSelect( selector, [] );\n\tconst { multiSelect, selectBlock, setNavigationMode } = useDispatch(\n\t\tblockEditorStore\n\t);\n\n\tfunction onMouseDown( event ) {\n\t\tverticalRect.current = null;\n\n\t\t// Multi-select blocks when Shift+clicking.\n\t\tif (\n\t\t\tisSelectionEnabled &&\n\t\t\t// The main button.\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\t\t\tevent.button === 0\n\t\t) {\n\t\t\tconst clientId = getBlockClientId( event.target );\n\n\t\t\tif ( clientId ) {\n\t\t\t\tif ( event.shiftKey ) {\n\t\t\t\t\tif ( blockSelectionStart !== clientId ) {\n\t\t\t\t\t\tmultiSelect( blockSelectionStart, clientId );\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\t// Allow user to escape out of a multi-selection to a singular\n\t\t\t\t\t// selection of a block via click. This is handled here since\n\t\t\t\t\t// focus handling excludes blocks when there is multiselection,\n\t\t\t\t\t// as focus can be incurred by starting a multiselection (focus\n\t\t\t\t\t// moved to first block's multi-controls).\n\t\t\t\t} else if ( hasMultiSelection ) {\n\t\t\t\t\tselectBlock( clientId );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction expandSelection( isReverse ) {\n\t\tconst nextSelectionEndClientId = isReverse\n\t\t\t? selectionBeforeEndClientId\n\t\t\t: selectionAfterEndClientId;\n\n\t\tif ( nextSelectionEndClientId ) {\n\t\t\tmultiSelect(\n\t\t\t\tselectionStartClientId || selectedBlockClientId,\n\t\t\t\tnextSelectionEndClientId\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction moveSelection( isReverse ) {\n\t\tconst focusedBlockClientId = isReverse\n\t\t\t? selectedFirstClientId\n\t\t\t: selectedLastClientId;\n\n\t\tif ( focusedBlockClientId ) {\n\t\t\tselectBlock( focusedBlockClientId );\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the given target field is the last in its block which\n\t * can be considered for tab transition. For example, in a block with two\n\t * text fields, this would return true when reversing from the first of the\n\t * two fields, but false when reversing from the second.\n\t *\n\t * @param {Element} target    Currently focused text field.\n\t * @param {boolean} isReverse True if considering as the first field.\n\t *\n\t * @return {boolean} Whether field is at edge for tab transition.\n\t */\n\tfunction isTabbableEdge( target, isReverse ) {\n\t\tconst closestTabbable = getClosestTabbable(\n\t\t\ttarget,\n\t\t\tisReverse,\n\t\t\tcontainer.current\n\t\t);\n\t\treturn ! closestTabbable || ! isInSameBlock( target, closestTabbable );\n\t}\n\n\tfunction onKeyDown( event ) {\n\t\tconst { keyCode, target } = event;\n\n\t\t// Handle only if the event occurred within the same DOM hierarchy as\n\t\t// the rendered container. This is used to distinguish between events\n\t\t// which bubble through React's virtual event system from those which\n\t\t// strictly occur in the DOM created by the component.\n\t\t//\n\t\t// The implication here is: If it's not desirable for a bubbled event to\n\t\t// be considered by WritingFlow, it can be avoided by rendering to a\n\t\t// distinct place in the DOM (e.g. using Slot/Fill).\n\t\tif ( ! container.current.contains( target ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isUp = keyCode === UP;\n\t\tconst isDown = keyCode === DOWN;\n\t\tconst isLeft = keyCode === LEFT;\n\t\tconst isRight = keyCode === RIGHT;\n\t\tconst isTab = keyCode === TAB;\n\t\tconst isEscape = keyCode === ESCAPE;\n\t\tconst isReverse = isUp || isLeft;\n\t\tconst isHorizontal = isLeft || isRight;\n\t\tconst isVertical = isUp || isDown;\n\t\tconst isNav = isHorizontal || isVertical;\n\t\tconst isShift = event.shiftKey;\n\t\tconst hasModifier =\n\t\t\tisShift || event.ctrlKey || event.altKey || event.metaKey;\n\t\tconst isNavEdge = isVertical ? isVerticalEdge : isHorizontalEdge;\n\t\tconst { ownerDocument } = container.current;\n\t\tconst { defaultView } = ownerDocument;\n\n\t\t// In Edit mode, Tab should focus the first tabbable element after the\n\t\t// content, which is normally the sidebar (with block controls) and\n\t\t// Shift+Tab should focus the first tabbable element before the content,\n\t\t// which is normally the block toolbar.\n\t\t// Arrow keys can be used, and Tab and arrow keys can be used in\n\t\t// Navigation mode (press Esc), to navigate through blocks.\n\t\tif ( selectedBlockClientId ) {\n\t\t\tif ( isTab ) {\n\t\t\t\tconst direction = isShift ? 'findPrevious' : 'findNext';\n\t\t\t\t// Allow tabbing between form elements rendered in a block,\n\t\t\t\t// such as inside a placeholder. Form elements are generally\n\t\t\t\t// meant to be UI rather than part of the content. Ideally\n\t\t\t\t// these are not rendered in the content and perhaps in the\n\t\t\t\t// future they can be rendered in an iframe or shadow DOM.\n\t\t\t\tif (\n\t\t\t\t\tisFormElement( target ) &&\n\t\t\t\t\tisFormElement( focus.tabbable[ direction ]( target ) )\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst next = isShift\n\t\t\t\t\t? focusCaptureBeforeRef\n\t\t\t\t\t: focusCaptureAfterRef;\n\n\t\t\t\t// Disable focus capturing on the focus capture element, so it\n\t\t\t\t// doesn't refocus this block and so it allows default behaviour\n\t\t\t\t// (moving focus to the next tabbable element).\n\t\t\t\tnoCapture.current = true;\n\t\t\t\tnext.current.focus();\n\t\t\t\treturn;\n\t\t\t} else if ( isEscape ) {\n\t\t\t\tsetNavigationMode( true );\n\t\t\t}\n\t\t}\n\n\t\t// When presing any key other than up or down, the initial vertical\n\t\t// position must ALWAYS be reset. The vertical position is saved so it\n\t\t// can be restored as well as possible on sebsequent vertical arrow key\n\t\t// presses. It may not always be possible to restore the exact same\n\t\t// position (such as at an empty line), so it wouldn't be good to\n\t\t// compute the position right before any vertical arrow key press.\n\t\tif ( ! isVertical ) {\n\t\t\tverticalRect.current = null;\n\t\t} else if ( ! verticalRect.current ) {\n\t\t\tverticalRect.current = computeCaretRect( defaultView );\n\t\t}\n\n\t\t// This logic inside this condition needs to be checked before\n\t\t// the check for event.nativeEvent.defaultPrevented.\n\t\t// The logic handles meta+a keypress and this event is default prevented\n\t\t// by RichText.\n\t\tif ( ! isNav ) {\n\t\t\t// Set immediately before the meta+a combination can be pressed.\n\t\t\tif ( isKeyboardEvent.primary( event ) ) {\n\t\t\t\tentirelySelected.current = isEntirelySelected( target );\n\t\t\t}\n\n\t\t\tif ( isKeyboardEvent.primary( event, 'a' ) ) {\n\t\t\t\t// When the target is contentEditable, selection will already\n\t\t\t\t// have been set by the browser earlier in this call stack. We\n\t\t\t\t// need check the previous result, otherwise all blocks will be\n\t\t\t\t// selected right away.\n\t\t\t\tif (\n\t\t\t\t\ttarget.isContentEditable\n\t\t\t\t\t\t? entirelySelected.current\n\t\t\t\t\t\t: isEntirelySelected( target )\n\t\t\t\t) {\n\t\t\t\t\tmultiSelect( firstBlock, lastBlock );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t\t// After pressing primary + A we can assume isEntirelySelected is true.\n\t\t\t\t// Calling right away isEntirelySelected after primary + A may still return false on some browsers.\n\t\t\t\tentirelySelected.current = true;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if navigation has already been handled (e.g. RichText inline\n\t\t// boundaries).\n\t\tif ( event.nativeEvent.defaultPrevented ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if our current target is not a candidate for navigation (e.g.\n\t\t// preserve native input behaviors).\n\t\tif ( ! isNavigationCandidate( target, keyCode, hasModifier ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In the case of RTL scripts, right means previous and left means next,\n\t\t// which is the exact reverse of LTR.\n\t\tconst { direction } = getComputedStyle( target );\n\t\tconst isReverseDir = direction === 'rtl' ? ! isReverse : isReverse;\n\n\t\tif ( isShift ) {\n\t\t\tif (\n\t\t\t\t// Ensure that there is a target block.\n\t\t\t\t( ( isReverse && selectionBeforeEndClientId ) ||\n\t\t\t\t\t( ! isReverse && selectionAfterEndClientId ) ) &&\n\t\t\t\tisTabbableEdge( target, isReverse ) &&\n\t\t\t\tisNavEdge( target, isReverse )\n\t\t\t) {\n\t\t\t\t// Shift key is down, and there is multi selection or we're at\n\t\t\t\t// the end of the current block.\n\t\t\t\texpandSelection( isReverse );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t} else if (\n\t\t\tisVertical &&\n\t\t\tisVerticalEdge( target, isReverse ) &&\n\t\t\t! keepCaretInsideBlock\n\t\t) {\n\t\t\tconst closestTabbable = getClosestTabbable(\n\t\t\t\ttarget,\n\t\t\t\tisReverse,\n\t\t\t\tcontainer.current,\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\tif ( closestTabbable ) {\n\t\t\t\tplaceCaretAtVerticalEdge(\n\t\t\t\t\tclosestTabbable,\n\t\t\t\t\tisReverse,\n\t\t\t\t\tverticalRect.current\n\t\t\t\t);\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t} else if (\n\t\t\tisHorizontal &&\n\t\t\tdefaultView.getSelection().isCollapsed &&\n\t\t\tisHorizontalEdge( target, isReverseDir ) &&\n\t\t\t! keepCaretInsideBlock\n\t\t) {\n\t\t\tconst closestTabbable = getClosestTabbable(\n\t\t\t\ttarget,\n\t\t\t\tisReverseDir,\n\t\t\t\tcontainer.current\n\t\t\t);\n\t\t\tplaceCaretAtHorizontalEdge( closestTabbable, isReverseDir );\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tfunction onMultiSelectKeyDown( event ) {\n\t\tconst { keyCode, shiftKey } = event;\n\t\tconst isUp = keyCode === UP;\n\t\tconst isDown = keyCode === DOWN;\n\t\tconst isLeft = keyCode === LEFT;\n\t\tconst isRight = keyCode === RIGHT;\n\t\tconst isReverse = isUp || isLeft;\n\t\tconst isHorizontal = isLeft || isRight;\n\t\tconst isVertical = isUp || isDown;\n\t\tconst isNav = isHorizontal || isVertical;\n\n\t\tif ( keyCode === TAB ) {\n\t\t\t// Disable focus capturing on the focus capture element, so it\n\t\t\t// doesn't refocus this element and so it allows default behaviour\n\t\t\t// (moving focus to the next tabbable element).\n\t\t\tnoCapture.current = true;\n\n\t\t\tif ( shiftKey ) {\n\t\t\t\tfocusCaptureBeforeRef.current.focus();\n\t\t\t} else {\n\t\t\t\tfocusCaptureAfterRef.current.focus();\n\t\t\t}\n\t\t} else if ( isNav ) {\n\t\t\tconst action = shiftKey ? expandSelection : moveSelection;\n\t\t\taction( isReverse );\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tuseEffect( () => {\n\t\tif ( hasMultiSelection && ! isMultiSelecting ) {\n\t\t\tmultiSelectionContainer.current.focus();\n\t\t}\n\t}, [ hasMultiSelection, isMultiSelecting ] );\n\n\tconst lastFocus = useRef();\n\n\tuseEffect( () => {\n\t\tfunction onFocusOut( event ) {\n\t\t\tlastFocus.current = event.target;\n\t\t}\n\n\t\tcontainer.current.addEventListener( 'focusout', onFocusOut );\n\t\treturn () => {\n\t\t\tcontainer.current.removeEventListener( 'focusout', onFocusOut );\n\t\t};\n\t}, [] );\n\n\t// Disable reason: Wrapper itself is non-interactive, but must capture\n\t// bubbling events from children to determine focus transition intents.\n\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\treturn (\n\t\t<SelectionStart.Provider value={ onSelectionStart }>\n\t\t\t<FocusCapture\n\t\t\t\tref={ focusCaptureBeforeRef }\n\t\t\t\tselectedClientId={ selectedBlockClientId }\n\t\t\t\tcontainerRef={ container }\n\t\t\t\tnoCapture={ noCapture }\n\t\t\t\tlastFocus={ lastFocus }\n\t\t\t\thasMultiSelection={ hasMultiSelection }\n\t\t\t\tmultiSelectionContainer={ multiSelectionContainer }\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tref={ multiSelectionContainer }\n\t\t\t\ttabIndex={ hasMultiSelection ? '0' : undefined }\n\t\t\t\taria-label={\n\t\t\t\t\thasMultiSelection\n\t\t\t\t\t\t? __( 'Multiple selected blocks' )\n\t\t\t\t\t\t: undefined\n\t\t\t\t}\n\t\t\t\t// Needs to be positioned within the viewport, so focus to this\n\t\t\t\t// element does not scroll the page.\n\t\t\t\tstyle={ { position: 'fixed' } }\n\t\t\t\tonKeyDown={ onMultiSelectKeyDown }\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tref={ container }\n\t\t\t\tclassName=\"block-editor-writing-flow\"\n\t\t\t\tonKeyDown={ onKeyDown }\n\t\t\t\tonMouseDown={ onMouseDown }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t\t<FocusCapture\n\t\t\t\tref={ focusCaptureAfterRef }\n\t\t\t\tselectedClientId={ selectedBlockClientId }\n\t\t\t\tcontainerRef={ container }\n\t\t\t\tnoCapture={ noCapture }\n\t\t\t\tlastFocus={ lastFocus }\n\t\t\t\thasMultiSelection={ hasMultiSelection }\n\t\t\t\tmultiSelectionContainer={ multiSelectionContainer }\n\t\t\t\tisReverse\n\t\t\t/>\n\t\t</SelectionStart.Provider>\n\t);\n\t/* eslint-enable jsx-a11y/no-static-element-interactions */\n}\n"]}