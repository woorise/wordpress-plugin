{"version":3,"sources":["@wordpress/block-editor/src/components/writing-flow/use-multi-selection.js"],"names":["useEffect","useRef","useCallback","useSelect","useDispatch","getBlockClientId","getBlockDOMNode","store","blockEditorStore","getDeepestNode","node","type","child","sibling","nodeType","TEXT_NODE","test","data","selector","select","isSelectionEnabled","isMultiSelecting","getMultiSelectedBlockClientIds","hasMultiSelection","getBlockParents","getSelectedBlockClientId","multiSelectedBlockClientIds","selectedBlockClientId","toggleRichText","container","toggle","Array","from","querySelectorAll","forEach","setAttribute","removeAttribute","useMultiSelection","ref","startMultiSelect","stopMultiSelect","multiSelect","selectBlock","rafId","startClientId","anchorElement","ownerDocument","current","defaultView","selection","getSelection","rangeCount","isCollapsed","blockNode","getRangeAt","startContainer","endContainer","contains","removeAllRanges","length","start","end","startNode","endNode","range","createRange","setStartBefore","setEndAfter","addRange","onSelectionChange","isSelectionEnd","clientId","focusNode","isSingularSelection","commonAncestorContainer","focus","startPath","endPath","depth","Math","min","onSelectionEnd","removeEventListener","requestAnimationFrame","cancelAnimationFrame","activeElement","addEventListener"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEffect, useRef, useCallback } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { getBlockClientId, getBlockDOMNode } from '../../utils/dom';\nimport { store as blockEditorStore } from '../../store';\n\n/**\n * Returns for the deepest node at the start or end of a container node. Ignores\n * any text nodes that only contain HTML formatting whitespace.\n *\n * @param {Element} node Container to search.\n * @param {string} type 'start' or 'end'.\n */\nfunction getDeepestNode( node, type ) {\n\tconst child = type === 'start' ? 'firstChild' : 'lastChild';\n\tconst sibling = type === 'start' ? 'nextSibling' : 'previousSibling';\n\n\twhile ( node[ child ] ) {\n\t\tnode = node[ child ];\n\n\t\twhile (\n\t\t\tnode.nodeType === node.TEXT_NODE &&\n\t\t\t/^[ \\t\\n]*$/.test( node.data ) &&\n\t\t\tnode[ sibling ]\n\t\t) {\n\t\t\tnode = node[ sibling ];\n\t\t}\n\t}\n\n\treturn node;\n}\n\nfunction selector( select ) {\n\tconst {\n\t\tisSelectionEnabled,\n\t\tisMultiSelecting,\n\t\tgetMultiSelectedBlockClientIds,\n\t\thasMultiSelection,\n\t\tgetBlockParents,\n\t\tgetSelectedBlockClientId,\n\t} = select( blockEditorStore );\n\n\treturn {\n\t\tisSelectionEnabled: isSelectionEnabled(),\n\t\tisMultiSelecting: isMultiSelecting(),\n\t\tmultiSelectedBlockClientIds: getMultiSelectedBlockClientIds(),\n\t\thasMultiSelection: hasMultiSelection(),\n\t\tgetBlockParents,\n\t\tselectedBlockClientId: getSelectedBlockClientId(),\n\t};\n}\n\nfunction toggleRichText( container, toggle ) {\n\tArray.from( container.querySelectorAll( '.rich-text' ) ).forEach(\n\t\t( node ) => {\n\t\t\tif ( toggle ) {\n\t\t\t\tnode.setAttribute( 'contenteditable', true );\n\t\t\t} else {\n\t\t\t\tnode.removeAttribute( 'contenteditable' );\n\t\t\t}\n\t\t}\n\t);\n}\n\nexport default function useMultiSelection( ref ) {\n\tconst {\n\t\tisSelectionEnabled,\n\t\tisMultiSelecting,\n\t\tmultiSelectedBlockClientIds,\n\t\thasMultiSelection,\n\t\tgetBlockParents,\n\t\tselectedBlockClientId,\n\t} = useSelect( selector, [] );\n\tconst {\n\t\tstartMultiSelect,\n\t\tstopMultiSelect,\n\t\tmultiSelect,\n\t\tselectBlock,\n\t} = useDispatch( blockEditorStore );\n\tconst rafId = useRef();\n\tconst startClientId = useRef();\n\tconst anchorElement = useRef();\n\n\t/**\n\t * When the component updates, and there is multi selection, we need to\n\t * select the entire block contents.\n\t */\n\tuseEffect( () => {\n\t\tconst { ownerDocument } = ref.current;\n\t\tconst { defaultView } = ownerDocument;\n\n\t\tif ( ! hasMultiSelection || isMultiSelecting ) {\n\t\t\tif ( ! selectedBlockClientId || isMultiSelecting ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selection = defaultView.getSelection();\n\n\t\t\tif ( selection.rangeCount && ! selection.isCollapsed ) {\n\t\t\t\tconst blockNode = getBlockDOMNode(\n\t\t\t\t\tselectedBlockClientId,\n\t\t\t\t\townerDocument\n\t\t\t\t);\n\t\t\t\tconst { startContainer, endContainer } = selection.getRangeAt(\n\t\t\t\t\t0\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\t!! blockNode &&\n\t\t\t\t\t( ! blockNode.contains( startContainer ) ||\n\t\t\t\t\t\t! blockNode.contains( endContainer ) )\n\t\t\t\t) {\n\t\t\t\t\tselection.removeAllRanges();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst { length } = multiSelectedBlockClientIds;\n\n\t\tif ( length < 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// These must be in the right DOM order.\n\t\tconst start = multiSelectedBlockClientIds[ 0 ];\n\t\tconst end = multiSelectedBlockClientIds[ length - 1 ];\n\n\t\tlet startNode = getBlockDOMNode( start, ownerDocument );\n\t\tlet endNode = getBlockDOMNode( end, ownerDocument );\n\n\t\tconst selection = defaultView.getSelection();\n\t\tconst range = ownerDocument.createRange();\n\n\t\t// The most stable way to select the whole block contents is to start\n\t\t// and end at the deepest points.\n\t\tstartNode = getDeepestNode( startNode, 'start' );\n\t\tendNode = getDeepestNode( endNode, 'end' );\n\n\t\trange.setStartBefore( startNode );\n\t\trange.setEndAfter( endNode );\n\n\t\tselection.removeAllRanges();\n\t\tselection.addRange( range );\n\t}, [\n\t\thasMultiSelection,\n\t\tisMultiSelecting,\n\t\tmultiSelectedBlockClientIds,\n\t\tselectBlock,\n\t\tselectedBlockClientId,\n\t] );\n\n\tconst onSelectionChange = useCallback(\n\t\t( { isSelectionEnd } ) => {\n\t\t\tconst { ownerDocument } = ref.current;\n\t\t\tconst { defaultView } = ownerDocument;\n\t\t\tconst selection = defaultView.getSelection();\n\n\t\t\t// If no selection is found, end multi selection and enable all rich\n\t\t\t// text areas.\n\t\t\tif ( ! selection.rangeCount || selection.isCollapsed ) {\n\t\t\t\ttoggleRichText( ref.current, true );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst clientId = getBlockClientId( selection.focusNode );\n\t\t\tconst isSingularSelection = startClientId.current === clientId;\n\n\t\t\tif ( isSingularSelection ) {\n\t\t\t\tselectBlock( clientId );\n\n\t\t\t\t// If the selection is complete (on mouse up), and no multiple\n\t\t\t\t// blocks have been selected, set focus back to the anchor element\n\t\t\t\t// if the anchor element contains the selection. Additionally, rich\n\t\t\t\t// text elements that were previously disabled can now be enabled\n\t\t\t\t// again.\n\t\t\t\tif ( isSelectionEnd ) {\n\t\t\t\t\ttoggleRichText( ref.current, true );\n\n\t\t\t\t\tif ( selection.rangeCount ) {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tcommonAncestorContainer,\n\t\t\t\t\t\t} = selection.getRangeAt( 0 );\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tanchorElement.current.contains(\n\t\t\t\t\t\t\t\tcommonAncestorContainer\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tanchorElement.current.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst startPath = [\n\t\t\t\t\t...getBlockParents( startClientId.current ),\n\t\t\t\t\tstartClientId.current,\n\t\t\t\t];\n\t\t\t\tconst endPath = [ ...getBlockParents( clientId ), clientId ];\n\t\t\t\tconst depth = Math.min( startPath.length, endPath.length ) - 1;\n\n\t\t\t\tmultiSelect( startPath[ depth ], endPath[ depth ] );\n\t\t\t}\n\t\t},\n\t\t[ selectBlock, getBlockParents, multiSelect ]\n\t);\n\n\t/**\n\t * Handles a mouseup event to end the current mouse multi-selection.\n\t */\n\tconst onSelectionEnd = useCallback( () => {\n\t\tconst { ownerDocument } = ref.current;\n\t\tconst { defaultView } = ownerDocument;\n\t\townerDocument.removeEventListener(\n\t\t\t'selectionchange',\n\t\t\tonSelectionChange\n\t\t);\n\t\t// Equivalent to attaching the listener once.\n\t\tdefaultView.removeEventListener( 'mouseup', onSelectionEnd );\n\t\t// The browser selection won't have updated yet at this point, so wait\n\t\t// until the next animation frame to get the browser selection.\n\t\trafId.current = defaultView.requestAnimationFrame( () => {\n\t\t\tonSelectionChange( { isSelectionEnd: true } );\n\t\t\tstopMultiSelect();\n\t\t} );\n\t}, [ onSelectionChange, stopMultiSelect ] );\n\n\t// Only clean up when unmounting, these are added and cleaned up elsewhere.\n\tuseEffect( () => {\n\t\tconst { ownerDocument } = ref.current;\n\t\tconst { defaultView } = ownerDocument;\n\n\t\treturn () => {\n\t\t\townerDocument.removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\tonSelectionChange\n\t\t\t);\n\t\t\tdefaultView.removeEventListener( 'mouseup', onSelectionEnd );\n\t\t\tdefaultView.cancelAnimationFrame( rafId.current );\n\t\t};\n\t}, [ onSelectionChange, onSelectionEnd ] );\n\n\t/**\n\t * Binds event handlers to the document for tracking a pending multi-select\n\t * in response to a mousedown event occurring in a rendered block.\n\t */\n\treturn useCallback(\n\t\t( clientId ) => {\n\t\t\tif ( ! isSelectionEnabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { ownerDocument } = ref.current;\n\t\t\tconst { defaultView } = ownerDocument;\n\n\t\t\tstartClientId.current = clientId;\n\t\t\tanchorElement.current = ownerDocument.activeElement;\n\t\t\tstartMultiSelect();\n\n\t\t\t// `onSelectionStart` is called after `mousedown` and `mouseleave`\n\t\t\t// (from a block). The selection ends when `mouseup` happens anywhere\n\t\t\t// in the window.\n\t\t\townerDocument.addEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\tonSelectionChange\n\t\t\t);\n\t\t\tdefaultView.addEventListener( 'mouseup', onSelectionEnd );\n\n\t\t\t// Removing the contenteditable attributes within the block editor is\n\t\t\t// essential for selection to work across editable areas. The edible\n\t\t\t// hosts are removed, allowing selection to be extended outside the\n\t\t\t// DOM element. `startMultiSelect` sets a flag in the store so the rich\n\t\t\t// text components are updated, but the rerender may happen very slowly,\n\t\t\t// especially in Safari for the blocks that are asynchonously rendered.\n\t\t\t// To ensure the browser instantly removes the selection boundaries, we\n\t\t\t// remove the contenteditable attributes manually.\n\t\t\ttoggleRichText( ref.current, false );\n\t\t},\n\t\t[ isSelectionEnabled, startMultiSelect, onSelectionEnd ]\n\t);\n}\n"]}