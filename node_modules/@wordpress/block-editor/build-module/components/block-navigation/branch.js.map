{"version":3,"sources":["@wordpress/block-editor/src/components/block-navigation/branch.js"],"names":["map","compact","Fragment","BlockNavigationBlock","BlockNavigationAppender","isClientIdSelected","BlockNavigationBranch","props","blocks","selectBlock","selectedBlockClientIds","showAppender","showBlockMovers","showNestedBlocks","parentBlockClientId","level","terminatedLevels","path","isBranchSelected","isLastOfBranch","isTreeRoot","filteredBlocks","itemHasAppender","parentClientId","hasAppender","blockCount","length","rowCount","appenderPosition","block","index","clientId","innerBlocks","position","isLastRowAtLevel","updatedTerminatedLevels","updatedPath","hasNestedBlocks","hasNestedAppender","hasNestedBranch","isSelected","isSelectedBranch","isLastBlock","isLast","isLastOfSelectedBranch","defaultProps"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { map, compact } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport BlockNavigationBlock from './block';\nimport BlockNavigationAppender from './appender';\nimport { isClientIdSelected } from './utils';\nexport default function BlockNavigationBranch( props ) {\n\tconst {\n\t\tblocks,\n\t\tselectBlock,\n\t\tselectedBlockClientIds,\n\t\tshowAppender,\n\t\tshowBlockMovers,\n\t\tshowNestedBlocks,\n\t\tparentBlockClientId,\n\t\tlevel = 1,\n\t\tterminatedLevels = [],\n\t\tpath = [],\n\t\tisBranchSelected = false,\n\t\tisLastOfBranch = false,\n\t} = props;\n\n\tconst isTreeRoot = ! parentBlockClientId;\n\tconst filteredBlocks = compact( blocks );\n\tconst itemHasAppender = ( parentClientId ) =>\n\t\tshowAppender &&\n\t\t! isTreeRoot &&\n\t\tisClientIdSelected( parentClientId, selectedBlockClientIds );\n\tconst hasAppender = itemHasAppender( parentBlockClientId );\n\t// Add +1 to the rowCount to take the block appender into account.\n\tconst blockCount = filteredBlocks.length;\n\tconst rowCount = hasAppender ? blockCount + 1 : blockCount;\n\tconst appenderPosition = rowCount;\n\n\treturn (\n\t\t<>\n\t\t\t{ map( filteredBlocks, ( block, index ) => {\n\t\t\t\tconst { clientId, innerBlocks } = block;\n\t\t\t\tconst position = index + 1;\n\t\t\t\tconst isLastRowAtLevel = rowCount === position;\n\t\t\t\tconst updatedTerminatedLevels = isLastRowAtLevel\n\t\t\t\t\t? [ ...terminatedLevels, level ]\n\t\t\t\t\t: terminatedLevels;\n\t\t\t\tconst updatedPath = [ ...path, position ];\n\t\t\t\tconst hasNestedBlocks =\n\t\t\t\t\tshowNestedBlocks && !! innerBlocks && !! innerBlocks.length;\n\t\t\t\tconst hasNestedAppender = itemHasAppender( clientId );\n\t\t\t\tconst hasNestedBranch = hasNestedBlocks || hasNestedAppender;\n\n\t\t\t\tconst isSelected = isClientIdSelected(\n\t\t\t\t\tclientId,\n\t\t\t\t\tselectedBlockClientIds\n\t\t\t\t);\n\t\t\t\tconst isSelectedBranch =\n\t\t\t\t\tisBranchSelected || ( isSelected && hasNestedBranch );\n\n\t\t\t\t// Logic needed to target the last item of a selected branch which might be deeply nested.\n\t\t\t\t// This is currently only needed for styling purposes. See: `.is-last-of-selected-branch`.\n\t\t\t\tconst isLastBlock = index === blockCount - 1;\n\t\t\t\tconst isLast = isSelected || ( isLastOfBranch && isLastBlock );\n\t\t\t\tconst isLastOfSelectedBranch =\n\t\t\t\t\tisLastOfBranch && ! hasNestedBranch && isLastBlock;\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment key={ clientId }>\n\t\t\t\t\t\t<BlockNavigationBlock\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\tonClick={ selectBlock }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tisBranchSelected={ isSelectedBranch }\n\t\t\t\t\t\t\tisLastOfSelectedBranch={ isLastOfSelectedBranch }\n\t\t\t\t\t\t\tlevel={ level }\n\t\t\t\t\t\t\tposition={ position }\n\t\t\t\t\t\t\trowCount={ rowCount }\n\t\t\t\t\t\t\tsiblingBlockCount={ blockCount }\n\t\t\t\t\t\t\tshowBlockMovers={ showBlockMovers }\n\t\t\t\t\t\t\tterminatedLevels={ terminatedLevels }\n\t\t\t\t\t\t\tpath={ updatedPath }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ hasNestedBranch && (\n\t\t\t\t\t\t\t<BlockNavigationBranch\n\t\t\t\t\t\t\t\tblocks={ innerBlocks }\n\t\t\t\t\t\t\t\tselectedBlockClientIds={\n\t\t\t\t\t\t\t\t\tselectedBlockClientIds\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tselectBlock={ selectBlock }\n\t\t\t\t\t\t\t\tisBranchSelected={ isSelectedBranch }\n\t\t\t\t\t\t\t\tisLastOfBranch={ isLast }\n\t\t\t\t\t\t\t\tshowAppender={ showAppender }\n\t\t\t\t\t\t\t\tshowBlockMovers={ showBlockMovers }\n\t\t\t\t\t\t\t\tshowNestedBlocks={ showNestedBlocks }\n\t\t\t\t\t\t\t\tparentBlockClientId={ clientId }\n\t\t\t\t\t\t\t\tlevel={ level + 1 }\n\t\t\t\t\t\t\t\tterminatedLevels={ updatedTerminatedLevels }\n\t\t\t\t\t\t\t\tpath={ updatedPath }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t\t{ hasAppender && (\n\t\t\t\t<BlockNavigationAppender\n\t\t\t\t\tparentBlockClientId={ parentBlockClientId }\n\t\t\t\t\tposition={ rowCount }\n\t\t\t\t\trowCount={ appenderPosition }\n\t\t\t\t\tlevel={ level }\n\t\t\t\t\tterminatedLevels={ terminatedLevels }\n\t\t\t\t\tpath={ [ ...path, appenderPosition ] }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nBlockNavigationBranch.defaultProps = {\n\tselectBlock: () => {},\n};\n"]}