{"version":3,"sources":["@wordpress/block-editor/src/components/block-navigation/tree.js"],"names":["__experimentalTreeGrid","TreeGrid","useMemo","useRef","__","BlockNavigationBranch","BlockNavigationContext","useBlockNavigationDropZone","BlockNavigationTree","__experimentalFeatures","__experimentalPersistentListViewFeatures","props","treeGridRef","blockDropTarget","undefined","contextValue"],"mappings":";;;AAAA;AACA;AACA;AAEA,SAASA,sBAAsB,IAAIC,QAAnC,QAAmD,uBAAnD;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,oBAAhC;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA;AACA;AACA;;AACA,OAAOC,qBAAP,MAAkC,UAAlC;AACA,SAASC,sBAAT,QAAuC,WAAvC;AACA,OAAOC,0BAAP,MAAuC,kCAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,mBAAT,OAIX;AAAA,MAHHC,sBAGG,QAHHA,sBAGG;AAAA,MAFHC,wCAEG,QAFHA,wCAEG;AAAA,MADAC,KACA;;AACH,MAAMC,WAAW,GAAGT,MAAM,EAA1B;AACA,MAAIU,eAAe,GAAGN,0BAA0B,CAAEK,WAAF,CAAhD;;AAEA,MAAK,CAAEH,sBAAP,EAAgC;AAC/BI,IAAAA,eAAe,GAAGC,SAAlB;AACA;;AAED,MAAMC,YAAY,GAAGb,OAAO,CAC3B;AAAA,WAAQ;AACPO,MAAAA,sBAAsB,EAAtBA,sBADO;AAEPC,MAAAA,wCAAwC,EAAxCA,wCAFO;AAGPG,MAAAA,eAAe,EAAfA;AAHO,KAAR;AAAA,GAD2B,EAM3B,CACCJ,sBADD,EAECC,wCAFD,EAGCG,eAHD,CAN2B,CAA5B;AAaA,SACC,cAAC,QAAD;AACC,IAAA,SAAS,EAAC,oCADX;AAEC,kBAAaT,EAAE,CAAE,4BAAF,CAFhB;AAGC,IAAA,GAAG,EAAGQ;AAHP,KAKC,cAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAGG;AAAzC,KACC,cAAC,qBAAD,EAA4BJ,KAA5B,CADD,CALD,CADD;AAWA","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { __experimentalTreeGrid as TreeGrid } from '@wordpress/components';\nimport { useMemo, useRef } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n/**\n * Internal dependencies\n */\nimport BlockNavigationBranch from './branch';\nimport { BlockNavigationContext } from './context';\nimport useBlockNavigationDropZone from './use-block-navigation-drop-zone';\n\n/**\n * Wrap `BlockNavigationRows` with `TreeGrid`. BlockNavigationRows is a\n * recursive component (it renders itself), so this ensures TreeGrid is only\n * present at the very top of the navigation grid.\n *\n * @param {Object}  props                                          Components props.\n * @param {boolean} props.__experimentalFeatures                   Flag to enable experimental features.\n * @param {boolean} props.__experimentalPersistentListViewFeatures Flag to enable features for the Persistent List View experiment.\n */\nexport default function BlockNavigationTree( {\n\t__experimentalFeatures,\n\t__experimentalPersistentListViewFeatures,\n\t...props\n} ) {\n\tconst treeGridRef = useRef();\n\tlet blockDropTarget = useBlockNavigationDropZone( treeGridRef );\n\n\tif ( ! __experimentalFeatures ) {\n\t\tblockDropTarget = undefined;\n\t}\n\n\tconst contextValue = useMemo(\n\t\t() => ( {\n\t\t\t__experimentalFeatures,\n\t\t\t__experimentalPersistentListViewFeatures,\n\t\t\tblockDropTarget,\n\t\t} ),\n\t\t[\n\t\t\t__experimentalFeatures,\n\t\t\t__experimentalPersistentListViewFeatures,\n\t\t\tblockDropTarget,\n\t\t]\n\t);\n\n\treturn (\n\t\t<TreeGrid\n\t\t\tclassName=\"block-editor-block-navigation-tree\"\n\t\t\taria-label={ __( 'Block navigation structure' ) }\n\t\t\tref={ treeGridRef }\n\t\t>\n\t\t\t<BlockNavigationContext.Provider value={ contextValue }>\n\t\t\t\t<BlockNavigationBranch { ...props } />\n\t\t\t</BlockNavigationContext.Provider>\n\t\t</TreeGrid>\n\t);\n}\n"]}