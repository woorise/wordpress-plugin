{"version":3,"sources":["@wordpress/block-editor/src/components/block-context/index.js"],"names":["createContext","useContext","useMemo","Context","BlockContextProvider","value","children","context","nextValue"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,OAApC,QAAmD,oBAAnD;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA,IAAMC,OAAO,GAAGH,aAAa,CAAE,EAAF,CAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,oBAAT,OAAqD;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAbC,QAAa,QAAbA,QAAa;AAC3D,MAAMC,OAAO,GAAGN,UAAU,CAAEE,OAAF,CAA1B;AACA,MAAMK,SAAS,GAAGN,OAAO,CAAE;AAAA,2CAAaK,OAAb,GAAyBF,KAAzB;AAAA,GAAF,EAAsC,CAC9DE,OAD8D,EAE9DF,KAF8D,CAAtC,CAAzB;AAKA,SAAO,cAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAGG,SAA1B;AAAsC,IAAA,QAAQ,EAAGF;AAAjD,IAAP;AACA;AAED,eAAeH,OAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createContext, useContext, useMemo } from '@wordpress/element';\n\n/** @typedef {import('react').ReactNode} ReactNode */\n\n/**\n * @typedef BlockContextProviderProps\n *\n * @property {Record<string,*>} value    Context value to merge with current\n *                                       value.\n * @property {ReactNode}        children Component children.\n */\n\n/** @type {import('react').Context<Record<string,*>>} */\nconst Context = createContext( {} );\n\n/**\n * Component which merges passed value with current consumed block context.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/block-context/README.md\n *\n * @param {BlockContextProviderProps} props\n */\nexport function BlockContextProvider( { value, children } ) {\n\tconst context = useContext( Context );\n\tconst nextValue = useMemo( () => ( { ...context, ...value } ), [\n\t\tcontext,\n\t\tvalue,\n\t] );\n\n\treturn <Context.Provider value={ nextValue } children={ children } />;\n}\n\nexport default Context;\n"]}