{"version":3,"sources":["@wordpress/block-editor/src/components/block-alignment-control/ui.js"],"names":["__","DropdownMenu","ToolbarGroup","positionCenter","positionLeft","positionRight","stretchFullWidth","stretchWide","useAvailableAlignments","BLOCK_ALIGNMENTS_CONTROLS","left","icon","title","center","right","wide","full","DEFAULT_CONTROL","POPOVER_PROPS","isAlternate","BlockAlignmentUI","value","onChange","controls","isToolbar","isCollapsed","isToolbarButton","enabledControls","length","applyOrUnset","align","undefined","activeAlignmentControl","defaultAlignmentControl","UIComponent","extraProps","describedBy","map","control","isActive","role","onClick"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { DropdownMenu, ToolbarGroup } from '@wordpress/components';\nimport {\n\tpositionCenter,\n\tpositionLeft,\n\tpositionRight,\n\tstretchFullWidth,\n\tstretchWide,\n} from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport useAvailableAlignments from './use-available-alignments';\n\nconst BLOCK_ALIGNMENTS_CONTROLS = {\n\tleft: {\n\t\ticon: positionLeft,\n\t\ttitle: __( 'Align left' ),\n\t},\n\tcenter: {\n\t\ticon: positionCenter,\n\t\ttitle: __( 'Align center' ),\n\t},\n\tright: {\n\t\ticon: positionRight,\n\t\ttitle: __( 'Align right' ),\n\t},\n\twide: {\n\t\ticon: stretchWide,\n\t\ttitle: __( 'Wide width' ),\n\t},\n\tfull: {\n\t\ticon: stretchFullWidth,\n\t\ttitle: __( 'Full width' ),\n\t},\n};\n\nconst DEFAULT_CONTROL = 'center';\n\nconst POPOVER_PROPS = {\n\tisAlternate: true,\n};\n\nfunction BlockAlignmentUI( {\n\tvalue,\n\tonChange,\n\tcontrols,\n\tisToolbar,\n\tisCollapsed = true,\n\tisToolbarButton = true,\n} ) {\n\tconst enabledControls = useAvailableAlignments( controls );\n\tif ( enabledControls.length === 0 ) {\n\t\treturn null;\n\t}\n\n\tfunction applyOrUnset( align ) {\n\t\treturn () => onChange( value === align ? undefined : align );\n\t}\n\n\tconst activeAlignmentControl = BLOCK_ALIGNMENTS_CONTROLS[ value ];\n\tconst defaultAlignmentControl =\n\t\tBLOCK_ALIGNMENTS_CONTROLS[ DEFAULT_CONTROL ];\n\n\tconst UIComponent = isToolbar ? ToolbarGroup : DropdownMenu;\n\tconst extraProps = isToolbar ? { isCollapsed } : { isToolbarButton };\n\n\treturn (\n\t\t<UIComponent\n\t\t\tpopoverProps={ POPOVER_PROPS }\n\t\t\ticon={\n\t\t\t\tactiveAlignmentControl\n\t\t\t\t\t? activeAlignmentControl.icon\n\t\t\t\t\t: defaultAlignmentControl.icon\n\t\t\t}\n\t\t\tlabel={ __( 'Align' ) }\n\t\t\ttoggleProps={ { describedBy: __( 'Change alignment' ) } }\n\t\t\tcontrols={ enabledControls.map( ( control ) => {\n\t\t\t\treturn {\n\t\t\t\t\t...BLOCK_ALIGNMENTS_CONTROLS[ control ],\n\t\t\t\t\tisActive: value === control,\n\t\t\t\t\trole: isCollapsed ? 'menuitemradio' : undefined,\n\t\t\t\t\tonClick: applyOrUnset( control ),\n\t\t\t\t};\n\t\t\t} ) }\n\t\t\t{ ...extraProps }\n\t\t/>\n\t);\n}\n\nexport default BlockAlignmentUI;\n"]}