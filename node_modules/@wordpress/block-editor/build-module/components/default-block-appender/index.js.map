{"version":3,"sources":["@wordpress/block-editor/src/components/default-block-appender/index.js"],"names":["TextareaAutosize","__","compose","getDefaultBlockName","decodeEntities","withSelect","withDispatch","Inserter","store","blockEditorStore","DefaultBlockAppender","isLocked","isVisible","onAppend","showPrompt","placeholder","rootClientId","value","select","ownProps","getBlockCount","getBlockName","isBlockValid","getSettings","getTemplateLock","isEmpty","isLastBlockDefault","lastBlockClientId","isLastBlockValid","bodyPlaceholder","dispatch","insertDefaultBlock","startTyping","undefined"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport TextareaAutosize from 'react-autosize-textarea';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { compose } from '@wordpress/compose';\nimport { getDefaultBlockName } from '@wordpress/blocks';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport Inserter from '../inserter';\nimport { store as blockEditorStore } from '../../store';\n\nexport function DefaultBlockAppender( {\n\tisLocked,\n\tisVisible,\n\tonAppend,\n\tshowPrompt,\n\tplaceholder,\n\trootClientId,\n} ) {\n\tif ( isLocked || ! isVisible ) {\n\t\treturn null;\n\t}\n\n\tconst value =\n\t\tdecodeEntities( placeholder ) ||\n\t\t__( 'Start writing or type / to choose a block' );\n\n\t// The appender \"button\" is in-fact a text field so as to support\n\t// transitions by WritingFlow occurring by arrow key press. WritingFlow\n\t// only supports tab transitions into text fields and to the block focus\n\t// boundary.\n\t//\n\t// See: https://github.com/WordPress/gutenberg/issues/4829#issuecomment-374213658\n\t//\n\t// If it were ever to be made to be a proper `button` element, it is\n\t// important to note that `onFocus` alone would not be sufficient to\n\t// capture click events, notably in Firefox.\n\t//\n\t// See: https://gist.github.com/cvrebert/68659d0333a578d75372\n\n\t// The wp-block className is important for editor styles.\n\n\treturn (\n\t\t<div\n\t\t\tdata-root-client-id={ rootClientId || '' }\n\t\t\tclassName=\"wp-block block-editor-default-block-appender\"\n\t\t>\n\t\t\t<TextareaAutosize\n\t\t\t\trole=\"button\"\n\t\t\t\taria-label={ __( 'Add block' ) }\n\t\t\t\tclassName=\"block-editor-default-block-appender__content\"\n\t\t\t\treadOnly\n\t\t\t\tonFocus={ onAppend }\n\t\t\t\tvalue={ showPrompt ? value : '' }\n\t\t\t/>\n\t\t\t<Inserter\n\t\t\t\trootClientId={ rootClientId }\n\t\t\t\tposition=\"bottom right\"\n\t\t\t\tisAppender\n\t\t\t\t__experimentalIsQuick\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default compose(\n\twithSelect( ( select, ownProps ) => {\n\t\tconst {\n\t\t\tgetBlockCount,\n\t\t\tgetBlockName,\n\t\t\tisBlockValid,\n\t\t\tgetSettings,\n\t\t\tgetTemplateLock,\n\t\t} = select( blockEditorStore );\n\n\t\tconst isEmpty = ! getBlockCount( ownProps.rootClientId );\n\t\tconst isLastBlockDefault =\n\t\t\tgetBlockName( ownProps.lastBlockClientId ) ===\n\t\t\tgetDefaultBlockName();\n\t\tconst isLastBlockValid = isBlockValid( ownProps.lastBlockClientId );\n\t\tconst { bodyPlaceholder } = getSettings();\n\n\t\treturn {\n\t\t\tisVisible: isEmpty || ! isLastBlockDefault || ! isLastBlockValid,\n\t\t\tshowPrompt: isEmpty,\n\t\t\tisLocked: !! getTemplateLock( ownProps.rootClientId ),\n\t\t\tplaceholder: bodyPlaceholder,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => {\n\t\tconst { insertDefaultBlock, startTyping } = dispatch(\n\t\t\tblockEditorStore\n\t\t);\n\n\t\treturn {\n\t\t\tonAppend() {\n\t\t\t\tconst { rootClientId } = ownProps;\n\n\t\t\t\tinsertDefaultBlock( undefined, rootClientId );\n\t\t\t\tstartTyping();\n\t\t\t},\n\t\t};\n\t} )\n)( DefaultBlockAppender );\n"]}