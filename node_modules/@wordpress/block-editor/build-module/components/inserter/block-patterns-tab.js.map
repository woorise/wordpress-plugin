{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/block-patterns-tab.js"],"names":["fromPairs","useMemo","useCallback","useEffect","_x","useAsyncList","PatternInserterPanel","usePatternsState","BlockPatternList","BlockPatternsCategory","rootClientId","onInsert","selectedCategory","onClickCategory","allPatterns","allCategories","onClick","populatedCategories","filter","category","some","pattern","categories","includes","name","patternCategory","getPatternIndex","Infinity","find","push","label","length","indexedCategories","map","index","Math","min","cat","undefined","currentCategoryPatterns","orderedPatterns","sort","a","b","currentShownPatterns","BlockPatternsTabs"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { fromPairs } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback, useEffect } from '@wordpress/element';\nimport { _x } from '@wordpress/i18n';\nimport { useAsyncList } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport PatternInserterPanel from './pattern-panel';\nimport usePatternsState from './hooks/use-patterns-state';\nimport BlockPatternList from '../block-patterns-list';\n\nfunction BlockPatternsCategory( {\n\trootClientId,\n\tonInsert,\n\tselectedCategory,\n\tonClickCategory,\n} ) {\n\tconst [ allPatterns, allCategories, onClick ] = usePatternsState(\n\t\tonInsert,\n\t\trootClientId\n\t);\n\n\t// Remove any empty categories\n\tconst populatedCategories = useMemo(\n\t\t() =>\n\t\t\tallCategories.filter( ( category ) =>\n\t\t\t\tallPatterns.some( ( pattern ) =>\n\t\t\t\t\tpattern.categories?.includes( category.name )\n\t\t\t\t)\n\t\t\t),\n\t\t[ allPatterns, allCategories ]\n\t);\n\n\tconst patternCategory = selectedCategory\n\t\t? selectedCategory\n\t\t: populatedCategories[ 0 ];\n\n\tuseEffect( () => {\n\t\tif (\n\t\t\tallPatterns.some(\n\t\t\t\t( pattern ) => getPatternIndex( pattern ) === Infinity\n\t\t\t) &&\n\t\t\t! populatedCategories.find(\n\t\t\t\t( category ) => category.name === 'uncategorized'\n\t\t\t)\n\t\t) {\n\t\t\tpopulatedCategories.push( {\n\t\t\t\tname: 'uncategorized',\n\t\t\t\tlabel: _x( 'Uncategorized' ),\n\t\t\t} );\n\t\t}\n\t}, [ populatedCategories, allPatterns ] );\n\n\tconst getPatternIndex = useCallback(\n\t\t( pattern ) => {\n\t\t\tif ( ! pattern.categories || ! pattern.categories.length ) {\n\t\t\t\treturn Infinity;\n\t\t\t}\n\t\t\tconst indexedCategories = fromPairs(\n\t\t\t\tpopulatedCategories.map( ( { name }, index ) => [\n\t\t\t\t\tname,\n\t\t\t\t\tindex,\n\t\t\t\t] )\n\t\t\t);\n\t\t\treturn Math.min(\n\t\t\t\t...pattern.categories.map( ( cat ) =>\n\t\t\t\t\tindexedCategories[ cat ] !== undefined\n\t\t\t\t\t\t? indexedCategories[ cat ]\n\t\t\t\t\t\t: Infinity\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t\t[ populatedCategories ]\n\t);\n\n\tconst currentCategoryPatterns = useMemo(\n\t\t() =>\n\t\t\tallPatterns.filter( ( pattern ) =>\n\t\t\t\tpatternCategory.name === 'uncategorized'\n\t\t\t\t\t? getPatternIndex( pattern ) === Infinity\n\t\t\t\t\t: pattern.categories &&\n\t\t\t\t\t  pattern.categories.includes( patternCategory.name )\n\t\t\t),\n\t\t[ allPatterns, patternCategory ]\n\t);\n\n\t// Ordering the patterns is important for the async rendering.\n\tconst orderedPatterns = useMemo( () => {\n\t\treturn currentCategoryPatterns.sort( ( a, b ) => {\n\t\t\treturn getPatternIndex( a ) - getPatternIndex( b );\n\t\t} );\n\t}, [ currentCategoryPatterns, getPatternIndex ] );\n\n\tconst currentShownPatterns = useAsyncList( orderedPatterns );\n\n\treturn (\n\t\t<>\n\t\t\t{ !! currentCategoryPatterns.length && (\n\t\t\t\t<PatternInserterPanel\n\t\t\t\t\tselectedCategory={ patternCategory }\n\t\t\t\t\tpatternCategories={ populatedCategories }\n\t\t\t\t\tonClickCategory={ onClickCategory }\n\t\t\t\t>\n\t\t\t\t\t<BlockPatternList\n\t\t\t\t\t\tshownPatterns={ currentShownPatterns }\n\t\t\t\t\t\tblockPatterns={ currentCategoryPatterns }\n\t\t\t\t\t\tonClickPattern={ onClick }\n\t\t\t\t\t\tlabel={ patternCategory.label }\n\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\tisDraggable\n\t\t\t\t\t/>\n\t\t\t\t</PatternInserterPanel>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nfunction BlockPatternsTabs( {\n\trootClientId,\n\tonInsert,\n\tonClickCategory,\n\tselectedCategory,\n} ) {\n\treturn (\n\t\t<BlockPatternsCategory\n\t\t\trootClientId={ rootClientId }\n\t\t\tselectedCategory={ selectedCategory }\n\t\t\tonInsert={ onInsert }\n\t\t\tonClickCategory={ onClickCategory }\n\t\t/>\n\t);\n}\n\nexport default BlockPatternsTabs;\n"]}