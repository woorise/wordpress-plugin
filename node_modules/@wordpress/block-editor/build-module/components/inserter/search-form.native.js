import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { TextInput, View, TouchableHighlight } from 'react-native';
/**
 * WordPress dependencies
 */

import { useState, useRef } from '@wordpress/element';
import { usePreferredColorSchemeStyle } from '@wordpress/compose';
import { __ } from '@wordpress/i18n';
import { ToolbarButton } from '@wordpress/components';
import { Icon, cancelCircleFilled, arrowLeft, search as searchIcon } from '@wordpress/icons';
/**
 * Internal dependencies
 */

import styles from './style.scss';

function InserterSearchForm(_ref) {
  var value = _ref.value,
      onChange = _ref.onChange,
      _ref$onLayout = _ref.onLayout,
      onLayout = _ref$onLayout === void 0 ? function () {} : _ref$onLayout;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isActive = _useState2[0],
      setIsActive = _useState2[1];

  var inputRef = useRef();
  var searchFormStyle = usePreferredColorSchemeStyle(styles.searchForm, styles.searchFormDark);
  var searchFormInputStyle = usePreferredColorSchemeStyle(styles.searchFormInput, styles.searchFormInputDark);
  var placeholderStyle = usePreferredColorSchemeStyle(styles.searchFormPlaceholder, styles.searchFormPlaceholderDark);
  return createElement(TouchableHighlight, {
    accessible: false,
    onLayout: onLayout
  }, createElement(View, {
    style: searchFormStyle
  }, isActive ? createElement(ToolbarButton, {
    title: __('Cancel search'),
    icon: arrowLeft,
    onClick: function onClick() {
      inputRef.current.blur();
      onChange('');
      setIsActive(false);
    }
  }) : createElement(ToolbarButton, {
    title: __('Search block'),
    icon: searchIcon,
    onClick: function onClick() {
      inputRef.current.focus();
      setIsActive(true);
    }
  }), createElement(TextInput, {
    ref: inputRef,
    style: searchFormInputStyle,
    placeholderTextColor: placeholderStyle.color,
    onChangeText: onChange,
    onFocus: function onFocus() {
      return setIsActive(true);
    },
    value: value,
    placeholder: __('Search blocks')
  }), !!value && createElement(ToolbarButton, {
    title: __('Clear search'),
    icon: createElement(Icon, {
      icon: cancelCircleFilled
    }),
    onClick: function onClick() {
      onChange('');
    }
  })));
}

export default InserterSearchForm;
//# sourceMappingURL=search-form.native.js.map