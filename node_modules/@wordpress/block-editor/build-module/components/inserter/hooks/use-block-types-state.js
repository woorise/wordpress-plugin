/**
 * WordPress dependencies
 */
import { createBlock, createBlocksFromInnerBlocksTemplate, store as blocksStore } from '@wordpress/blocks';
import { useSelect } from '@wordpress/data';
import { useCallback } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { store as blockEditorStore } from '../../../store';
/**
 * Retrieves the block types inserter state.
 *
 * @param {string=}  rootClientId        Insertion's root client ID.
 * @param {Function} onInsert            function called when inserter a list of blocks.
 * @return {Array} Returns the block types state. (block types, categories, collections, onSelect handler)
 */

var useBlockTypesState = function useBlockTypesState(rootClientId, onInsert) {
  var _useSelect = useSelect(function (select) {
    var _select = select(blockEditorStore),
        getInserterItems = _select.getInserterItems;

    var _select2 = select(blocksStore),
        getCategories = _select2.getCategories,
        getCollections = _select2.getCollections;

    return {
      categories: getCategories(),
      collections: getCollections(),
      items: getInserterItems(rootClientId)
    };
  }, [rootClientId]),
      categories = _useSelect.categories,
      collections = _useSelect.collections,
      items = _useSelect.items;

  var onSelectItem = useCallback(function (_ref, shouldFocusBlock) {
    var name = _ref.name,
        initialAttributes = _ref.initialAttributes,
        innerBlocks = _ref.innerBlocks;
    var insertedBlock = createBlock(name, initialAttributes, createBlocksFromInnerBlocksTemplate(innerBlocks));
    onInsert(insertedBlock, undefined, shouldFocusBlock);
  }, [onInsert]);
  return [items, categories, collections, onSelectItem];
};

export default useBlockTypesState;
//# sourceMappingURL=use-block-types-state.js.map