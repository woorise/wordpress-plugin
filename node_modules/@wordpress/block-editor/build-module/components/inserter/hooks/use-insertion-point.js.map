{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/hooks/use-insertion-point.js"],"names":["castArray","useDispatch","useSelect","isUnmodifiedDefaultBlock","_n","sprintf","speak","useCallback","store","blockEditorStore","useInsertionPoint","rootClientId","insertionIndex","clientId","isAppender","onSelect","shouldFocusBlock","select","_getSelectedBlock","getSelectedBlock","getBlockIndex","getBlockOrder","getBlockInsertionPoint","_destinationRootClientId","_destinationIndex","length","insertionPoint","index","destinationRootClientId","destinationIndex","replaceBlocks","insertBlocks","showInsertionPoint","hideInsertionPoint","onInsertBlocks","blocks","meta","shouldForceFocusBlock","selectedBlock","message","onToggleInsertionPoint","show"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { isUnmodifiedDefaultBlock } from '@wordpress/blocks';\nimport { _n, sprintf } from '@wordpress/i18n';\nimport { speak } from '@wordpress/a11y';\nimport { useCallback } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../../store';\n\n/**\n * @typedef WPInserterConfig\n *\n * @property {string=}   rootClientId        If set, insertion will be into the\n *                                           block with this ID.\n * @property {number=}   insertionIndex      If set, insertion will be into this\n *                                           explicit position.\n * @property {string=}   clientId            If set, insertion will be after the\n *                                           block with this ID.\n * @property {boolean=}  isAppender          Whether the inserter is an appender\n *                                           or not.\n * @property {Function=} onSelect            Called after insertion.\n */\n\n/**\n * Returns the insertion point state given the inserter config.\n *\n * @param {WPInserterConfig} config Inserter Config.\n * @return {Array} Insertion Point State (rootClientID, onInsertBlocks and onToggle).\n */\nfunction useInsertionPoint( {\n\trootClientId,\n\tinsertionIndex,\n\tclientId,\n\tisAppender,\n\tonSelect,\n\tshouldFocusBlock = true,\n} ) {\n\tconst {\n\t\tdestinationRootClientId,\n\t\tdestinationIndex,\n\t\tgetSelectedBlock,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetSelectedBlock: _getSelectedBlock,\n\t\t\t\tgetBlockIndex,\n\t\t\t\tgetBlockOrder,\n\t\t\t\tgetBlockInsertionPoint,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\tlet _destinationRootClientId, _destinationIndex;\n\n\t\t\tif ( rootClientId || insertionIndex || clientId || isAppender ) {\n\t\t\t\t// If any of these arguments are set, we're in \"manual mode\"\n\t\t\t\t// meaning the insertion point is set by the caller.\n\n\t\t\t\t_destinationRootClientId = rootClientId;\n\n\t\t\t\tif ( insertionIndex ) {\n\t\t\t\t\t// Insert into a specific index.\n\t\t\t\t\t_destinationIndex = insertionIndex;\n\t\t\t\t} else if ( clientId ) {\n\t\t\t\t\t// Insert after a specific client ID.\n\t\t\t\t\t_destinationIndex = getBlockIndex(\n\t\t\t\t\t\tclientId,\n\t\t\t\t\t\t_destinationRootClientId\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// Insert at the end of the list.\n\t\t\t\t\t_destinationIndex = getBlockOrder(\n\t\t\t\t\t\t_destinationRootClientId\n\t\t\t\t\t).length;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Otherwise, we're in \"auto mode\" where the insertion point is\n\t\t\t\t// decided by getBlockInsertionPoint().\n\t\t\t\tconst insertionPoint = getBlockInsertionPoint();\n\t\t\t\t_destinationRootClientId = insertionPoint.rootClientId;\n\t\t\t\t_destinationIndex = insertionPoint.index;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tgetSelectedBlock: _getSelectedBlock,\n\t\t\t\tdestinationRootClientId: _destinationRootClientId,\n\t\t\t\tdestinationIndex: _destinationIndex,\n\t\t\t};\n\t\t},\n\t\t[ rootClientId, insertionIndex, clientId, isAppender ]\n\t);\n\n\tconst {\n\t\treplaceBlocks,\n\t\tinsertBlocks,\n\t\tshowInsertionPoint,\n\t\thideInsertionPoint,\n\t} = useDispatch( blockEditorStore );\n\n\tconst onInsertBlocks = useCallback(\n\t\t( blocks, meta, shouldForceFocusBlock = false ) => {\n\t\t\tconst selectedBlock = getSelectedBlock();\n\n\t\t\tif (\n\t\t\t\t! isAppender &&\n\t\t\t\tselectedBlock &&\n\t\t\t\tisUnmodifiedDefaultBlock( selectedBlock )\n\t\t\t) {\n\t\t\t\treplaceBlocks(\n\t\t\t\t\tselectedBlock.clientId,\n\t\t\t\t\tblocks,\n\t\t\t\t\tnull,\n\t\t\t\t\tshouldFocusBlock || shouldForceFocusBlock ? 0 : null,\n\t\t\t\t\tmeta\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tinsertBlocks(\n\t\t\t\t\tblocks,\n\t\t\t\t\tdestinationIndex,\n\t\t\t\t\tdestinationRootClientId,\n\t\t\t\t\ttrue,\n\t\t\t\t\tshouldFocusBlock || shouldForceFocusBlock ? 0 : null,\n\t\t\t\t\tmeta\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst message = sprintf(\n\t\t\t\t// translators: %d: the name of the block that has been added\n\t\t\t\t_n(\n\t\t\t\t\t'%d block added.',\n\t\t\t\t\t'%d blocks added.',\n\t\t\t\t\tcastArray( blocks ).length\n\t\t\t\t),\n\t\t\t\tcastArray( blocks ).length\n\t\t\t);\n\t\t\tspeak( message );\n\n\t\t\tif ( onSelect ) {\n\t\t\t\tonSelect();\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tisAppender,\n\t\t\tgetSelectedBlock,\n\t\t\treplaceBlocks,\n\t\t\tinsertBlocks,\n\t\t\tdestinationRootClientId,\n\t\t\tdestinationIndex,\n\t\t\tonSelect,\n\t\t\tshouldFocusBlock,\n\t\t]\n\t);\n\n\tconst onToggleInsertionPoint = useCallback(\n\t\t( show ) => {\n\t\t\tif ( show ) {\n\t\t\t\tshowInsertionPoint( destinationRootClientId, destinationIndex );\n\t\t\t} else {\n\t\t\t\thideInsertionPoint();\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tshowInsertionPoint,\n\t\t\thideInsertionPoint,\n\t\t\tdestinationRootClientId,\n\t\t\tdestinationIndex,\n\t\t]\n\t);\n\n\treturn [ destinationRootClientId, onInsertBlocks, onToggleInsertionPoint ];\n}\n\nexport default useInsertionPoint;\n"]}