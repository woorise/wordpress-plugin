{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/index.js"],"names":["size","classnames","speak","__","_x","sprintf","Dropdown","Button","Component","withDispatch","withSelect","compose","ifCondition","createBlock","store","blocksStore","plus","InserterMenu","QuickInserter","blockEditorStore","defaultRenderToggle","onToggle","disabled","isOpen","blockTitle","hasSingleBlockType","toggleProps","label","onClick","rest","handleClick","event","Inserter","arguments","bind","renderToggle","renderContent","props","hasItems","onClose","rootClientId","clientId","isAppender","showInserterHelpPanel","isQuick","__experimentalIsQuick","position","insertOnlyAllowedBlock","onSelectOrClose","select","getBlockRootClientId","hasInserterItems","__experimentalGetAllowedBlocks","getBlockVariations","undefined","allowedBlocks","name","allowedBlockType","title","dispatch","ownProps","getInsertionIndex","getBlockIndex","getBlockSelectionEnd","getBlockOrder","end","length","insertBlock","blockToInsert","message"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { size } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { speak } from '@wordpress/a11y';\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport { Dropdown, Button } from '@wordpress/components';\nimport { Component } from '@wordpress/element';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose, ifCondition } from '@wordpress/compose';\nimport { createBlock, store as blocksStore } from '@wordpress/blocks';\nimport { plus } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport InserterMenu from './menu';\nimport QuickInserter from './quick-inserter';\nimport { store as blockEditorStore } from '../../store';\n\nconst defaultRenderToggle = ( {\n\tonToggle,\n\tdisabled,\n\tisOpen,\n\tblockTitle,\n\thasSingleBlockType,\n\ttoggleProps = {},\n} ) => {\n\tlet label;\n\tif ( hasSingleBlockType ) {\n\t\tlabel = sprintf(\n\t\t\t// translators: %s: the name of the block when there is only one\n\t\t\t_x( 'Add %s', 'directly add the only allowed block' ),\n\t\t\tblockTitle\n\t\t);\n\t} else {\n\t\tlabel = _x( 'Add block', 'Generic label for block inserter button' );\n\t}\n\n\tconst { onClick, ...rest } = toggleProps;\n\n\t// Handle both onClick functions from the toggle and the parent component\n\tfunction handleClick( event ) {\n\t\tif ( onToggle ) {\n\t\t\tonToggle( event );\n\t\t}\n\t\tif ( onClick ) {\n\t\t\tonClick( event );\n\t\t}\n\t}\n\n\treturn (\n\t\t<Button\n\t\t\ticon={ plus }\n\t\t\tlabel={ label }\n\t\t\ttooltipPosition=\"bottom\"\n\t\t\tonClick={ handleClick }\n\t\t\tclassName=\"block-editor-inserter__toggle\"\n\t\t\taria-haspopup={ ! hasSingleBlockType ? 'true' : false }\n\t\t\taria-expanded={ ! hasSingleBlockType ? isOpen : false }\n\t\t\tdisabled={ disabled }\n\t\t\t{ ...rest }\n\t\t/>\n\t);\n};\n\nclass Inserter extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onToggle = this.onToggle.bind( this );\n\t\tthis.renderToggle = this.renderToggle.bind( this );\n\t\tthis.renderContent = this.renderContent.bind( this );\n\t}\n\n\tonToggle( isOpen ) {\n\t\tconst { onToggle } = this.props;\n\n\t\t// Surface toggle callback to parent component\n\t\tif ( onToggle ) {\n\t\t\tonToggle( isOpen );\n\t\t}\n\t}\n\n\t/**\n\t * Render callback to display Dropdown toggle element.\n\t *\n\t * @param {Object}   options\n\t * @param {Function} options.onToggle Callback to invoke when toggle is\n\t *                                    pressed.\n\t * @param {boolean}  options.isOpen   Whether dropdown is currently open.\n\t *\n\t * @return {WPElement} Dropdown toggle element.\n\t */\n\trenderToggle( { onToggle, isOpen } ) {\n\t\tconst {\n\t\t\tdisabled,\n\t\t\tblockTitle,\n\t\t\thasSingleBlockType,\n\t\t\ttoggleProps,\n\t\t\thasItems,\n\t\t\trenderToggle = defaultRenderToggle,\n\t\t} = this.props;\n\n\t\treturn renderToggle( {\n\t\t\tonToggle,\n\t\t\tisOpen,\n\t\t\tdisabled: disabled || ! hasItems,\n\t\t\tblockTitle,\n\t\t\thasSingleBlockType,\n\t\t\ttoggleProps,\n\t\t} );\n\t}\n\n\t/**\n\t * Render callback to display Dropdown content element.\n\t *\n\t * @param {Object}   options\n\t * @param {Function} options.onClose Callback to invoke when dropdown is\n\t *                                   closed.\n\t *\n\t * @return {WPElement} Dropdown content element.\n\t */\n\trenderContent( { onClose } ) {\n\t\tconst {\n\t\t\trootClientId,\n\t\t\tclientId,\n\t\t\tisAppender,\n\t\t\tshowInserterHelpPanel,\n\n\t\t\t// This prop is experimental to give some time for the quick inserter to mature\n\t\t\t// Feel free to make them stable after a few releases.\n\t\t\t__experimentalIsQuick: isQuick,\n\t\t} = this.props;\n\n\t\tif ( isQuick ) {\n\t\t\treturn (\n\t\t\t\t<QuickInserter\n\t\t\t\t\tonSelect={ () => {\n\t\t\t\t\t\tonClose();\n\t\t\t\t\t} }\n\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\tisAppender={ isAppender }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<InserterMenu\n\t\t\t\tonSelect={ () => {\n\t\t\t\t\tonClose();\n\t\t\t\t} }\n\t\t\t\trootClientId={ rootClientId }\n\t\t\t\tclientId={ clientId }\n\t\t\t\tisAppender={ isAppender }\n\t\t\t\tshowInserterHelpPanel={ showInserterHelpPanel }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tposition,\n\t\t\thasSingleBlockType,\n\t\t\tinsertOnlyAllowedBlock,\n\t\t\t__experimentalIsQuick: isQuick,\n\t\t\tonSelectOrClose,\n\t\t} = this.props;\n\n\t\tif ( hasSingleBlockType ) {\n\t\t\treturn this.renderToggle( { onToggle: insertOnlyAllowedBlock } );\n\t\t}\n\n\t\treturn (\n\t\t\t<Dropdown\n\t\t\t\tclassName=\"block-editor-inserter\"\n\t\t\t\tcontentClassName={ classnames(\n\t\t\t\t\t'block-editor-inserter__popover',\n\t\t\t\t\t{ 'is-quick': isQuick }\n\t\t\t\t) }\n\t\t\t\tposition={ position }\n\t\t\t\tonToggle={ this.onToggle }\n\t\t\t\texpandOnMobile\n\t\t\t\theaderTitle={ __( 'Add a block' ) }\n\t\t\t\trenderToggle={ this.renderToggle }\n\t\t\t\trenderContent={ this.renderContent }\n\t\t\t\tonClose={ onSelectOrClose }\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientId, rootClientId } ) => {\n\t\tconst {\n\t\t\tgetBlockRootClientId,\n\t\t\thasInserterItems,\n\t\t\t__experimentalGetAllowedBlocks,\n\t\t} = select( blockEditorStore );\n\t\tconst { getBlockVariations } = select( blocksStore );\n\n\t\trootClientId =\n\t\t\trootClientId || getBlockRootClientId( clientId ) || undefined;\n\n\t\tconst allowedBlocks = __experimentalGetAllowedBlocks( rootClientId );\n\n\t\tconst hasSingleBlockType =\n\t\t\tsize( allowedBlocks ) === 1 &&\n\t\t\tsize(\n\t\t\t\tgetBlockVariations( allowedBlocks[ 0 ].name, 'inserter' )\n\t\t\t) === 0;\n\n\t\tlet allowedBlockType = false;\n\t\tif ( hasSingleBlockType ) {\n\t\t\tallowedBlockType = allowedBlocks[ 0 ];\n\t\t}\n\n\t\treturn {\n\t\t\thasItems: hasInserterItems( rootClientId ),\n\t\t\thasSingleBlockType,\n\t\t\tblockTitle: allowedBlockType ? allowedBlockType.title : '',\n\t\t\tallowedBlockType,\n\t\t\trootClientId,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps, { select } ) => {\n\t\treturn {\n\t\t\tinsertOnlyAllowedBlock() {\n\t\t\t\tconst {\n\t\t\t\t\trootClientId,\n\t\t\t\t\tclientId,\n\t\t\t\t\tisAppender,\n\t\t\t\t\thasSingleBlockType,\n\t\t\t\t\tallowedBlockType,\n\t\t\t\t\tonSelectOrClose,\n\t\t\t\t} = ownProps;\n\n\t\t\t\tif ( ! hasSingleBlockType ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfunction getInsertionIndex() {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tgetBlockIndex,\n\t\t\t\t\t\tgetBlockSelectionEnd,\n\t\t\t\t\t\tgetBlockOrder,\n\t\t\t\t\t\tgetBlockRootClientId,\n\t\t\t\t\t} = select( blockEditorStore );\n\n\t\t\t\t\t// If the clientId is defined, we insert at the position of the block.\n\t\t\t\t\tif ( clientId ) {\n\t\t\t\t\t\treturn getBlockIndex( clientId, rootClientId );\n\t\t\t\t\t}\n\n\t\t\t\t\t// If there a selected block, we insert after the selected block.\n\t\t\t\t\tconst end = getBlockSelectionEnd();\n\t\t\t\t\tif (\n\t\t\t\t\t\t! isAppender &&\n\t\t\t\t\t\tend &&\n\t\t\t\t\t\tgetBlockRootClientId( end ) === rootClientId\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn getBlockIndex( end, rootClientId ) + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Otherwise, we insert at the end of the current rootClientId\n\t\t\t\t\treturn getBlockOrder( rootClientId ).length;\n\t\t\t\t}\n\n\t\t\t\tconst { insertBlock } = dispatch( blockEditorStore );\n\n\t\t\t\tconst blockToInsert = createBlock( allowedBlockType.name );\n\n\t\t\t\tinsertBlock( blockToInsert, getInsertionIndex(), rootClientId );\n\n\t\t\t\tif ( onSelectOrClose ) {\n\t\t\t\t\tonSelectOrClose();\n\t\t\t\t}\n\n\t\t\t\tconst message = sprintf(\n\t\t\t\t\t// translators: %s: the name of the block that has been added\n\t\t\t\t\t__( '%s block added' ),\n\t\t\t\t\tallowedBlockType.title\n\t\t\t\t);\n\t\t\t\tspeak( message );\n\t\t\t},\n\t\t};\n\t} ),\n\t// The global inserter should always be visible, we are using ( ! isAppender && ! rootClientId && ! clientId ) as\n\t// a way to detect the global Inserter.\n\tifCondition(\n\t\t( { hasItems, isAppender, rootClientId, clientId } ) =>\n\t\t\thasItems || ( ! isAppender && ! rootClientId && ! clientId )\n\t),\n] )( Inserter );\n"]}