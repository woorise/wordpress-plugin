{"version":3,"sources":["@wordpress/block-editor/src/components/default-style-picker/index.js"],"names":["store","blocksStore","useMemo","useCallback","__","SelectControl","useSelect","blockEditorStore","DefaultStylePicker","blockName","select","settings","getSettings","preferredStyleVariations","__experimentalPreferredStyleVariations","preferredStyle","value","onUpdatePreferredStyleVariations","onChange","styles","getBlockStyles","selectOptions","label","map","name","selectOnChange","blockStyle"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,KAAK,IAAIC,WAAlB,QAAqC,mBAArC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,oBAArC;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;;AACA,SAASN,KAAK,IAAIO,gBAAlB,QAA0C,aAA1C;AAEA,eAAe,SAASC,kBAAT,OAA6C;AAAA,MAAdC,SAAc,QAAdA,SAAc;;AAAA,mBAKvDH,SAAS,CACZ,UAAEI,MAAF,EAAc;AAAA;;AACb,QAAMC,QAAQ,GAAGD,MAAM,CAAEH,gBAAF,CAAN,CAA2BK,WAA3B,EAAjB;AACA,QAAMC,wBAAwB,GAC7BF,QAAQ,CAACG,sCADV;AAEA,WAAO;AACNC,MAAAA,cAAc,EAAEF,wBAAF,aAAEA,wBAAF,gDAAEA,wBAAwB,CAAEG,KAA5B,0DAAE,sBAAmCP,SAAnC,CADV;AAENQ,MAAAA,gCAAgC,4BAC/BJ,wBAD+B,aAC/BA,wBAD+B,uBAC/BA,wBAAwB,CAAEK,QADK,2EACO,IAHjC;AAINC,MAAAA,MAAM,EAAET,MAAM,CAAET,WAAF,CAAN,CAAsBmB,cAAtB,CAAsCX,SAAtC;AAJF,KAAP;AAMA,GAXW,EAYZ,CAAEA,SAAF,CAZY,CAL8C;AAAA,MAE1DM,cAF0D,cAE1DA,cAF0D;AAAA,MAG1DE,gCAH0D,cAG1DA,gCAH0D;AAAA,MAI1DE,MAJ0D,cAI1DA,MAJ0D;;AAmB3D,MAAME,aAAa,GAAGnB,OAAO,CAC5B;AAAA,YACC;AAAEoB,MAAAA,KAAK,EAAElB,EAAE,CAAE,SAAF,CAAX;AAA0BY,MAAAA,KAAK,EAAE;AAAjC,KADD,4BAEIG,MAAM,CAACI,GAAP,CAAY;AAAA,UAAID,KAAJ,SAAIA,KAAJ;AAAA,UAAWE,IAAX,SAAWA,IAAX;AAAA,aAAyB;AAAEF,QAAAA,KAAK,EAALA,KAAF;AAASN,QAAAA,KAAK,EAAEQ;AAAhB,OAAzB;AAAA,KAAZ,CAFJ;AAAA,GAD4B,EAK5B,CAAEL,MAAF,CAL4B,CAA7B;AAOA,MAAMM,cAAc,GAAGtB,WAAW,CACjC,UAAEuB,UAAF,EAAkB;AACjBT,IAAAA,gCAAgC,CAAER,SAAF,EAAaiB,UAAb,CAAhC;AACA,GAHgC,EAIjC,CAAEjB,SAAF,EAAaQ,gCAAb,CAJiC,CAAlC;AAOA,SACCA,gCAAgC,IAC/B,cAAC,aAAD;AACC,IAAA,OAAO,EAAGI,aADX;AAEC,IAAA,KAAK,EAAGN,cAAc,IAAI,EAF3B;AAGC,IAAA,KAAK,EAAGX,EAAE,CAAE,eAAF,CAHX;AAIC,IAAA,QAAQ,EAAGqB;AAJZ,IAFF;AAUA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { useMemo, useCallback } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { SelectControl } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\nexport default function DefaultStylePicker( { blockName } ) {\n\tconst {\n\t\tpreferredStyle,\n\t\tonUpdatePreferredStyleVariations,\n\t\tstyles,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst settings = select( blockEditorStore ).getSettings();\n\t\t\tconst preferredStyleVariations =\n\t\t\t\tsettings.__experimentalPreferredStyleVariations;\n\t\t\treturn {\n\t\t\t\tpreferredStyle: preferredStyleVariations?.value?.[ blockName ],\n\t\t\t\tonUpdatePreferredStyleVariations:\n\t\t\t\t\tpreferredStyleVariations?.onChange ?? null,\n\t\t\t\tstyles: select( blocksStore ).getBlockStyles( blockName ),\n\t\t\t};\n\t\t},\n\t\t[ blockName ]\n\t);\n\tconst selectOptions = useMemo(\n\t\t() => [\n\t\t\t{ label: __( 'Not set' ), value: '' },\n\t\t\t...styles.map( ( { label, name } ) => ( { label, value: name } ) ),\n\t\t],\n\t\t[ styles ]\n\t);\n\tconst selectOnChange = useCallback(\n\t\t( blockStyle ) => {\n\t\t\tonUpdatePreferredStyleVariations( blockName, blockStyle );\n\t\t},\n\t\t[ blockName, onUpdatePreferredStyleVariations ]\n\t);\n\n\treturn (\n\t\tonUpdatePreferredStyleVariations && (\n\t\t\t<SelectControl\n\t\t\t\toptions={ selectOptions }\n\t\t\t\tvalue={ preferredStyle || '' }\n\t\t\t\tlabel={ __( 'Default Style' ) }\n\t\t\t\tonChange={ selectOnChange }\n\t\t\t/>\n\t\t)\n\t);\n}\n"]}