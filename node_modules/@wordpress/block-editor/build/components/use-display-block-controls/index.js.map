{"version":3,"sources":["@wordpress/block-editor/src/components/use-display-block-controls/index.js"],"names":["useDisplayBlockControls","isSelected","clientId","name","isFirstAndSameTypeMultiSelected","select","blockEditorStore","getBlockName","isFirstMultiSelectedBlock","getMultiSelectedBlockClientIds","every","id"],"mappings":";;;;;;;AAGA;;AAKA;;AACA;;AATA;AACA;AACA;;AAGA;AACA;AACA;AAIe,SAASA,uBAAT,GAAmC;AAAA,6BACV,mCADU;AAAA,MACzCC,UADyC,wBACzCA,UADyC;AAAA,MAC7BC,QAD6B,wBAC7BA,QAD6B;AAAA,MACnBC,IADmB,wBACnBA,IADmB;;AAEjD,MAAMC,+BAA+B,GAAG,qBACvC,UAAEC,MAAF,EAAc;AACb;AACA,QAAKJ,UAAL,EAAkB;AACjB;AACA;;AAJY,kBAUTI,MAAM,CAAEC,YAAF,CAVG;AAAA,QAOZC,YAPY,WAOZA,YAPY;AAAA,QAQZC,yBARY,WAQZA,yBARY;AAAA,QASZC,8BATY,WASZA,8BATY;;AAYb,QAAK,CAAED,yBAAyB,CAAEN,QAAF,CAAhC,EAA+C;AAC9C,aAAO,KAAP;AACA;;AAED,WAAOO,8BAA8B,GAAGC,KAAjC,CACN,UAAEC,EAAF;AAAA,aAAUJ,YAAY,CAAEI,EAAF,CAAZ,KAAuBR,IAAjC;AAAA,KADM,CAAP;AAGA,GApBsC,EAqBvC,CAAED,QAAF,EAAYD,UAAZ,EAAwBE,IAAxB,CArBuC,CAAxC;AAwBA,SAAOF,UAAU,IAAIG,+BAArB;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { useBlockEditContext } from '../block-edit/context';\nimport { store as blockEditorStore } from '../../store';\n\nexport default function useDisplayBlockControls() {\n\tconst { isSelected, clientId, name } = useBlockEditContext();\n\tconst isFirstAndSameTypeMultiSelected = useSelect(\n\t\t( select ) => {\n\t\t\t// Don't bother checking, see OR statement below.\n\t\t\tif ( isSelected ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\tgetBlockName,\n\t\t\t\tisFirstMultiSelectedBlock,\n\t\t\t\tgetMultiSelectedBlockClientIds,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\tif ( ! isFirstMultiSelectedBlock( clientId ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn getMultiSelectedBlockClientIds().every(\n\t\t\t\t( id ) => getBlockName( id ) === name\n\t\t\t);\n\t\t},\n\t\t[ clientId, isSelected, name ]\n\t);\n\n\treturn isSelected || isFirstAndSameTypeMultiSelected;\n}\n"]}