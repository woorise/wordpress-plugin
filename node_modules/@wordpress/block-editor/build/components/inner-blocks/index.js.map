{"version":3,"sources":["@wordpress/block-editor/src/components/inner-blocks/index.js"],"names":["UncontrolledInnerBlocks","props","clientId","allowedBlocks","template","templateLock","wrapperRef","templateInsertUpdatesSelection","captureToolbars","__experimentalCaptureToolbars","__experimentalAppenderTagName","renderAppender","orientation","placeholder","__experimentalLayout","context","select","block","blockEditorStore","getBlock","blockType","name","providesContext","attributes","ControlledInnerBlocks","ForwardedInnerBlocks","ref","innerBlocksProps","useInnerBlocksProps","options","fallbackRef","isSmallScreen","hasOverlay","getBlockName","isBlockSelected","hasSelectedInnerBlock","isNavigationMode","enableClickThrough","InnerBlocks","value","onChange","className","children","DefaultBlockAppender","ButtonBlockAppender","Content","BlockContent"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useViewportMatch, useMergeRefs } from '@wordpress/compose';\nimport { forwardRef, useRef } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { getBlockType, withBlockContentContext } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport ButtonBlockAppender from './button-block-appender';\nimport DefaultBlockAppender from './default-block-appender';\nimport useNestedSettingsUpdate from './use-nested-settings-update';\nimport useInnerBlockTemplateSync from './use-inner-block-template-sync';\nimport getBlockContext from './get-block-context';\nimport { BlockListItems } from '../block-list';\nimport { BlockContextProvider } from '../block-context';\nimport { useBlockEditContext } from '../block-edit/context';\nimport useBlockSync from '../provider/use-block-sync';\nimport { store as blockEditorStore } from '../../store';\n\n/**\n * InnerBlocks is a component which allows a single block to have multiple blocks\n * as children. The UncontrolledInnerBlocks component is used whenever the inner\n * blocks are not controlled by another entity. In other words, it is normally\n * used for inner blocks in the post editor\n *\n * @param {Object} props The component props.\n */\nfunction UncontrolledInnerBlocks( props ) {\n\tconst {\n\t\tclientId,\n\t\tallowedBlocks,\n\t\ttemplate,\n\t\ttemplateLock,\n\t\twrapperRef,\n\t\ttemplateInsertUpdatesSelection,\n\t\t__experimentalCaptureToolbars: captureToolbars,\n\t\t__experimentalAppenderTagName,\n\t\trenderAppender,\n\t\torientation,\n\t\tplaceholder,\n\t\t__experimentalLayout,\n\t} = props;\n\n\tuseNestedSettingsUpdate(\n\t\tclientId,\n\t\tallowedBlocks,\n\t\ttemplateLock,\n\t\tcaptureToolbars,\n\t\torientation\n\t);\n\n\tuseInnerBlockTemplateSync(\n\t\tclientId,\n\t\ttemplate,\n\t\ttemplateLock,\n\t\ttemplateInsertUpdatesSelection\n\t);\n\n\tconst context = useSelect(\n\t\t( select ) => {\n\t\t\tconst block = select( blockEditorStore ).getBlock( clientId );\n\t\t\tconst blockType = getBlockType( block.name );\n\n\t\t\tif ( ! blockType || ! blockType.providesContext ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn getBlockContext( block.attributes, blockType );\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\t// This component needs to always be synchronous as it's the one changing\n\t// the async mode depending on the block selection.\n\treturn (\n\t\t<BlockContextProvider value={ context }>\n\t\t\t<BlockListItems\n\t\t\t\trootClientId={ clientId }\n\t\t\t\trenderAppender={ renderAppender }\n\t\t\t\t__experimentalAppenderTagName={ __experimentalAppenderTagName }\n\t\t\t\t__experimentalLayout={ __experimentalLayout }\n\t\t\t\twrapperRef={ wrapperRef }\n\t\t\t\tplaceholder={ placeholder }\n\t\t\t/>\n\t\t</BlockContextProvider>\n\t);\n}\n\n/**\n * The controlled inner blocks component wraps the uncontrolled inner blocks\n * component with the blockSync hook. This keeps the innerBlocks of the block in\n * the block-editor store in sync with the blocks of the controlling entity. An\n * example of an inner block controller is a template part block, which provides\n * its own blocks from the template part entity data source.\n *\n * @param {Object} props The component props.\n */\nfunction ControlledInnerBlocks( props ) {\n\tuseBlockSync( props );\n\treturn <UncontrolledInnerBlocks { ...props } />;\n}\n\nconst ForwardedInnerBlocks = forwardRef( ( props, ref ) => {\n\tconst innerBlocksProps = useInnerBlocksProps( { ref }, props );\n\treturn (\n\t\t<div className=\"block-editor-inner-blocks\">\n\t\t\t<div { ...innerBlocksProps } />\n\t\t</div>\n\t);\n} );\n\n/**\n * This hook is used to lightly mark an element as an inner blocks wrapper\n * element. Call this hook and pass the returned props to the element to mark as\n * an inner blocks wrapper, automatically rendering inner blocks as children. If\n * you define a ref for the element, it is important to pass the ref to this\n * hook, which the hook in turn will pass to the component through the props it\n * returns. Optionally, you can also pass any other props through this hook, and\n * they will be merged and returned.\n *\n * @param {Object} props   Optional. Props to pass to the element. Must contain\n *                         the ref if one is defined.\n * @param {Object} options Optional. Inner blocks options.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/inner-blocks/README.md\n */\nexport function useInnerBlocksProps( props = {}, options = {} ) {\n\tconst fallbackRef = useRef();\n\tconst { clientId } = useBlockEditContext();\n\tconst isSmallScreen = useViewportMatch( 'medium', '<' );\n\tconst hasOverlay = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockName,\n\t\t\t\tisBlockSelected,\n\t\t\t\thasSelectedInnerBlock,\n\t\t\t\tisNavigationMode,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst enableClickThrough = isNavigationMode() || isSmallScreen;\n\t\t\treturn (\n\t\t\t\tgetBlockName( clientId ) !== 'core/template' &&\n\t\t\t\t! isBlockSelected( clientId ) &&\n\t\t\t\t! hasSelectedInnerBlock( clientId, true ) &&\n\t\t\t\tenableClickThrough\n\t\t\t);\n\t\t},\n\t\t[ clientId, isSmallScreen ]\n\t);\n\n\tconst ref = useMergeRefs( [ props.ref, fallbackRef ] );\n\tconst InnerBlocks =\n\t\toptions.value && options.onChange\n\t\t\t? ControlledInnerBlocks\n\t\t\t: UncontrolledInnerBlocks;\n\n\treturn {\n\t\t...props,\n\t\tref,\n\t\tclassName: classnames(\n\t\t\tprops.className,\n\t\t\t'block-editor-block-list__layout',\n\t\t\t{\n\t\t\t\t'has-overlay': hasOverlay,\n\t\t\t}\n\t\t),\n\t\tchildren: (\n\t\t\t<InnerBlocks\n\t\t\t\t{ ...options }\n\t\t\t\tclientId={ clientId }\n\t\t\t\twrapperRef={ fallbackRef }\n\t\t\t/>\n\t\t),\n\t};\n}\n\n// Expose default appender placeholders as components.\nForwardedInnerBlocks.DefaultBlockAppender = DefaultBlockAppender;\nForwardedInnerBlocks.ButtonBlockAppender = ButtonBlockAppender;\n\nForwardedInnerBlocks.Content = withBlockContentContext(\n\t( { BlockContent } ) => <BlockContent />\n);\n\n/**\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/inner-blocks/README.md\n */\nexport default ForwardedInnerBlocks;\n"]}