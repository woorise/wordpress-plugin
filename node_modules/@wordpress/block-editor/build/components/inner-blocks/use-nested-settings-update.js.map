{"version":3,"sources":["@wordpress/block-editor/src/components/inner-blocks/use-nested-settings-update.js"],"names":["useNestedSettingsUpdate","clientId","allowedBlocks","templateLock","captureToolbars","orientation","blockEditorStore","updateBlockListSettings","select","rootClientId","getBlockRootClientId","blockListSettings","getBlockListSettings","parentLock","getTemplateLock","newSettings","undefined","__experimentalCaptureToolbars"],"mappings":";;;;;;;;;AAGA;;AACA;;AACA;;AAKA;;AAVA;AACA;AACA;;AAKA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,uBAAT,CACdC,QADc,EAEdC,aAFc,EAGdC,YAHc,EAIdC,eAJc,EAKdC,WALc,EAMb;AAAA,qBACmC,uBAAaC,YAAb,CADnC;AAAA,MACOC,uBADP,gBACOA,uBADP;;AAAA,mBAGyC,qBACzC,UAAEC,MAAF,EAAc;AACb,QAAMC,YAAY,GAAGD,MAAM,CAC1BF,YAD0B,CAAN,CAEnBI,oBAFmB,CAEGT,QAFH,CAArB;AAGA,WAAO;AACNU,MAAAA,iBAAiB,EAAEH,MAAM,CACxBF,YADwB,CAAN,CAEjBM,oBAFiB,CAEKX,QAFL,CADb;AAINY,MAAAA,UAAU,EAAEL,MAAM,CAAEF,YAAF,CAAN,CAA2BQ,eAA3B,CACXL,YADW;AAJN,KAAP;AAQA,GAbwC,EAczC,CAAER,QAAF,CAdyC,CAHzC;AAAA,MAGOU,iBAHP,cAGOA,iBAHP;AAAA,MAG0BE,UAH1B,cAG0BA,UAH1B;;AAoBD,gCAAiB,YAAM;AACtB,QAAME,WAAW,GAAG;AACnBb,MAAAA,aAAa,EAAbA,aADmB;AAEnBC,MAAAA,YAAY,EACXA,YAAY,KAAKa,SAAjB,GAA6BH,UAA7B,GAA0CV;AAHxB,KAApB,CADsB,CAOtB;AACA;;AACA,QAAKC,eAAe,KAAKY,SAAzB,EAAqC;AACpCD,MAAAA,WAAW,CAACE,6BAAZ,GAA4Cb,eAA5C;AACA;;AAED,QAAKC,WAAW,KAAKW,SAArB,EAAiC;AAChCD,MAAAA,WAAW,CAACV,WAAZ,GAA0BA,WAA1B;AACA;;AAED,QAAK,CAAE,6BAAgBM,iBAAhB,EAAmCI,WAAnC,CAAP,EAA0D;AACzDR,MAAAA,uBAAuB,CAAEN,QAAF,EAAYc,WAAZ,CAAvB;AACA;AACD,GApBD,EAoBG,CACFd,QADE,EAEFU,iBAFE,EAGFT,aAHE,EAIFC,YAJE,EAKFU,UALE,EAMFT,eANE,EAOFC,WAPE,EAQFE,uBARE,CApBH;AA8BA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useLayoutEffect } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\n/**\n * This hook is a side effect which updates the block-editor store when changes\n * happen to inner block settings. The given props are transformed into a\n * settings object, and if that is different from the current settings object in\n * the block-editor store, then the store is updated with the new settings which\n * came from props.\n *\n * @param {string}   clientId        The client ID of the block to update.\n * @param {string[]} allowedBlocks   An array of block names which are permitted\n *                                   in inner blocks.\n * @param {string}   [templateLock]  The template lock specified for the inner\n *                                   blocks component. (e.g. \"all\")\n * @param {boolean}  captureToolbars Whether or children toolbars should be shown\n *                                   in the inner blocks component rather than on\n *                                   the child block.\n * @param {string}   orientation     The direction in which the block\n *                                   should face.\n */\nexport default function useNestedSettingsUpdate(\n\tclientId,\n\tallowedBlocks,\n\ttemplateLock,\n\tcaptureToolbars,\n\torientation\n) {\n\tconst { updateBlockListSettings } = useDispatch( blockEditorStore );\n\n\tconst { blockListSettings, parentLock } = useSelect(\n\t\t( select ) => {\n\t\t\tconst rootClientId = select(\n\t\t\t\tblockEditorStore\n\t\t\t).getBlockRootClientId( clientId );\n\t\t\treturn {\n\t\t\t\tblockListSettings: select(\n\t\t\t\t\tblockEditorStore\n\t\t\t\t).getBlockListSettings( clientId ),\n\t\t\t\tparentLock: select( blockEditorStore ).getTemplateLock(\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tuseLayoutEffect( () => {\n\t\tconst newSettings = {\n\t\t\tallowedBlocks,\n\t\t\ttemplateLock:\n\t\t\t\ttemplateLock === undefined ? parentLock : templateLock,\n\t\t};\n\n\t\t// These values are not defined for RN, so only include them if they\n\t\t// are defined.\n\t\tif ( captureToolbars !== undefined ) {\n\t\t\tnewSettings.__experimentalCaptureToolbars = captureToolbars;\n\t\t}\n\n\t\tif ( orientation !== undefined ) {\n\t\t\tnewSettings.orientation = orientation;\n\t\t}\n\n\t\tif ( ! isShallowEqual( blockListSettings, newSettings ) ) {\n\t\t\tupdateBlockListSettings( clientId, newSettings );\n\t\t}\n\t}, [\n\t\tclientId,\n\t\tblockListSettings,\n\t\tallowedBlocks,\n\t\ttemplateLock,\n\t\tparentLock,\n\t\tcaptureToolbars,\n\t\torientation,\n\t\tupdateBlockListSettings,\n\t] );\n}\n"]}