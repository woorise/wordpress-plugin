{"version":3,"sources":["@wordpress/block-editor/src/components/block-list-appender/index.js"],"names":["AppenderNodesContext","stopPropagation","event","BlockListAppender","blockClientIds","rootClientId","canInsertDefaultBlock","isLocked","CustomAppender","renderAppender","className","selectedBlockClientId","tagName","TagName","appender","isDocumentAppender","isParentSelected","isAnotherDefaultAppenderAlreadyDisplayed","includes","select","blockEditorStore","getBlockOrder","canInsertBlockType","getTemplateLock","getSelectedBlockClientId"],"mappings":";;;;;;;;;AASA;;AANA;;AACA;;AAMA;;AACA;;AAKA;;AACA;;AACA;;AAlBA;AACA;AACA;;AAIA;AACA;AACA;;AAKA;AACA;AACA;AAKA;AACO,IAAMA,oBAAoB,GAAG,6BAA7B;;;AAEP,SAASC,eAAT,CAA0BC,KAA1B,EAAkC;AACjCA,EAAAA,KAAK,CAACD,eAAN;AACA;;AAED,SAASE,iBAAT,OASI;AAAA,MARHC,cAQG,QARHA,cAQG;AAAA,MAPHC,YAOG,QAPHA,YAOG;AAAA,MANHC,qBAMG,QANHA,qBAMG;AAAA,MALHC,QAKG,QALHA,QAKG;AAAA,MAJaC,cAIb,QAJHC,cAIG;AAAA,MAHHC,SAGG,QAHHA,SAGG;AAAA,MAFHC,qBAEG,QAFHA,qBAEG;AAAA,0BADHC,OACG;AAAA,MADMC,OACN,6BADgB,KAChB;;AACH,MAAKN,QAAQ,IAAIC,cAAc,KAAK,KAApC,EAA4C;AAC3C,WAAO,IAAP;AACA;;AAED,MAAIM,QAAJ;;AACA,MAAKN,cAAL,EAAsB;AACrB;AACAM,IAAAA,QAAQ,GAAG,4BAAC,cAAD,OAAX;AACA,GAHD,MAGO;AACN,QAAMC,kBAAkB,GAAG,CAAEV,YAA7B;AACA,QAAMW,gBAAgB,GAAGL,qBAAqB,KAAKN,YAAnD;AACA,QAAMY,wCAAwC,GAC7CN,qBAAqB,IACrB,CAAEP,cAAc,CAACc,QAAf,CAAyBP,qBAAzB,CAFH;;AAIA,QACC,CAAEI,kBAAF,IACA,CAAEC,gBADF,KAEE,CAAEL,qBAAF,IACDM,wCAHD,CADD,EAKE;AACD,aAAO,IAAP;AACA;;AAED,QAAKX,qBAAL,EAA6B;AAC5B;AACA;AACAQ,MAAAA,QAAQ,GACP,4BAAC,6BAAD;AACC,QAAA,YAAY,EAAGT,YADhB;AAEC,QAAA,iBAAiB,EAAG,kBAAMD,cAAN;AAFrB,QADD;AAMA,KATD,MASO;AACN;AACA;AACAU,MAAAA,QAAQ,GACP,4BAAC,4BAAD;AACC,QAAA,YAAY,EAAGT,YADhB;AAEC,QAAA,SAAS,EAAC;AAFX,QADD;AAMA;AACD;;AAED,SACC,4BAAC,OAAD,CACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARD;AASC,IAAA,QAAQ,EAAG,CAAC,CATb,CAUC;AACA;AAXD;AAYC,IAAA,OAAO,EAAGJ,eAZX;AAaC,IAAA,SAAS,EAAG,yBACX,qBADW,EAEX,UAFW,EAGXS,SAHW;AAbb,KAmBGI,QAnBH,CADD;AAuBA;;eAEc,sBAAY,UAAEK,MAAF,SAAgC;AAAA,MAApBd,YAAoB,SAApBA,YAAoB;;AAAA,gBAMtDc,MAAM,CAAEC,YAAF,CANgD;AAAA,MAEzDC,aAFyD,WAEzDA,aAFyD;AAAA,MAGzDC,kBAHyD,WAGzDA,kBAHyD;AAAA,MAIzDC,eAJyD,WAIzDA,eAJyD;AAAA,MAKzDC,wBALyD,WAKzDA,wBALyD;;AAQ1D,SAAO;AACNjB,IAAAA,QAAQ,EAAE,CAAC,CAAEgB,eAAe,CAAElB,YAAF,CADtB;AAEND,IAAAA,cAAc,EAAEiB,aAAa,CAAEhB,YAAF,CAFvB;AAGNC,IAAAA,qBAAqB,EAAEgB,kBAAkB,CACxC,kCADwC,EAExCjB,YAFwC,CAHnC;AAONM,IAAAA,qBAAqB,EAAEa,wBAAwB;AAPzC,GAAP;AASA,CAjBc,EAiBVrB,iBAjBU,C","sourcesContent":["/**\n * External dependencies\n */\nimport { last } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { createContext } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { getDefaultBlockName } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport DefaultBlockAppender from '../default-block-appender';\nimport ButtonBlockAppender from '../button-block-appender';\nimport { store as blockEditorStore } from '../../store';\n\n// A Context to store the map of the appender map.\nexport const AppenderNodesContext = createContext();\n\nfunction stopPropagation( event ) {\n\tevent.stopPropagation();\n}\n\nfunction BlockListAppender( {\n\tblockClientIds,\n\trootClientId,\n\tcanInsertDefaultBlock,\n\tisLocked,\n\trenderAppender: CustomAppender,\n\tclassName,\n\tselectedBlockClientId,\n\ttagName: TagName = 'div',\n} ) {\n\tif ( isLocked || CustomAppender === false ) {\n\t\treturn null;\n\t}\n\n\tlet appender;\n\tif ( CustomAppender ) {\n\t\t// Prefer custom render prop if provided.\n\t\tappender = <CustomAppender />;\n\t} else {\n\t\tconst isDocumentAppender = ! rootClientId;\n\t\tconst isParentSelected = selectedBlockClientId === rootClientId;\n\t\tconst isAnotherDefaultAppenderAlreadyDisplayed =\n\t\t\tselectedBlockClientId &&\n\t\t\t! blockClientIds.includes( selectedBlockClientId );\n\n\t\tif (\n\t\t\t! isDocumentAppender &&\n\t\t\t! isParentSelected &&\n\t\t\t( ! selectedBlockClientId ||\n\t\t\t\tisAnotherDefaultAppenderAlreadyDisplayed )\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( canInsertDefaultBlock ) {\n\t\t\t// Render the default block appender when renderAppender has not been\n\t\t\t// provided and the context supports use of the default appender.\n\t\t\tappender = (\n\t\t\t\t<DefaultBlockAppender\n\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\tlastBlockClientId={ last( blockClientIds ) }\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\t// Fallback in the case no renderAppender has been provided and the\n\t\t\t// default block can't be inserted.\n\t\t\tappender = (\n\t\t\t\t<ButtonBlockAppender\n\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\tclassName=\"block-list-appender__toggle\"\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<TagName\n\t\t\t// A `tabIndex` is used on the wrapping `div` element in order to\n\t\t\t// force a focus event to occur when an appender `button` element\n\t\t\t// is clicked. In some browsers (Firefox, Safari), button clicks do\n\t\t\t// not emit a focus event, which could cause this event to propagate\n\t\t\t// unexpectedly. The `tabIndex` ensures that the interaction is\n\t\t\t// captured as a focus, without also adding an extra tab stop.\n\t\t\t//\n\t\t\t// See: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n\t\t\ttabIndex={ -1 }\n\t\t\t// Prevent the block from being selected when the appender is\n\t\t\t// clicked.\n\t\t\tonFocus={ stopPropagation }\n\t\t\tclassName={ classnames(\n\t\t\t\t'block-list-appender',\n\t\t\t\t'wp-block',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t>\n\t\t\t{ appender }\n\t\t</TagName>\n\t);\n}\n\nexport default withSelect( ( select, { rootClientId } ) => {\n\tconst {\n\t\tgetBlockOrder,\n\t\tcanInsertBlockType,\n\t\tgetTemplateLock,\n\t\tgetSelectedBlockClientId,\n\t} = select( blockEditorStore );\n\n\treturn {\n\t\tisLocked: !! getTemplateLock( rootClientId ),\n\t\tblockClientIds: getBlockOrder( rootClientId ),\n\t\tcanInsertDefaultBlock: canInsertBlockType(\n\t\t\tgetDefaultBlockName(),\n\t\t\trootClientId\n\t\t),\n\t\tselectedBlockClientId: getSelectedBlockClientId(),\n\t};\n} )( BlockListAppender );\n"]}