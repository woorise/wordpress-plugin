{"version":3,"sources":["@wordpress/block-editor/src/components/block-variation-transforms/index.js"],"names":["__experimentalBlockVariationTransforms","blockClientId","selectedValue","setSelectedValue","blockEditorStore","updateBlockAttributes","select","blocksStore","getBlockVariations","getBlockName","getBlockAttributes","blockName","variations","blockAttributes","name","length","selectOptions","map","title","description","value","label","info","onSelectVariation","variationName","find","attributes","baseClass","position","className","chevronDown","iconPosition"],"mappings":";;;;;;;;;AAWA;;;;;;AARA;;AACA;;AACA;;AAKA;;AAEA;;AAKA;;AACA;;;;;;AAEA,SAASA,sCAAT,OAAqE;AAAA,MAAlBC,aAAkB,QAAlBA,aAAkB;;AAAA,kBACxB,wBADwB;AAAA;AAAA,MAC5DC,aAD4D;AAAA,MAC7CC,gBAD6C;;AAAA,qBAElC,uBAAaC,YAAb,CAFkC;AAAA,MAE5DC,qBAF4D,gBAE5DA,qBAF4D;;AAAA,mBAG5B,qBACvC,UAAEC,MAAF,EAAc;AAAA,kBACkBA,MAAM,CAAEC,aAAF,CADxB;AAAA,QACLC,kBADK,WACLA,kBADK;;AAAA,mBAEgCF,MAAM,CAClDF,YADkD,CAFtC;AAAA,QAELK,YAFK,YAELA,YAFK;AAAA,QAESC,kBAFT,YAESA,kBAFT;;AAKb,QAAMC,SAAS,GAAGV,aAAa,IAAIQ,YAAY,CAAER,aAAF,CAA/C;AACA,WAAO;AACNW,MAAAA,UAAU,EACTD,SAAS,IAAIH,kBAAkB,CAAEG,SAAF,EAAa,WAAb,CAF1B;AAGNE,MAAAA,eAAe,EAAEH,kBAAkB,CAAET,aAAF;AAH7B,KAAP;AAKA,GAZsC,EAavC,CAAEA,aAAF,CAbuC,CAH4B;AAAA,MAG5DW,UAH4D,cAG5DA,UAH4D;AAAA,MAGhDC,eAHgD,cAGhDA,eAHgD;;AAkBpE,0BAAW,YAAM;AAAA;;AAChBV,IAAAA,gBAAgB,0BACf,+CAAsBU,eAAtB,EAAuCD,UAAvC,CADe,0DACf,sBAAqDE,IADtC,CAAhB;AAGA,GAJD,EAIG,CAAED,eAAF,EAAmBD,UAAnB,CAJH;AAKA,MAAK,EAAEA,UAAF,aAAEA,UAAF,eAAEA,UAAU,CAAEG,MAAd,CAAL,EAA4B,OAAO,IAAP;AAE5B,MAAMC,aAAa,GAAGJ,UAAU,CAACK,GAAX,CACrB;AAAA,QAAIH,IAAJ,SAAIA,IAAJ;AAAA,QAAUI,KAAV,SAAUA,KAAV;AAAA,QAAiBC,WAAjB,SAAiBA,WAAjB;AAAA,WAAsC;AACrCC,MAAAA,KAAK,EAAEN,IAD8B;AAErCO,MAAAA,KAAK,EAAEH,KAF8B;AAGrCI,MAAAA,IAAI,EAAEH;AAH+B,KAAtC;AAAA,GADqB,CAAtB;;AAOA,MAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAAEC,aAAF,EAAqB;AAC9CnB,IAAAA,qBAAqB,CAAEJ,aAAF,oBACjBW,UAAU,CAACa,IAAX,CAAiB;AAAA,UAAIX,IAAJ,SAAIA,IAAJ;AAAA,aAAgBA,IAAI,KAAKU,aAAzB;AAAA,KAAjB,EACDE,UAFkB,EAArB;AAIA,GALD;;AAMA,MAAMC,SAAS,GAAG,yCAAlB;AACA,SACC,4BAAC,wBAAD;AACC,IAAA,SAAS,EAAGA,SADb;AAEC,IAAA,KAAK,EAAG,cAAI,wBAAJ,CAFT;AAGC,IAAA,IAAI,EAAG,cAAI,wBAAJ,CAHR;AAIC,IAAA,YAAY,EAAG;AACdC,MAAAA,QAAQ,EAAE,eADI;AAEdC,MAAAA,SAAS,YAAMF,SAAN;AAFK,KAJhB;AAQC,IAAA,IAAI,EAAGG,kBARR;AASC,IAAA,WAAW,EAAG;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AATf,KAWG;AAAA,WACD;AAAK,MAAA,SAAS,YAAOJ,SAAP;AAAd,OACC,4BAAC,qBAAD,QACC,4BAAC,2BAAD;AACC,MAAA,OAAO,EAAGX,aADX;AAEC,MAAA,KAAK,EAAGd,aAFT;AAGC,MAAA,QAAQ,EAAGqB;AAHZ,MADD,CADD,CADC;AAAA,GAXH,CADD;AAyBA;;eAEcvB,sC","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tDropdownMenu,\n\tMenuGroup,\n\tMenuItemsChoice,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState, useEffect } from '@wordpress/element';\nimport { chevronDown } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { __experimentalGetMatchingVariation as getMatchingVariation } from '../../utils';\nimport { store as blockEditorStore } from '../../store';\n\nfunction __experimentalBlockVariationTransforms( { blockClientId } ) {\n\tconst [ selectedValue, setSelectedValue ] = useState();\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\tconst { variations, blockAttributes } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockVariations } = select( blocksStore );\n\t\t\tconst { getBlockName, getBlockAttributes } = select(\n\t\t\t\tblockEditorStore\n\t\t\t);\n\t\t\tconst blockName = blockClientId && getBlockName( blockClientId );\n\t\t\treturn {\n\t\t\t\tvariations:\n\t\t\t\t\tblockName && getBlockVariations( blockName, 'transform' ),\n\t\t\t\tblockAttributes: getBlockAttributes( blockClientId ),\n\t\t\t};\n\t\t},\n\t\t[ blockClientId ]\n\t);\n\tuseEffect( () => {\n\t\tsetSelectedValue(\n\t\t\tgetMatchingVariation( blockAttributes, variations )?.name\n\t\t);\n\t}, [ blockAttributes, variations ] );\n\tif ( ! variations?.length ) return null;\n\n\tconst selectOptions = variations.map(\n\t\t( { name, title, description } ) => ( {\n\t\t\tvalue: name,\n\t\t\tlabel: title,\n\t\t\tinfo: description,\n\t\t} )\n\t);\n\tconst onSelectVariation = ( variationName ) => {\n\t\tupdateBlockAttributes( blockClientId, {\n\t\t\t...variations.find( ( { name } ) => name === variationName )\n\t\t\t\t.attributes,\n\t\t} );\n\t};\n\tconst baseClass = 'block-editor-block-variation-transforms';\n\treturn (\n\t\t<DropdownMenu\n\t\t\tclassName={ baseClass }\n\t\t\tlabel={ __( 'Transform to variation' ) }\n\t\t\ttext={ __( 'Transform to variation' ) }\n\t\t\tpopoverProps={ {\n\t\t\t\tposition: 'bottom center',\n\t\t\t\tclassName: `${ baseClass }__popover`,\n\t\t\t} }\n\t\t\ticon={ chevronDown }\n\t\t\ttoggleProps={ { iconPosition: 'right' } }\n\t\t>\n\t\t\t{ () => (\n\t\t\t\t<div className={ `${ baseClass }__container` }>\n\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t<MenuItemsChoice\n\t\t\t\t\t\t\tchoices={ selectOptions }\n\t\t\t\t\t\t\tvalue={ selectedValue }\n\t\t\t\t\t\t\tonSelect={ onSelectVariation }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MenuGroup>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</DropdownMenu>\n\t);\n}\n\nexport default __experimentalBlockVariationTransforms;\n"]}