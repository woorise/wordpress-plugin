"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _blocks = require("@wordpress/blocks");

var _i18n = require("@wordpress/i18n");

var _components = require("@wordpress/components");

var _data = require("@wordpress/data");

var _icons = require("@wordpress/icons");

var _utils = require("../../utils");

var _store = require("../../store");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function __experimentalBlockVariationTransforms(_ref) {
  var blockClientId = _ref.blockClientId;

  var _useState = (0, _element.useState)(),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      selectedValue = _useState2[0],
      setSelectedValue = _useState2[1];

  var _useDispatch = (0, _data.useDispatch)(_store.store),
      updateBlockAttributes = _useDispatch.updateBlockAttributes;

  var _useSelect = (0, _data.useSelect)(function (select) {
    var _select = select(_blocks.store),
        getBlockVariations = _select.getBlockVariations;

    var _select2 = select(_store.store),
        getBlockName = _select2.getBlockName,
        getBlockAttributes = _select2.getBlockAttributes;

    var blockName = blockClientId && getBlockName(blockClientId);
    return {
      variations: blockName && getBlockVariations(blockName, 'transform'),
      blockAttributes: getBlockAttributes(blockClientId)
    };
  }, [blockClientId]),
      variations = _useSelect.variations,
      blockAttributes = _useSelect.blockAttributes;

  (0, _element.useEffect)(function () {
    var _getMatchingVariation;

    setSelectedValue((_getMatchingVariation = (0, _utils.__experimentalGetMatchingVariation)(blockAttributes, variations)) === null || _getMatchingVariation === void 0 ? void 0 : _getMatchingVariation.name);
  }, [blockAttributes, variations]);
  if (!(variations !== null && variations !== void 0 && variations.length)) return null;
  var selectOptions = variations.map(function (_ref2) {
    var name = _ref2.name,
        title = _ref2.title,
        description = _ref2.description;
    return {
      value: name,
      label: title,
      info: description
    };
  });

  var onSelectVariation = function onSelectVariation(variationName) {
    updateBlockAttributes(blockClientId, _objectSpread({}, variations.find(function (_ref3) {
      var name = _ref3.name;
      return name === variationName;
    }).attributes));
  };

  var baseClass = 'block-editor-block-variation-transforms';
  return (0, _element.createElement)(_components.DropdownMenu, {
    className: baseClass,
    label: (0, _i18n.__)('Transform to variation'),
    text: (0, _i18n.__)('Transform to variation'),
    popoverProps: {
      position: 'bottom center',
      className: "".concat(baseClass, "__popover")
    },
    icon: _icons.chevronDown,
    toggleProps: {
      iconPosition: 'right'
    }
  }, function () {
    return (0, _element.createElement)("div", {
      className: "".concat(baseClass, "__container")
    }, (0, _element.createElement)(_components.MenuGroup, null, (0, _element.createElement)(_components.MenuItemsChoice, {
      choices: selectOptions,
      value: selectedValue,
      onSelect: onSelectVariation
    })));
  });
}

var _default = __experimentalBlockVariationTransforms;
exports.default = _default;
//# sourceMappingURL=index.js.map