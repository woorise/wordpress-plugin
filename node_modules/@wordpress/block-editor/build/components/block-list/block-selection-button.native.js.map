{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/block-selection-button.native.js"],"names":["BlockSelectionButton","clientId","rootClientId","rootBlockIcon","isRTL","blockInformation","styles","selectionButtonContainer","densedPaddingLeft","button","src","icon","color","arrow","selectionButtonTitle","select","blockEditorStore","getBlockRootClientId","getBlockName","getSettings","rootBlockName","rootBlockType"],"mappings":";;;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AAKA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AApBA;AACA;AACA;;AAMA;AACA;AACA;;AAGA;AACA;AACA;AAOA,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,OAKtB;AAAA;;AAAA,MAJNC,QAIM,QAJNA,QAIM;AAAA,MAHNC,YAGM,QAHNA,YAGM;AAAA,MAFNC,aAEM,QAFNA,aAEM;AAAA,MADNC,KACM,QADNA,KACM;AACN,MAAMC,gBAAgB,GAAG,yCAA4BJ,QAA5B,CAAzB;AACA,SACC,4BAAC,iBAAD;AACC,IAAA,KAAK,EAAG,CACPK,8BAAOC,wBADA,EAEPL,YAAY,IAAII,8BAAOE,iBAFhB;AADT,KAMC,4BAAC,6BAAD;AACC,IAAA,KAAK,EAAGF,8BAAOG,MADhB;AAEC,IAAA,OAAO,EAAG,mBAAM;AACf;AACA,KAJF;AAKC,IAAA,QAAQ,EACP;AACC;;AAPH,KASGP,YAAY,IACbC,aADC,IACgB,CAChB,4BAAC,gBAAD;AACC,IAAA,GAAG,EAAC,aADL;AAEC,IAAA,IAAI,EAAG,EAFR;AAGC,IAAA,IAAI,EAAGA,aAAa,CAACO,GAHtB;AAIC,IAAA,IAAI,EAAGJ,8BAAOK,IAAP,CAAYC;AAJpB,IADgB,EAOhB,4BAAC,iBAAD;AAAM,IAAA,GAAG,EAAC,mBAAV;AAA8B,IAAA,KAAK,EAAGN,8BAAOO;AAA7C,KACC,4BAAC,yBAAD;AACC,IAAA,IAAI,EAAGP,8BAAOO,KAAP,CAAaD,KADrB;AAEC,IAAA,KAAK,EAAGR;AAFT,IADD,CAPgB,CAVnB,EAwBC,4BAAC,gBAAD;AACC,IAAA,IAAI,EAAG,EADR;AAEC,IAAA,IAAI,EAAGC,gBAAH,aAAGA,gBAAH,gDAAGA,gBAAgB,CAAEM,IAArB,0DAAG,sBAAwBD,GAFhC;AAGC,IAAA,IAAI,EAAGJ,8BAAOK,IAAP,CAAYC;AAHpB,IAxBD,EA6BC,4BAAC,iBAAD;AACC,IAAA,qBAAqB,EAAG,IADzB;AAEC,IAAA,aAAa,EAAC,MAFf;AAGC,IAAA,aAAa,EAAG,CAHjB;AAIC,IAAA,KAAK,EAAGN,8BAAOQ;AAJhB,KAMC,4BAAC,mBAAD;AAAY,IAAA,QAAQ,EAAGb;AAAvB,IAND,CA7BD,CAND,CADD;AA+CA,CAtDD;;eAwDe,sBAAS,CACvB,sBAAY,UAAEc,MAAF,SAA4B;AAAA,MAAhBd,QAAgB,SAAhBA,QAAgB;;AAAA,gBACqBc,MAAM,CACjEC,YADiE,CAD3B;AAAA,MAC/BC,oBAD+B,WAC/BA,oBAD+B;AAAA,MACTC,YADS,WACTA,YADS;AAAA,MACKC,WADL,WACKA,WADL;;AAIvC,MAAMjB,YAAY,GAAGe,oBAAoB,CAAEhB,QAAF,CAAzC;;AAEA,MAAK,CAAEC,YAAP,EAAsB;AACrB,WAAO;AAAED,MAAAA,QAAQ,EAARA;AAAF,KAAP;AACA;;AACD,MAAMmB,aAAa,GAAGF,YAAY,CAAEhB,YAAF,CAAlC;AACA,MAAMmB,aAAa,GAAG,0BAAcD,aAAd,CAAtB;AACA,MAAMjB,aAAa,GAAGkB,aAAa,GAAGA,aAAa,CAACV,IAAjB,GAAwB,EAA3D;AAEA,SAAO;AACNV,IAAAA,QAAQ,EAARA,QADM;AAENC,IAAAA,YAAY,EAAZA,YAFM;AAGNC,IAAAA,aAAa,EAAbA,aAHM;AAINC,IAAAA,KAAK,EAAEe,WAAW,GAAGf;AAJf,GAAP;AAMA,CAnBD,CADuB,CAAT,EAqBVJ,oBArBU,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Icon } from '@wordpress/components';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { getBlockType } from '@wordpress/blocks';\n\n/**\n * External dependencies\n */\nimport { View, Text, TouchableOpacity } from 'react-native';\n\n/**\n * Internal dependencies\n */\nimport BlockTitle from '../block-title';\nimport useBlockDisplayInformation from '../use-block-display-information';\nimport SubdirectorSVG from './subdirectory-icon';\nimport { store as blockEditorStore } from '../../store';\nimport styles from './block-selection-button.scss';\n\nconst BlockSelectionButton = ( {\n\tclientId,\n\trootClientId,\n\trootBlockIcon,\n\tisRTL,\n} ) => {\n\tconst blockInformation = useBlockDisplayInformation( clientId );\n\treturn (\n\t\t<View\n\t\t\tstyle={ [\n\t\t\t\tstyles.selectionButtonContainer,\n\t\t\t\trootClientId && styles.densedPaddingLeft,\n\t\t\t] }\n\t\t>\n\t\t\t<TouchableOpacity\n\t\t\t\tstyle={ styles.button }\n\t\t\t\tonPress={ () => {\n\t\t\t\t\t/* Open BottomSheet with markup */\n\t\t\t\t} }\n\t\t\t\tdisabled={\n\t\t\t\t\ttrue\n\t\t\t\t} /* Disable temporarily since onPress function is empty */\n\t\t\t>\n\t\t\t\t{ rootClientId &&\n\t\t\t\t\trootBlockIcon && [\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tkey=\"parent-icon\"\n\t\t\t\t\t\t\tsize={ 24 }\n\t\t\t\t\t\t\ticon={ rootBlockIcon.src }\n\t\t\t\t\t\t\tfill={ styles.icon.color }\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\t<View key=\"subdirectory-icon\" style={ styles.arrow }>\n\t\t\t\t\t\t\t<SubdirectorSVG\n\t\t\t\t\t\t\t\tfill={ styles.arrow.color }\n\t\t\t\t\t\t\t\tisRTL={ isRTL }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>,\n\t\t\t\t\t] }\n\t\t\t\t<Icon\n\t\t\t\t\tsize={ 24 }\n\t\t\t\t\ticon={ blockInformation?.icon?.src }\n\t\t\t\t\tfill={ styles.icon.color }\n\t\t\t\t/>\n\t\t\t\t<Text\n\t\t\t\t\tmaxFontSizeMultiplier={ 1.25 }\n\t\t\t\t\tellipsizeMode=\"tail\"\n\t\t\t\t\tnumberOfLines={ 1 }\n\t\t\t\t\tstyle={ styles.selectionButtonTitle }\n\t\t\t\t>\n\t\t\t\t\t<BlockTitle clientId={ clientId } />\n\t\t\t\t</Text>\n\t\t\t</TouchableOpacity>\n\t\t</View>\n\t);\n};\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst { getBlockRootClientId, getBlockName, getSettings } = select(\n\t\t\tblockEditorStore\n\t\t);\n\t\tconst rootClientId = getBlockRootClientId( clientId );\n\n\t\tif ( ! rootClientId ) {\n\t\t\treturn { clientId };\n\t\t}\n\t\tconst rootBlockName = getBlockName( rootClientId );\n\t\tconst rootBlockType = getBlockType( rootBlockName );\n\t\tconst rootBlockIcon = rootBlockType ? rootBlockType.icon : {};\n\n\t\treturn {\n\t\t\tclientId,\n\t\t\trootClientId,\n\t\t\trootBlockIcon,\n\t\t\tisRTL: getSettings().isRTL,\n\t\t};\n\t} ),\n] )( BlockSelectionButton );\n"]}