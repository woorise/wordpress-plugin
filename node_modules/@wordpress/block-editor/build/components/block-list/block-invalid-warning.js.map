{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/block-invalid-warning.js"],"names":["BlockInvalidWarning","convertToHTML","convertToBlocks","convertToClassic","attemptBlockRecovery","block","hasHTMLBlock","compare","setCompare","onCompare","onCompareClose","hiddenActions","title","onClick","filter","Boolean","blockToBlocks","blockToClassic","content","originalContent","blockToHTML","HTML","recoverBlock","name","attributes","innerBlocks","select","clientId","blockEditorStore","getBlock","dispatch","replaceBlock"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { Button, Modal } from '@wordpress/components';\nimport { useState, useCallback, useMemo } from '@wordpress/element';\nimport { getBlockType, createBlock, rawHandler } from '@wordpress/blocks';\nimport { compose } from '@wordpress/compose';\nimport { withDispatch, withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport Warning from '../warning';\nimport BlockCompare from '../block-compare';\nimport { store as blockEditorStore } from '../../store';\n\nexport function BlockInvalidWarning( {\n\tconvertToHTML,\n\tconvertToBlocks,\n\tconvertToClassic,\n\tattemptBlockRecovery,\n\tblock,\n} ) {\n\tconst hasHTMLBlock = !! getBlockType( 'core/html' );\n\tconst [ compare, setCompare ] = useState( false );\n\n\tconst onCompare = useCallback( () => setCompare( true ), [] );\n\tconst onCompareClose = useCallback( () => setCompare( false ), [] );\n\n\t// We memo the array here to prevent the children components from being updated unexpectedly\n\tconst hiddenActions = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t// translators: Button to fix block content\n\t\t\t\t\ttitle: _x( 'Resolve', 'imperative verb' ),\n\t\t\t\t\tonClick: onCompare,\n\t\t\t\t},\n\t\t\t\thasHTMLBlock && {\n\t\t\t\t\ttitle: __( 'Convert to HTML' ),\n\t\t\t\t\tonClick: convertToHTML,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: __( 'Convert to Classic Block' ),\n\t\t\t\t\tonClick: convertToClassic,\n\t\t\t\t},\n\t\t\t].filter( Boolean ),\n\t\t[ onCompare, convertToHTML, convertToClassic ]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Warning\n\t\t\t\tactions={ [\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey=\"recover\"\n\t\t\t\t\t\tonClick={ attemptBlockRecovery }\n\t\t\t\t\t\tisPrimary\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Attempt Block Recovery' ) }\n\t\t\t\t\t</Button>,\n\t\t\t\t] }\n\t\t\t\tsecondaryActions={ hiddenActions }\n\t\t\t>\n\t\t\t\t{ __( 'This block contains unexpected or invalid content.' ) }\n\t\t\t</Warning>\n\t\t\t{ compare && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t// translators: Dialog title to fix block content\n\t\t\t\t\t\t__( 'Resolve Block' )\n\t\t\t\t\t}\n\t\t\t\t\tonRequestClose={ onCompareClose }\n\t\t\t\t\tclassName=\"block-editor-block-compare\"\n\t\t\t\t>\n\t\t\t\t\t<BlockCompare\n\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\tonKeep={ convertToHTML }\n\t\t\t\t\t\tonConvert={ convertToBlocks }\n\t\t\t\t\t\tconvertor={ blockToBlocks }\n\t\t\t\t\t\tconvertButtonText={ __( 'Convert to Blocks' ) }\n\t\t\t\t\t/>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nconst blockToClassic = ( block ) =>\n\tcreateBlock( 'core/freeform', {\n\t\tcontent: block.originalContent,\n\t} );\nconst blockToHTML = ( block ) =>\n\tcreateBlock( 'core/html', {\n\t\tcontent: block.originalContent,\n\t} );\nconst blockToBlocks = ( block ) =>\n\trawHandler( {\n\t\tHTML: block.originalContent,\n\t} );\nconst recoverBlock = ( { name, attributes, innerBlocks } ) =>\n\tcreateBlock( name, attributes, innerBlocks );\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => ( {\n\t\tblock: select( blockEditorStore ).getBlock( clientId ),\n\t} ) ),\n\twithDispatch( ( dispatch, { block } ) => {\n\t\tconst { replaceBlock } = dispatch( blockEditorStore );\n\n\t\treturn {\n\t\t\tconvertToClassic() {\n\t\t\t\treplaceBlock( block.clientId, blockToClassic( block ) );\n\t\t\t},\n\t\t\tconvertToHTML() {\n\t\t\t\treplaceBlock( block.clientId, blockToHTML( block ) );\n\t\t\t},\n\t\t\tconvertToBlocks() {\n\t\t\t\treplaceBlock( block.clientId, blockToBlocks( block ) );\n\t\t\t},\n\t\t\tattemptBlockRecovery() {\n\t\t\t\treplaceBlock( block.clientId, recoverBlock( block ) );\n\t\t\t},\n\t\t};\n\t} ),\n] )( BlockInvalidWarning );\n"]}