{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/block-contextual-toolbar.js"],"names":["BlockContextualToolbar","focusOnMount","props","select","blockEditorStore","getBlockName","getBlockParents","getSelectedBlockClientIds","blocksStore","getBlockType","selectedBlockClientIds","selectedBlockClientId","blockType","hasParents","length","classes"],"mappings":";;;;;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AAjBA;AACA;AACA;;AAGA;AACA;AACA;;AAKA;AACA;AACA;AAKA,SAASA,sBAAT,OAA8D;AAAA,MAA3BC,YAA2B,QAA3BA,YAA2B;AAAA,MAAVC,KAAU;;AAAA,mBAC3B,qBAAW,UAAEC,MAAF,EAAc;AAAA,kBAKtDA,MAAM,CAAEC,YAAF,CALgD;AAAA,QAEzDC,YAFyD,WAEzDA,YAFyD;AAAA,QAGzDC,eAHyD,WAGzDA,eAHyD;AAAA,QAIzDC,yBAJyD,WAIzDA,yBAJyD;;AAAA,mBAMjCJ,MAAM,CAAEK,aAAF,CAN2B;AAAA,QAMlDC,YANkD,YAMlDA,YANkD;;AAO1D,QAAMC,sBAAsB,GAAGH,yBAAyB,EAAxD;AACA,QAAMI,qBAAqB,GAAGD,sBAAsB,CAAE,CAAF,CAApD;AACA,WAAO;AACNE,MAAAA,SAAS,EACRD,qBAAqB,IACrBF,YAAY,CAAEJ,YAAY,CAAEM,qBAAF,CAAd,CAHP;AAINE,MAAAA,UAAU,EAAEP,eAAe,CAAEK,qBAAF,CAAf,CAAyCG;AAJ/C,KAAP;AAMA,GAfiC,EAe/B,EAf+B,CAD2B;AAAA,MACrDF,SADqD,cACrDA,SADqD;AAAA,MAC1CC,UAD0C,cAC1CA,UAD0C;;AAiB7D,MAAKD,SAAL,EAAiB;AAChB,QAAK,CAAE,6BAAiBA,SAAjB,EAA4B,uBAA5B,EAAqD,IAArD,CAAP,EAAqE;AACpE,aAAO,IAAP;AACA;AACD,GArB4D,CAuB7D;;;AACA,MAAMG,OAAO,GAAG,yBAAY,uCAAZ,EAAqD;AACpE,kBAAcF;AADsD,GAArD,CAAhB;AAIA,SACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,4BAAC,yBAAD;AACC,IAAA,YAAY,EAAGZ,YADhB;AAEC,IAAA,SAAS,EAAGc;AACZ;AAHD;AAIC,kBAAa,cAAI,aAAJ;AAJd,KAKMb,KALN,GAOC,4BAAC,cAAD,OAPD,CADD,CADD;AAaA;;eAEcF,sB","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { hasBlockSupport, store as blocksStore } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport NavigableToolbar from '../navigable-toolbar';\nimport { BlockToolbar } from '../';\nimport { store as blockEditorStore } from '../../store';\n\nfunction BlockContextualToolbar( { focusOnMount, ...props } ) {\n\tconst { blockType, hasParents } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetBlockName,\n\t\t\tgetBlockParents,\n\t\t\tgetSelectedBlockClientIds,\n\t\t} = select( blockEditorStore );\n\t\tconst { getBlockType } = select( blocksStore );\n\t\tconst selectedBlockClientIds = getSelectedBlockClientIds();\n\t\tconst selectedBlockClientId = selectedBlockClientIds[ 0 ];\n\t\treturn {\n\t\t\tblockType:\n\t\t\t\tselectedBlockClientId &&\n\t\t\t\tgetBlockType( getBlockName( selectedBlockClientId ) ),\n\t\t\thasParents: getBlockParents( selectedBlockClientId ).length,\n\t\t};\n\t}, [] );\n\tif ( blockType ) {\n\t\tif ( ! hasBlockSupport( blockType, '__experimentalToolbar', true ) ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Shifts the toolbar to make room for the parent block selector.\n\tconst classes = classnames( 'block-editor-block-contextual-toolbar', {\n\t\t'has-parent': hasParents,\n\t} );\n\n\treturn (\n\t\t<div className=\"block-editor-block-contextual-toolbar-wrapper\">\n\t\t\t<NavigableToolbar\n\t\t\t\tfocusOnMount={ focusOnMount }\n\t\t\t\tclassName={ classes }\n\t\t\t\t/* translators: accessibility text for the block toolbar */\n\t\t\t\taria-label={ __( 'Block tools' ) }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t<BlockToolbar />\n\t\t\t</NavigableToolbar>\n\t\t</div>\n\t);\n}\n\nexport default BlockContextualToolbar;\n"]}