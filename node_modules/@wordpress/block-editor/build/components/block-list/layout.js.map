{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/layout.js"],"names":["defaultLayout","type","Layout","appendSelectors","selectors","append","split","map","subselector","join","LayoutProvider","Provider","useLayout","LayoutStyle","selector","layout","contentSize","wideSize","style"],"mappings":";;;;;;;;;AAGA;;AAHA;AACA;AACA;AAGO,IAAMA,aAAa,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAtB;;AAEP,IAAMC,MAAM,GAAG,4BAAeF,aAAf,CAAf;;AAEA,SAASG,eAAT,CAA0BC,SAA1B,EAAqCC,MAArC,EAA8C;AAC7C;AACA;AACA;AACA;AACA;AAEA,SAAOD,SAAS,CACdE,KADK,CACE,GADF,EAELC,GAFK,CAGL,UAAEC,WAAF;AAAA,4CAC4BA,WAD5B,cAC6CH,MAD7C;AAAA,GAHK,EAMLI,IANK,CAMC,GAND,CAAP;AAOA;AAED;AACA;AACA;;;AACO,IAAMC,cAAc,GAAGR,MAAM,CAACS,QAA9B;AAEP;AACA;AACA;;;;AACO,SAASC,SAAT,GAAqB;AAC3B,SAAO,yBAAYV,MAAZ,CAAP;AACA;;AAEM,SAASW,WAAT,OAAkD;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,yBAAhBC,MAAgB;AAAA,MAAhBA,MAAgB,4BAAP,EAAO;AAAA,MAChDC,WADgD,GACtBD,MADsB,CAChDC,WADgD;AAAA,MACnCC,QADmC,GACtBF,MADsB,CACnCE,QADmC;AAGxD,MAAIC,KAAK,GACR,CAAC,CAAEF,WAAH,IAAkB,CAAC,CAAEC,QAArB,uBAEKd,eAAe,CAAEW,QAAF,EAAY,KAAZ,CAFpB,sCAGiBE,WAHjB,aAGiBA,WAHjB,cAGiBA,WAHjB,GAGgCC,QAHhC,kGAQKd,eAAe,CAAEW,QAAF,EAAY,uBAAZ,CARpB,uCASiBG,QATjB,aASiBA,QATjB,cASiBA,QATjB,GAS6BD,WAT7B,qCAYKb,eAAe,CAAEW,QAAF,EAAY,uBAAZ,CAZpB,yDAgBG,EAjBJ;AAmBAI,EAAAA,KAAK,oBACDf,eAAe,CAAEW,QAAF,EAAY,uBAAZ,CADd,4EAMDX,eAAe,CAAEW,QAAF,EAAY,wBAAZ,CANd,gEAAL;AAYA,SAAO,2CAASI,KAAT,CAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createContext, useContext } from '@wordpress/element';\n\nexport const defaultLayout = { type: 'default' };\n\nconst Layout = createContext( defaultLayout );\n\nfunction appendSelectors( selectors, append ) {\n\t// Ideally we shouldn't need the `.editor-styles-wrapper` increased specificity here\n\t// The problem though is that we have a `.editor-styles-wrapper p { margin: reset; }` style\n\t// it's used to reset the default margin added by wp-admin to paragraphs\n\t// so we need this to be higher speficity otherwise, it won't be applied to paragraphs inside containers\n\t// When the post editor is fully iframed, this extra classname could be removed.\n\n\treturn selectors\n\t\t.split( ',' )\n\t\t.map(\n\t\t\t( subselector ) =>\n\t\t\t\t`.editor-styles-wrapper ${ subselector } ${ append }`\n\t\t)\n\t\t.join( ',' );\n}\n\n/**\n * Allows to define the layout.\n */\nexport const LayoutProvider = Layout.Provider;\n\n/**\n * React hook used to retrieve the layout config.\n */\nexport function useLayout() {\n\treturn useContext( Layout );\n}\n\nexport function LayoutStyle( { selector, layout = {} } ) {\n\tconst { contentSize, wideSize } = layout;\n\n\tlet style =\n\t\t!! contentSize || !! wideSize\n\t\t\t? `\n\t\t\t\t${ appendSelectors( selector, '> *' ) } {\n\t\t\t\t\tmax-width: ${ contentSize ?? wideSize };\n\t\t\t\t\tmargin-left: auto;\n\t\t\t\t\tmargin-right: auto;\n\t\t\t\t}\n\n\t\t\t\t${ appendSelectors( selector, '> [data-align=\"wide\"]' ) }  {\n\t\t\t\t\tmax-width: ${ wideSize ?? contentSize };\n\t\t\t\t}\n\n\t\t\t\t${ appendSelectors( selector, '> [data-align=\"full\"]' ) } {\n\t\t\t\t\tmax-width: none;\n\t\t\t\t}\n\t\t\t`\n\t\t\t: '';\n\n\tstyle += `\n\t\t${ appendSelectors( selector, '> [data-align=\"left\"]' ) } {\n\t\t\tfloat: left;\n\t\t\tmargin-right: 2em;\n\t\t}\n\n\t\t${ appendSelectors( selector, '> [data-align=\"right\"]' ) } {\n\t\t\tfloat: right;\n\t\t\tmargin-left: 2em;\n\t\t}\n\t`;\n\n\treturn <style>{ style }</style>;\n}\n"]}