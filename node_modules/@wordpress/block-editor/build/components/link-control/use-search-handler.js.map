{"version":3,"sources":["@wordpress/block-editor/src/components/link-control/use-search-handler.js"],"names":["handleNoop","Promise","resolve","handleDirectEntry","val","type","protocol","includes","id","title","url","handleEntitySearch","suggestionsQuery","fetchSearchSuggestions","directEntryHandler","withCreateSuggestion","withURLSuggestion","isInitialSuggestions","all","results","couldBeURL","concat","CREATE_TYPE","useSearchHandler","allowDirectEntry","select","blockEditorStore","getSettings","__experimentalFetchLinkSuggestions"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { getProtocol, prependHTTP } from '@wordpress/url';\nimport { useCallback } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * External dependencies\n */\nimport { startsWith } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport isURLLike from './is-url-like';\nimport { CREATE_TYPE } from './constants';\nimport { store as blockEditorStore } from '../../store';\n\nexport const handleNoop = () => Promise.resolve( [] );\n\nexport const handleDirectEntry = ( val ) => {\n\tlet type = 'URL';\n\n\tconst protocol = getProtocol( val ) || '';\n\n\tif ( protocol.includes( 'mailto' ) ) {\n\t\ttype = 'mailto';\n\t}\n\n\tif ( protocol.includes( 'tel' ) ) {\n\t\ttype = 'tel';\n\t}\n\n\tif ( startsWith( val, '#' ) ) {\n\t\ttype = 'internal';\n\t}\n\n\treturn Promise.resolve( [\n\t\t{\n\t\t\tid: val,\n\t\t\ttitle: val,\n\t\t\turl: type === 'URL' ? prependHTTP( val ) : val,\n\t\t\ttype,\n\t\t},\n\t] );\n};\n\nconst handleEntitySearch = async (\n\tval,\n\tsuggestionsQuery,\n\tfetchSearchSuggestions,\n\tdirectEntryHandler,\n\twithCreateSuggestion,\n\twithURLSuggestion\n) => {\n\tconst { isInitialSuggestions } = suggestionsQuery;\n\n\tlet results = await Promise.all( [\n\t\tfetchSearchSuggestions( val, suggestionsQuery ),\n\t\tdirectEntryHandler( val ),\n\t] );\n\n\tconst couldBeURL = ! val.includes( ' ' );\n\n\t// If it's potentially a URL search then concat on a URL search suggestion\n\t// just for good measure. That way once the actual results run out we always\n\t// have a URL option to fallback on.\n\tif ( couldBeURL && withURLSuggestion && ! isInitialSuggestions ) {\n\t\tresults = results[ 0 ].concat( results[ 1 ] );\n\t} else {\n\t\tresults = results[ 0 ];\n\t}\n\n\t// If displaying initial suggestions just return plain results.\n\tif ( isInitialSuggestions ) {\n\t\treturn results;\n\t}\n\n\t// Here we append a faux suggestion to represent a \"CREATE\" option. This\n\t// is detected in the rendering of the search results and handled as a\n\t// special case. This is currently necessary because the suggestions\n\t// dropdown will only appear if there are valid suggestions and\n\t// therefore unless the create option is a suggestion it will not\n\t// display in scenarios where there are no results returned from the\n\t// API. In addition promoting CREATE to a first class suggestion affords\n\t// the a11y benefits afforded by `URLInput` to all suggestions (eg:\n\t// keyboard handling, ARIA roles...etc).\n\t//\n\t// Note also that the value of the `title` and `url` properties must correspond\n\t// to the text value of the `<input>`. This is because `title` is used\n\t// when creating the suggestion. Similarly `url` is used when using keyboard to select\n\t// the suggestion (the <form> `onSubmit` handler falls-back to `url`).\n\treturn isURLLike( val ) || ! withCreateSuggestion\n\t\t? results\n\t\t: results.concat( {\n\t\t\t\t// the `id` prop is intentionally ommitted here because it\n\t\t\t\t// is never exposed as part of the component's public API.\n\t\t\t\t// see: https://github.com/WordPress/gutenberg/pull/19775#discussion_r378931316.\n\t\t\t\ttitle: val, // must match the existing `<input>`s text value\n\t\t\t\turl: val, // must match the existing `<input>`s text value\n\t\t\t\ttype: CREATE_TYPE,\n\t\t  } );\n};\n\nexport default function useSearchHandler(\n\tsuggestionsQuery,\n\tallowDirectEntry,\n\twithCreateSuggestion,\n\twithURLSuggestion\n) {\n\tconst { fetchSearchSuggestions } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn {\n\t\t\tfetchSearchSuggestions: getSettings()\n\t\t\t\t.__experimentalFetchLinkSuggestions,\n\t\t};\n\t}, [] );\n\n\tconst directEntryHandler = allowDirectEntry\n\t\t? handleDirectEntry\n\t\t: handleNoop;\n\n\treturn useCallback(\n\t\t( val, { isInitialSuggestions } ) => {\n\t\t\treturn isURLLike( val )\n\t\t\t\t? directEntryHandler( val, { isInitialSuggestions } )\n\t\t\t\t: handleEntitySearch(\n\t\t\t\t\t\tval,\n\t\t\t\t\t\t{ ...suggestionsQuery, isInitialSuggestions },\n\t\t\t\t\t\tfetchSearchSuggestions,\n\t\t\t\t\t\tdirectEntryHandler,\n\t\t\t\t\t\twithCreateSuggestion,\n\t\t\t\t\t\twithURLSuggestion\n\t\t\t\t  );\n\t\t},\n\t\t[ directEntryHandler, fetchSearchSuggestions, withCreateSuggestion ]\n\t);\n}\n"]}