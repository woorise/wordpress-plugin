{"version":3,"sources":["@wordpress/block-editor/src/components/use-block-display-information/index.js"],"names":["useBlockDisplayInformation","clientId","select","blockEditorStore","getBlockName","getBlockAttributes","blocksStore","getBlockType","getBlockVariations","blockName","blockType","variations","blockTypeInfo","title","icon","description","length","attributes","match","find","variation","isActive"],"mappings":";;;;;;;AAGA;;AACA;;AAKA;;AATA;AACA;AACA;;AAIA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASA,0BAAT,CAAqCC,QAArC,EAAgD;AAC9D,SAAO,qBACN,UAAEC,MAAF,EAAc;AACb,QAAK,CAAED,QAAP,EAAkB,OAAO,IAAP;;AADL,kBAEgCC,MAAM,CAClDC,YADkD,CAFtC;AAAA,QAELC,YAFK,WAELA,YAFK;AAAA,QAESC,kBAFT,WAESA,kBAFT;;AAAA,mBAKgCH,MAAM,CAAEI,aAAF,CALtC;AAAA,QAKLC,YALK,YAKLA,YALK;AAAA,QAKSC,kBALT,YAKSA,kBALT;;AAMb,QAAMC,SAAS,GAAGL,YAAY,CAAEH,QAAF,CAA9B;AACA,QAAMS,SAAS,GAAGH,YAAY,CAAEE,SAAF,CAA9B;AACA,QAAK,CAAEC,SAAP,EAAmB,OAAO,IAAP;AACnB,QAAMC,UAAU,GAAGH,kBAAkB,CAAEC,SAAF,CAArC;AACA,QAAMG,aAAa,GAAG;AACrBC,MAAAA,KAAK,EAAEH,SAAS,CAACG,KADI;AAErBC,MAAAA,IAAI,EAAEJ,SAAS,CAACI,IAFK;AAGrBC,MAAAA,WAAW,EAAEL,SAAS,CAACK;AAHF,KAAtB;AAKA,QAAK,EAAEJ,UAAF,aAAEA,UAAF,eAAEA,UAAU,CAAEK,MAAd,CAAL,EAA4B,OAAOJ,aAAP;AAC5B,QAAMK,UAAU,GAAGZ,kBAAkB,CAAEJ,QAAF,CAArC;AACA,QAAMiB,KAAK,GAAGP,UAAU,CAACQ,IAAX,CAAiB,UAAEC,SAAF;AAAA;;AAAA,oCAC9BA,SAAS,CAACC,QADoB,wDAC9B,yBAAAD,SAAS,EAAaH,UAAb,EAAyBG,SAAS,CAACH,UAAnC,CADqB;AAAA,KAAjB,CAAd;AAGA,QAAK,CAAEC,KAAP,EAAe,OAAON,aAAP;AACf,WAAO;AACNC,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,IAAeH,SAAS,CAACG,KAD1B;AAENC,MAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,IAAcJ,SAAS,CAACI,IAFxB;AAGNC,MAAAA,WAAW,EAAEG,KAAK,CAACH,WAAN,IAAqBL,SAAS,CAACK;AAHtC,KAAP;AAKA,GA3BK,EA4BN,CAAEd,QAAF,CA5BM,CAAP;AA8BA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as blocksStore } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\n/** @typedef {import('@wordpress/blocks').WPIcon} WPIcon */\n\n/**\n * Contains basic block's information for display reasons.\n *\n * @typedef {Object} WPBlockDisplayInformation\n *\n * @property {string} title Human-readable block type label.\n * @property {WPIcon} icon Block type icon.\n * @property {string} description A detailed block type description.\n */\n\n/**\n * Hook used to try to find a matching block variation and return\n * the appropriate information for display reasons. In order to\n * to try to find a match we need to things:\n * 1. Block's client id to extract it's current attributes.\n * 2. A block variation should have set `isActive` prop to a proper function.\n *\n * If for any reason a block variaton match cannot be found,\n * the returned information come from the Block Type.\n * If no blockType is found with the provided clientId, returns null.\n *\n * @param {string} clientId Block's client id.\n * @return {?WPBlockDisplayInformation} Block's display information, or `null` when the block or its type not found.\n */\n\nexport default function useBlockDisplayInformation( clientId ) {\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! clientId ) return null;\n\t\t\tconst { getBlockName, getBlockAttributes } = select(\n\t\t\t\tblockEditorStore\n\t\t\t);\n\t\t\tconst { getBlockType, getBlockVariations } = select( blocksStore );\n\t\t\tconst blockName = getBlockName( clientId );\n\t\t\tconst blockType = getBlockType( blockName );\n\t\t\tif ( ! blockType ) return null;\n\t\t\tconst variations = getBlockVariations( blockName );\n\t\t\tconst blockTypeInfo = {\n\t\t\t\ttitle: blockType.title,\n\t\t\t\ticon: blockType.icon,\n\t\t\t\tdescription: blockType.description,\n\t\t\t};\n\t\t\tif ( ! variations?.length ) return blockTypeInfo;\n\t\t\tconst attributes = getBlockAttributes( clientId );\n\t\t\tconst match = variations.find( ( variation ) =>\n\t\t\t\tvariation.isActive?.( attributes, variation.attributes )\n\t\t\t);\n\t\t\tif ( ! match ) return blockTypeInfo;\n\t\t\treturn {\n\t\t\t\ttitle: match.title || blockType.title,\n\t\t\t\ticon: match.icon || blockType.icon,\n\t\t\t\tdescription: match.description || blockType.description,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n}\n"]}