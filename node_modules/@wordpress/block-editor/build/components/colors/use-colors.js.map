{"version":3,"sources":["@wordpress/block-editor/src/components/colors/use-colors.js"],"names":["getComputedStyle","node","ownerDocument","defaultView","DEFAULT_COLORS","COMMON_COLOR_LABELS","textColor","backgroundColor","InspectorControlsColorPanel","props","__experimentalUseColors","colorConfigs","panelTitle","colorPanelProps","contrastCheckers","panelChildren","colorDetector","targetRef","backgroundColorTargetRef","textColorTargetRef","deps","clientId","settingsColors","select","blockEditorStore","getBlockAttributes","attributes","updateBlockAttributes","setAttributes","newAttributes","createComponent","name","property","className","color","colorValue","customColor","children","componentClassName","style","componentStyle","colorStyle","extraProps","Children","map","child","maxSize","length","createSetColor","colors","newColor","find","_color","undefined","slug","detectedBackgroundColor","setDetectedBackgroundColor","detectedColor","setDetectedColor","needsBackgroundColor","needsColor","current","backgroundColorNode","parentNode","nodeType","ELEMENT_NODE","reduce","acc","colorConfig","colorSettings","components","panelLabel","label","componentName","replace","__color","displayName","setColor","value","onChange","wrappedColorPanelProps","title","initialOpen","ColorPanel"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport classnames from 'classnames';\nimport { kebabCase, camelCase, castArray, startCase, isFunction } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tuseCallback,\n\tuseMemo,\n\tuseEffect,\n\tChildren,\n\tcloneElement,\n\tuseState,\n} from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport InspectorControls from '../inspector-controls';\nimport { useBlockEditContext } from '../block-edit';\nimport ColorPanel from './color-panel';\nimport useEditorFeature from '../use-editor-feature';\nimport { store as blockEditorStore } from '../../store';\n\nfunction getComputedStyle( node ) {\n\treturn node.ownerDocument.defaultView.getComputedStyle( node );\n}\n\nconst DEFAULT_COLORS = [];\n\nconst COMMON_COLOR_LABELS = {\n\ttextColor: __( 'Text Color' ),\n\tbackgroundColor: __( 'Background Color' ),\n};\n\nconst InspectorControlsColorPanel = ( props ) => (\n\t<InspectorControls>\n\t\t<ColorPanel { ...props } />\n\t</InspectorControls>\n);\n\nexport default function __experimentalUseColors(\n\tcolorConfigs,\n\t{\n\t\tpanelTitle = __( 'Color settings' ),\n\t\tcolorPanelProps,\n\t\tcontrastCheckers,\n\t\tpanelChildren,\n\t\tcolorDetector: {\n\t\t\ttargetRef,\n\t\t\tbackgroundColorTargetRef = targetRef,\n\t\t\ttextColorTargetRef = targetRef,\n\t\t} = {},\n\t} = {\n\t\tpanelTitle: __( 'Color settings' ),\n\t},\n\tdeps = []\n) {\n\tconst { clientId } = useBlockEditContext();\n\tconst settingsColors =\n\t\tuseEditorFeature( 'color.palette' ) || DEFAULT_COLORS;\n\tconst { attributes } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockAttributes } = select( blockEditorStore );\n\t\t\treturn {\n\t\t\t\tattributes: getBlockAttributes( clientId ),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\tconst setAttributes = useCallback(\n\t\t( newAttributes ) => updateBlockAttributes( clientId, newAttributes ),\n\t\t[ updateBlockAttributes, clientId ]\n\t);\n\n\tconst createComponent = useMemo(\n\t\t() =>\n\t\t\tmemoize(\n\t\t\t\t(\n\t\t\t\t\tname,\n\t\t\t\t\tproperty,\n\t\t\t\t\tclassName,\n\t\t\t\t\tcolor,\n\t\t\t\t\tcolorValue,\n\t\t\t\t\tcustomColor\n\t\t\t\t) => ( {\n\t\t\t\t\tchildren,\n\t\t\t\t\tclassName: componentClassName = '',\n\t\t\t\t\tstyle: componentStyle = {},\n\t\t\t\t} ) => {\n\t\t\t\t\tlet colorStyle = {};\n\t\t\t\t\tif ( color ) {\n\t\t\t\t\t\tcolorStyle = { [ property ]: colorValue };\n\t\t\t\t\t} else if ( customColor ) {\n\t\t\t\t\t\tcolorStyle = { [ property ]: customColor };\n\t\t\t\t\t}\n\t\t\t\t\tconst extraProps = {\n\t\t\t\t\t\tclassName: classnames( componentClassName, {\n\t\t\t\t\t\t\t[ `has-${ kebabCase( color ) }-${ kebabCase(\n\t\t\t\t\t\t\t\tproperty\n\t\t\t\t\t\t\t) }` ]: color,\n\t\t\t\t\t\t\t[ className || `has-${ kebabCase( name ) }` ]:\n\t\t\t\t\t\t\t\tcolor || customColor,\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t...colorStyle,\n\t\t\t\t\t\t\t...componentStyle,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( isFunction( children ) ) {\n\t\t\t\t\t\treturn children( extraProps );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t// Clone children, setting the style property from the color configuration,\n\t\t\t\t\t\t// if not already set explicitly through props.\n\t\t\t\t\t\tChildren.map( children, ( child ) => {\n\t\t\t\t\t\t\treturn cloneElement( child, {\n\t\t\t\t\t\t\t\tclassName: classnames(\n\t\t\t\t\t\t\t\t\tchild.props.className,\n\t\t\t\t\t\t\t\t\textraProps.className\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t...extraProps.style,\n\t\t\t\t\t\t\t\t\t...( child.props.style || {} ),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\t{ maxSize: colorConfigs.length }\n\t\t\t),\n\t\t[ colorConfigs.length ]\n\t);\n\tconst createSetColor = useMemo(\n\t\t() =>\n\t\t\tmemoize(\n\t\t\t\t( name, colors ) => ( newColor ) => {\n\t\t\t\t\tconst color = colors.find(\n\t\t\t\t\t\t( _color ) => _color.color === newColor\n\t\t\t\t\t);\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t[ color\n\t\t\t\t\t\t\t? camelCase( `custom ${ name }` )\n\t\t\t\t\t\t\t: name ]: undefined,\n\t\t\t\t\t} );\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t[ color\n\t\t\t\t\t\t\t? name\n\t\t\t\t\t\t\t: camelCase( `custom ${ name }` ) ]: color\n\t\t\t\t\t\t\t? color.slug\n\t\t\t\t\t\t\t: newColor,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmaxSize: colorConfigs.length,\n\t\t\t\t}\n\t\t\t),\n\t\t[ setAttributes, colorConfigs.length ]\n\t);\n\n\tconst [ detectedBackgroundColor, setDetectedBackgroundColor ] = useState();\n\tconst [ detectedColor, setDetectedColor ] = useState();\n\n\tuseEffect( () => {\n\t\tif ( ! contrastCheckers ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet needsBackgroundColor = false;\n\t\tlet needsColor = false;\n\t\tfor ( const { backgroundColor, textColor } of castArray(\n\t\t\tcontrastCheckers\n\t\t) ) {\n\t\t\tif ( ! needsBackgroundColor ) {\n\t\t\t\tneedsBackgroundColor = backgroundColor === true;\n\t\t\t}\n\t\t\tif ( ! needsColor ) {\n\t\t\t\tneedsColor = textColor === true;\n\t\t\t}\n\t\t\tif ( needsBackgroundColor && needsColor ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( needsColor ) {\n\t\t\tsetDetectedColor(\n\t\t\t\tgetComputedStyle( textColorTargetRef.current ).color\n\t\t\t);\n\t\t}\n\n\t\tif ( needsBackgroundColor ) {\n\t\t\tlet backgroundColorNode = backgroundColorTargetRef.current;\n\t\t\tlet backgroundColor = getComputedStyle( backgroundColorNode )\n\t\t\t\t.backgroundColor;\n\t\t\twhile (\n\t\t\t\tbackgroundColor === 'rgba(0, 0, 0, 0)' &&\n\t\t\t\tbackgroundColorNode.parentNode &&\n\t\t\t\tbackgroundColorNode.parentNode.nodeType ===\n\t\t\t\t\tbackgroundColorNode.parentNode.ELEMENT_NODE\n\t\t\t) {\n\t\t\t\tbackgroundColorNode = backgroundColorNode.parentNode;\n\t\t\t\tbackgroundColor = getComputedStyle( backgroundColorNode )\n\t\t\t\t\t.backgroundColor;\n\t\t\t}\n\n\t\t\tsetDetectedBackgroundColor( backgroundColor );\n\t\t}\n\t}, [\n\t\tcolorConfigs.reduce(\n\t\t\t( acc, colorConfig ) =>\n\t\t\t\t`${ acc } | ${ attributes[ colorConfig.name ] } | ${\n\t\t\t\t\tattributes[ camelCase( `custom ${ colorConfig.name }` ) ]\n\t\t\t\t}`,\n\t\t\t''\n\t\t),\n\t\t...deps,\n\t] );\n\n\treturn useMemo( () => {\n\t\tconst colorSettings = {};\n\n\t\tconst components = colorConfigs.reduce( ( acc, colorConfig ) => {\n\t\t\tif ( typeof colorConfig === 'string' ) {\n\t\t\t\tcolorConfig = { name: colorConfig };\n\t\t\t}\n\t\t\tconst {\n\t\t\t\tname, // E.g. 'backgroundColor'.\n\t\t\t\tproperty = name, // E.g. 'backgroundColor'.\n\t\t\t\tclassName,\n\n\t\t\t\tpanelLabel = colorConfig.label ||\n\t\t\t\t\tCOMMON_COLOR_LABELS[ name ] ||\n\t\t\t\t\tstartCase( name ), // E.g. 'Background color'.\n\t\t\t\tcomponentName = startCase( name ).replace( /\\s/g, '' ), // E.g. 'BackgroundColor'.\n\n\t\t\t\tcolor = colorConfig.color,\n\t\t\t\tcolors = settingsColors,\n\t\t\t} = {\n\t\t\t\t...colorConfig,\n\t\t\t\tcolor: attributes[ colorConfig.name ],\n\t\t\t};\n\n\t\t\tconst customColor = attributes[ camelCase( `custom ${ name }` ) ];\n\t\t\t// We memoize the non-primitives to avoid unnecessary updates\n\t\t\t// when they are used as props for other components.\n\t\t\tconst _color = customColor\n\t\t\t\t? undefined\n\t\t\t\t: colors.find( ( __color ) => __color.slug === color );\n\t\t\tacc[ componentName ] = createComponent(\n\t\t\t\tname,\n\t\t\t\tproperty,\n\t\t\t\tclassName,\n\t\t\t\tcolor,\n\t\t\t\t_color && _color.color,\n\t\t\t\tcustomColor\n\t\t\t);\n\t\t\tacc[ componentName ].displayName = componentName;\n\t\t\tacc[ componentName ].color = customColor\n\t\t\t\t? customColor\n\t\t\t\t: _color && _color.color;\n\t\t\tacc[ componentName ].slug = color;\n\t\t\tacc[ componentName ].setColor = createSetColor( name, colors );\n\n\t\t\tcolorSettings[ componentName ] = {\n\t\t\t\tvalue: _color\n\t\t\t\t\t? _color.color\n\t\t\t\t\t: attributes[ camelCase( `custom ${ name }` ) ],\n\t\t\t\tonChange: acc[ componentName ].setColor,\n\t\t\t\tlabel: panelLabel,\n\t\t\t\tcolors,\n\t\t\t};\n\t\t\t// These settings will be spread over the `colors` in\n\t\t\t// `colorPanelProps`, so we need to unset the key here,\n\t\t\t// if not set to an actual value, to avoid overwriting\n\t\t\t// an actual value in `colorPanelProps`.\n\t\t\tif ( ! colors ) {\n\t\t\t\tdelete colorSettings[ componentName ].colors;\n\t\t\t}\n\n\t\t\treturn acc;\n\t\t}, {} );\n\n\t\tconst wrappedColorPanelProps = {\n\t\t\ttitle: panelTitle,\n\t\t\tinitialOpen: false,\n\t\t\tcolorSettings,\n\t\t\tcolorPanelProps,\n\t\t\tcontrastCheckers,\n\t\t\tdetectedBackgroundColor,\n\t\t\tdetectedColor,\n\t\t\tpanelChildren,\n\t\t};\n\t\treturn {\n\t\t\t...components,\n\t\t\tColorPanel: <ColorPanel { ...wrappedColorPanelProps } />,\n\t\t\tInspectorControlsColorPanel: (\n\t\t\t\t<InspectorControlsColorPanel { ...wrappedColorPanelProps } />\n\t\t\t),\n\t\t};\n\t}, [\n\t\tattributes,\n\t\tsetAttributes,\n\t\tdetectedColor,\n\t\tdetectedBackgroundColor,\n\t\t...deps,\n\t] );\n}\n"]}