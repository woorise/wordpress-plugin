{"version":3,"sources":["@wordpress/block-editor/src/components/block-preview/auto.js"],"names":["MemoizedBlockList","AutoBlockPreview","viewportWidth","__experimentalPadding","containerResizeListener","containerWidth","width","containtResizeListener","contentHeight","height","BlockList","scale","transform","left","right","top"],"mappings":";;;;;;;;;;;;;AAGA;;AACA;;AAKA;;AATA;AACA;AACA;;AAIA;AACA;AACA;AAGA;AACA,IAAIA,iBAAJ;;AAEA,SAASC,gBAAT,OAAsE;AAAA,MAAzCC,aAAyC,QAAzCA,aAAyC;AAAA,MAA1BC,qBAA0B,QAA1BA,qBAA0B;;AAAA,2BAIjE,iCAJiE;AAAA;AAAA,MAEpEC,uBAFoE;AAAA,MAG3DC,cAH2D,0BAGlEC,KAHkE;;AAAA,4BAQjE,iCARiE;AAAA;AAAA,MAMpEC,sBANoE;AAAA,MAO1DC,aAP0D,0BAOlEC,MAPkE,EAUrE;;;AACAT,EAAAA,iBAAiB,GAAGA,iBAAiB,IAAI,mBAAMU,kBAAN,CAAzC;AAEA,MAAMC,KAAK,GACV,CAAEN,cAAc,GAAG,IAAIF,qBAAvB,IAAiDD,aADlD;AAGA,SACC;AACC,IAAA,SAAS,EAAC,6DADX;AAEC,uBAFD;AAGC,IAAA,KAAK,EAAG;AACPO,MAAAA,MAAM,EAAED,aAAa,GAAGG,KAAhB,GAAwB,IAAIR;AAD7B;AAHT,KAOGC,uBAPH,EAQC,4BAAC,oBAAD;AACC,IAAA,KAAK,EAAG;AACPQ,MAAAA,SAAS,kBAAYD,KAAZ,MADF;AAEPL,MAAAA,KAAK,EAAEJ,aAFA;AAGPW,MAAAA,IAAI,EAAEV,qBAHC;AAIPW,MAAAA,KAAK,EAAEX,qBAJA;AAKPY,MAAAA,GAAG,EAAEZ;AALE,KADT;AAQC,IAAA,SAAS,EAAC;AARX,KAUGI,sBAVH,EAWC,4BAAC,iBAAD,OAXD,CARD,CADD;AAwBA;;eAEcN,gB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Disabled } from '@wordpress/components';\nimport { useResizeObserver, pure } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockList from '../block-list';\n\n// This is used to avoid rendering the block list if the sizes change.\nlet MemoizedBlockList;\n\nfunction AutoBlockPreview( { viewportWidth, __experimentalPadding } ) {\n\tconst [\n\t\tcontainerResizeListener,\n\t\t{ width: containerWidth },\n\t] = useResizeObserver();\n\tconst [\n\t\tcontaintResizeListener,\n\t\t{ height: contentHeight },\n\t] = useResizeObserver();\n\n\t// Initialize on render instead of module top level, to avoid circular dependency issues.\n\tMemoizedBlockList = MemoizedBlockList || pure( BlockList );\n\n\tconst scale =\n\t\t( containerWidth - 2 * __experimentalPadding ) / viewportWidth;\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"block-editor-block-preview__container editor-styles-wrapper\"\n\t\t\taria-hidden\n\t\t\tstyle={ {\n\t\t\t\theight: contentHeight * scale + 2 * __experimentalPadding,\n\t\t\t} }\n\t\t>\n\t\t\t{ containerResizeListener }\n\t\t\t<Disabled\n\t\t\t\tstyle={ {\n\t\t\t\t\ttransform: `scale(${ scale })`,\n\t\t\t\t\twidth: viewportWidth,\n\t\t\t\t\tleft: __experimentalPadding,\n\t\t\t\t\tright: __experimentalPadding,\n\t\t\t\t\ttop: __experimentalPadding,\n\t\t\t\t} }\n\t\t\t\tclassName=\"block-editor-block-preview__content\"\n\t\t\t>\n\t\t\t\t{ containtResizeListener }\n\t\t\t\t<MemoizedBlockList />\n\t\t\t</Disabled>\n\t\t</div>\n\t);\n}\n\nexport default AutoBlockPreview;\n"]}