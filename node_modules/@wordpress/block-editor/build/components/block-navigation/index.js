"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = BlockNavigation;

var _element = require("@wordpress/element");

var _lodash = require("lodash");

var _data = require("@wordpress/data");

var _i18n = require("@wordpress/i18n");

var _tree = _interopRequireDefault(require("./tree"));

var _utils = require("./utils");

var _store = require("../../store");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function BlockNavigation(_ref) {
  var _ref$onSelect = _ref.onSelect,
      onSelect = _ref$onSelect === void 0 ? _lodash.noop : _ref$onSelect,
      __experimentalFeatures = _ref.__experimentalFeatures;

  var _useSelect = (0, _data.useSelect)(function (select) {
    var _select = select(_store.store),
        getBlockHierarchyRootClientId = _select.getBlockHierarchyRootClientId,
        getSelectedBlockClientId = _select.getSelectedBlockClientId,
        __unstableGetClientIdsTree = _select.__unstableGetClientIdsTree,
        __unstableGetClientIdWithClientIdsTree = _select.__unstableGetClientIdWithClientIdsTree;

    var _selectedBlockClientId = getSelectedBlockClientId();

    var _rootBlocks = __unstableGetClientIdsTree();

    var _rootBlock = selectedBlockClientId && !(0, _lodash.isArray)(selectedBlockClientId) ? __unstableGetClientIdWithClientIdsTree(getBlockHierarchyRootClientId(_selectedBlockClientId)) : null;

    return {
      rootBlock: _rootBlock,
      rootBlocks: _rootBlocks,
      selectedBlockClientId: _selectedBlockClientId
    };
  }),
      rootBlock = _useSelect.rootBlock,
      rootBlocks = _useSelect.rootBlocks,
      selectedBlockClientId = _useSelect.selectedBlockClientId;

  var _useDispatch = (0, _data.useDispatch)(_store.store),
      selectBlock = _useDispatch.selectBlock;

  function selectEditorBlock(clientId) {
    selectBlock(clientId);
    onSelect(clientId);
  }

  if (!rootBlocks || rootBlocks.length === 0) {
    return null;
  }

  var hasHierarchy = rootBlock && (!(0, _utils.isClientIdSelected)(rootBlock.clientId, selectedBlockClientId) || rootBlock.innerBlocks && rootBlock.innerBlocks.length !== 0);
  return (0, _element.createElement)("div", {
    className: "block-editor-block-navigation__container"
  }, (0, _element.createElement)("p", {
    className: "block-editor-block-navigation__label"
  }, (0, _i18n.__)('List view')), (0, _element.createElement)(_tree.default, {
    blocks: hasHierarchy ? [rootBlock] : rootBlocks,
    selectedBlockClientIds: [selectedBlockClientId],
    selectBlock: selectEditorBlock,
    __experimentalFeatures: __experimentalFeatures,
    showNestedBlocks: true
  }));
}
//# sourceMappingURL=index.js.map