"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = QuickInserter;

var _element = require("@wordpress/element");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _classnames = _interopRequireDefault(require("classnames"));

var _i18n = require("@wordpress/i18n");

var _components = require("@wordpress/components");

var _data = require("@wordpress/data");

var _searchForm = _interopRequireDefault(require("./search-form"));

var _searchResults = _interopRequireDefault(require("./search-results"));

var _useInsertionPoint3 = _interopRequireDefault(require("./hooks/use-insertion-point"));

var _usePatternsState3 = _interopRequireDefault(require("./hooks/use-patterns-state"));

var _useBlockTypesState3 = _interopRequireDefault(require("./hooks/use-block-types-state"));

var _store = require("../../store");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
var SEARCH_THRESHOLD = 6;
var SHOWN_BLOCK_TYPES = 6;
var SHOWN_BLOCK_PATTERNS = 2;

function QuickInserter(_ref) {
  var onSelect = _ref.onSelect,
      rootClientId = _ref.rootClientId,
      clientId = _ref.clientId,
      isAppender = _ref.isAppender;

  var _useState = (0, _element.useState)(''),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      filterValue = _useState2[0],
      setFilterValue = _useState2[1];

  var _useInsertionPoint = (0, _useInsertionPoint3.default)({
    onSelect: onSelect,
    rootClientId: rootClientId,
    clientId: clientId,
    isAppender: isAppender
  }),
      _useInsertionPoint2 = (0, _slicedToArray2.default)(_useInsertionPoint, 2),
      destinationRootClientId = _useInsertionPoint2[0],
      onInsertBlocks = _useInsertionPoint2[1];

  var _useBlockTypesState = (0, _useBlockTypesState3.default)(destinationRootClientId, onInsertBlocks),
      _useBlockTypesState2 = (0, _slicedToArray2.default)(_useBlockTypesState, 1),
      blockTypes = _useBlockTypesState2[0];

  var _usePatternsState = (0, _usePatternsState3.default)(onInsertBlocks, destinationRootClientId),
      _usePatternsState2 = (0, _slicedToArray2.default)(_usePatternsState, 1),
      patterns = _usePatternsState2[0];

  var showPatterns = patterns.length && !!filterValue;
  var showSearch = showPatterns && patterns.length > SEARCH_THRESHOLD || blockTypes.length > SEARCH_THRESHOLD;

  var _useSelect = (0, _data.useSelect)(function (select) {
    var _select = select(_store.store),
        getSettings = _select.getSettings,
        getBlockIndex = _select.getBlockIndex;

    return {
      setInserterIsOpened: getSettings().__experimentalSetIsInserterOpened,
      blockIndex: getBlockIndex(clientId, rootClientId)
    };
  }, [clientId, rootClientId]),
      setInserterIsOpened = _useSelect.setInserterIsOpened,
      blockIndex = _useSelect.blockIndex;

  (0, _element.useEffect)(function () {
    if (setInserterIsOpened) {
      setInserterIsOpened(false);
    }
  }, [setInserterIsOpened]);

  var _useDispatch = (0, _data.useDispatch)(_store.store),
      __unstableSetInsertionPoint = _useDispatch.__unstableSetInsertionPoint; // When clicking Browse All select the appropriate block so as
  // the insertion point can work as expected


  var onBrowseAll = function onBrowseAll() {
    __unstableSetInsertionPoint(rootClientId, blockIndex);

    setInserterIsOpened(true);
  };

  return (0, _element.createElement)("div", {
    className: (0, _classnames.default)('block-editor-inserter__quick-inserter', {
      'has-search': showSearch,
      'has-expand': setInserterIsOpened
    })
  }, showSearch && (0, _element.createElement)(_searchForm.default, {
    value: filterValue,
    onChange: function onChange(value) {
      setFilterValue(value);
    },
    label: (0, _i18n.__)('Search for blocks and patterns'),
    placeholder: (0, _i18n.__)('Search')
  }), (0, _element.createElement)("div", {
    className: "block-editor-inserter__quick-inserter-results"
  }, (0, _element.createElement)(_searchResults.default, {
    filterValue: filterValue,
    onSelect: onSelect,
    rootClientId: rootClientId,
    clientId: clientId,
    isAppender: isAppender,
    maxBlockPatterns: showPatterns ? SHOWN_BLOCK_PATTERNS : 0,
    maxBlockTypes: SHOWN_BLOCK_TYPES,
    isDraggable: false
  })), setInserterIsOpened && (0, _element.createElement)(_components.Button, {
    className: "block-editor-inserter__quick-inserter-expand",
    onClick: onBrowseAll,
    "aria-label": (0, _i18n.__)('Browse all. This will open the main inserter panel in the editor toolbar.')
  }, (0, _i18n.__)('Browse all')));
}
//# sourceMappingURL=quick-inserter.js.map