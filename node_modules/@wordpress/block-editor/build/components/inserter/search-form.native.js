"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _reactNative = require("react-native");

var _compose = require("@wordpress/compose");

var _i18n = require("@wordpress/i18n");

var _components = require("@wordpress/components");

var _icons = require("@wordpress/icons");

var _style = _interopRequireDefault(require("./style.scss"));

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function InserterSearchForm(_ref) {
  var value = _ref.value,
      onChange = _ref.onChange,
      _ref$onLayout = _ref.onLayout,
      onLayout = _ref$onLayout === void 0 ? function () {} : _ref$onLayout;

  var _useState = (0, _element.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      isActive = _useState2[0],
      setIsActive = _useState2[1];

  var inputRef = (0, _element.useRef)();
  var searchFormStyle = (0, _compose.usePreferredColorSchemeStyle)(_style.default.searchForm, _style.default.searchFormDark);
  var searchFormInputStyle = (0, _compose.usePreferredColorSchemeStyle)(_style.default.searchFormInput, _style.default.searchFormInputDark);
  var placeholderStyle = (0, _compose.usePreferredColorSchemeStyle)(_style.default.searchFormPlaceholder, _style.default.searchFormPlaceholderDark);
  return (0, _element.createElement)(_reactNative.TouchableHighlight, {
    accessible: false,
    onLayout: onLayout
  }, (0, _element.createElement)(_reactNative.View, {
    style: searchFormStyle
  }, isActive ? (0, _element.createElement)(_components.ToolbarButton, {
    title: (0, _i18n.__)('Cancel search'),
    icon: _icons.arrowLeft,
    onClick: function onClick() {
      inputRef.current.blur();
      onChange('');
      setIsActive(false);
    }
  }) : (0, _element.createElement)(_components.ToolbarButton, {
    title: (0, _i18n.__)('Search block'),
    icon: _icons.search,
    onClick: function onClick() {
      inputRef.current.focus();
      setIsActive(true);
    }
  }), (0, _element.createElement)(_reactNative.TextInput, {
    ref: inputRef,
    style: searchFormInputStyle,
    placeholderTextColor: placeholderStyle.color,
    onChangeText: onChange,
    onFocus: function onFocus() {
      return setIsActive(true);
    },
    value: value,
    placeholder: (0, _i18n.__)('Search blocks')
  }), !!value && (0, _element.createElement)(_components.ToolbarButton, {
    title: (0, _i18n.__)('Clear search'),
    icon: (0, _element.createElement)(_icons.Icon, {
      icon: _icons.cancelCircleFilled
    }),
    onClick: function onClick() {
      onChange('');
    }
  })));
}

var _default = InserterSearchForm;
exports.default = _default;
//# sourceMappingURL=search-form.native.js.map