{"version":3,"sources":["@wordpress/block-editor/src/hooks/border.js"],"names":["BORDER_SUPPORT_KEY","BorderPanel","props","isDisabled","useIsBorderDisabled","isSupported","hasBorderSupport","name","blockName","Platform","OS","support","radius","configs","every","Boolean"],"mappings":";;;;;;;;;;;AAKA;;AAFA;;AACA;;AAEA;;AAKA;;AACA;;AAZA;AACA;AACA;;AAMA;AACA;AACA;AAIO,IAAMA,kBAAkB,GAAG,sBAA3B;;;AAEA,SAASC,WAAT,CAAsBC,KAAtB,EAA8B;AACpC,MAAMC,UAAU,GAAGC,mBAAmB,CAAEF,KAAF,CAAtC;AACA,MAAMG,WAAW,GAAGC,gBAAgB,CAAEJ,KAAK,CAACK,IAAR,CAApC;;AAEA,MAAKJ,UAAU,IAAI,CAAEE,WAArB,EAAmC;AAClC,WAAO,IAAP;AACA;;AAED,SACC,4BAAC,0BAAD,QACC,4BAAC,qBAAD;AAAW,IAAA,KAAK,EAAG,cAAI,iBAAJ;AAAnB,KACC,4BAAC,8BAAD,EAAuBH,KAAvB,CADD,CADD,CADD;AAOA;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASI,gBAAT,CAA2BE,SAA3B,EAAuC;AAC7C,MAAKC,kBAASC,EAAT,KAAgB,KAArB,EAA6B;AAC5B,WAAO,KAAP;AACA;;AAED,MAAMC,OAAO,GAAG,6BAAiBH,SAAjB,EAA4BR,kBAA5B,CAAhB,CAL6C,CAO7C;AACA;;AACA,SAAO,CAAC,EAAI,SAASW,OAAT,IAAoBA,OAApB,aAAoBA,OAApB,eAAoBA,OAAO,CAAEC,MAAjC,CAAR;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMR,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAkB;AAAA,MAAhBF,KAAgB,uEAAR,EAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA,MAAMW,OAAO,GAAG,CAAE,6CAA2BX,KAA3B,CAAF,CAAhB;AACA,SAAOW,OAAO,CAACC,KAAR,CAAeC,OAAf,CAAP;AACA,CARD","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { getBlockSupport } from '@wordpress/blocks';\nimport { PanelBody } from '@wordpress/components';\nimport { Platform } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport InspectorControls from '../components/inspector-controls';\nimport { BorderRadiusEdit, useIsBorderRadiusDisabled } from './border-radius';\n\nexport const BORDER_SUPPORT_KEY = '__experimentalBorder';\n\nexport function BorderPanel( props ) {\n\tconst isDisabled = useIsBorderDisabled( props );\n\tconst isSupported = hasBorderSupport( props.name );\n\n\tif ( isDisabled || ! isSupported ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<InspectorControls>\n\t\t\t<PanelBody title={ __( 'Border settings' ) }>\n\t\t\t\t<BorderRadiusEdit { ...props } />\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n}\n\n/**\n * Determine whether there is block support for borders.\n *\n * @param {string} blockName Block name.\n * @return {boolean}         Whether there is support.\n */\nexport function hasBorderSupport( blockName ) {\n\tif ( Platform.OS !== 'web' ) {\n\t\treturn false;\n\t}\n\n\tconst support = getBlockSupport( blockName, BORDER_SUPPORT_KEY );\n\n\t// Further border properties to be added in future iterations.\n\t// e.g. support && ( support.radius || support.width || support.style )\n\treturn !! ( true === support || support?.radius );\n}\n\n/**\n * Determines whether there is any block support for borders e.g. border radius,\n * style, width etc.\n *\n * @param  {Object} props Block properties.\n * @return {boolean}      If border support is completely disabled.\n */\nconst useIsBorderDisabled = ( props = {} ) => {\n\t// Further border properties to be added in future iterations.\n\t// e.g. const configs = [\n\t// \t\tuseIsBorderRadiusDisabled( props ),\n\t//\t\tuseIsBorderWidthDisabled( props ),\n\t// ];\n\tconst configs = [ useIsBorderRadiusDisabled( props ) ];\n\treturn configs.every( Boolean );\n};\n"]}