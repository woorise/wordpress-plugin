{"version":3,"sources":["@wordpress/block-editor/src/hooks/font-family.js"],"names":["FONT_FAMILY_SUPPORT_KEY","getFontFamilyFromAttributeValue","fontFamilies","value","attributeParsed","exec","fontFamilyObject","slug","fontFamily","FontFamilyEdit","name","setAttributes","attributes","style","isDisable","useIsFontFamilyDisabled","typography","onChange","newValue","predefinedFontFamily","undefined","length"],"mappings":";;;;;;;;;;;;;;;AAGA;;AAKA;;AAKA;;AACA;;AACA;;;;;;AAEO,IAAMA,uBAAuB,GAAG,0BAAhC;;;AAEP,IAAMC,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAEC,YAAF,EAAgBC,KAAhB,EAA2B;AAClE,MAAMC,eAAe,GAAG,gCAAgCC,IAAhC,CAAsCF,KAAtC,CAAxB;;AACA,MAAKC,eAAe,IAAIA,eAAe,CAAE,CAAF,CAAvC,EAA+C;AAC9C,QAAME,gBAAgB,GAAG,kBAAMJ,YAAN,EAAoB,gBAAgB;AAAA,UAAZK,IAAY,QAAZA,IAAY;AAC5D,aAAOA,IAAI,KAAKH,eAAe,CAAE,CAAF,CAA/B;AACA,KAFwB,CAAzB;;AAGA,QAAKE,gBAAL,EAAwB;AACvB,aAAOA,gBAAgB,CAACE,UAAxB;AACA;AACD;;AACD,SAAOL,KAAP;AACA,CAXD;;AAaO,SAASM,cAAT,QAIH;AAAA;;AAAA,MAHHC,IAGG,SAHHA,IAGG;AAAA,MAFHC,aAEG,SAFHA,aAEG;AAAA,oCADHC,UACG,CADWC,KACX;AAAA,MADWA,KACX,sCADmB,EACnB;AACH,MAAMX,YAAY,GAAG,+BAAkB,yBAAlB,CAArB;AACA,MAAMY,SAAS,GAAGC,uBAAuB,CAAE;AAAEL,IAAAA,IAAI,EAAJA;AAAF,GAAF,CAAzC;;AAEA,MAAKI,SAAL,EAAiB;AAChB,WAAO,IAAP;AACA;;AAED,MAAMX,KAAK,GAAGF,+BAA+B,CAC5CC,YAD4C,uBAE5CW,KAAK,CAACG,UAFsC,sDAE5C,kBAAkBR,UAF0B,CAA7C;;AAKA,WAASS,QAAT,CAAmBC,QAAnB,EAA8B;AAC7B,QAAMC,oBAAoB,GAAG,kBAC5BjB,YAD4B,EAE5B;AAAA,UAAIM,UAAJ,SAAIA,UAAJ;AAAA,aAAsBA,UAAU,KAAKU,QAArC;AAAA,KAF4B,CAA7B;AAIAP,IAAAA,aAAa,CAAE;AACdE,MAAAA,KAAK,EAAE,6DACHA,KADG;AAENG,QAAAA,UAAU,kCACJH,KAAK,CAACG,UAAN,IAAoB,EADhB;AAETR,UAAAA,UAAU,EAAEW,oBAAoB,oCACFA,oBAAoB,CAACZ,IADnB,IAE7BW,QAAQ,IAAIE;AAJN;AAFJ;AADO,KAAF,CAAb;AAWA;;AAED,SACC,4BAAC,mBAAD;AACC,IAAA,SAAS,EAAC,wCADX;AAEC,IAAA,YAAY,EAAGlB,YAFhB;AAGC,IAAA,KAAK,EAAGC,KAHT;AAIC,IAAA,QAAQ,EAAGc;AAJZ,IADD;AAQA;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASF,uBAAT,QAA6C;AAAA,MAATL,IAAS,SAATA,IAAS;AACnD,MAAMR,YAAY,GAAG,+BAAkB,yBAAlB,CAArB;AACA,SACC,CAAEA,YAAF,IACAA,YAAY,CAACmB,MAAb,KAAwB,CADxB,IAEA,CAAE,6BAAiBX,IAAjB,EAAuBV,uBAAvB,CAHH;AAKA","sourcesContent":["/**\n * External dependencies\n */\nimport { find } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { hasBlockSupport } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { cleanEmptyObject } from './utils';\nimport useEditorFeature from '../components/use-editor-feature';\nimport FontFamilyControl from '../components/font-family';\n\nexport const FONT_FAMILY_SUPPORT_KEY = '__experimentalFontFamily';\n\nconst getFontFamilyFromAttributeValue = ( fontFamilies, value ) => {\n\tconst attributeParsed = /var:preset\\|font-family\\|(.+)/.exec( value );\n\tif ( attributeParsed && attributeParsed[ 1 ] ) {\n\t\tconst fontFamilyObject = find( fontFamilies, ( { slug } ) => {\n\t\t\treturn slug === attributeParsed[ 1 ];\n\t\t} );\n\t\tif ( fontFamilyObject ) {\n\t\t\treturn fontFamilyObject.fontFamily;\n\t\t}\n\t}\n\treturn value;\n};\n\nexport function FontFamilyEdit( {\n\tname,\n\tsetAttributes,\n\tattributes: { style = {} },\n} ) {\n\tconst fontFamilies = useEditorFeature( 'typography.fontFamilies' );\n\tconst isDisable = useIsFontFamilyDisabled( { name } );\n\n\tif ( isDisable ) {\n\t\treturn null;\n\t}\n\n\tconst value = getFontFamilyFromAttributeValue(\n\t\tfontFamilies,\n\t\tstyle.typography?.fontFamily\n\t);\n\n\tfunction onChange( newValue ) {\n\t\tconst predefinedFontFamily = find(\n\t\t\tfontFamilies,\n\t\t\t( { fontFamily } ) => fontFamily === newValue\n\t\t);\n\t\tsetAttributes( {\n\t\t\tstyle: cleanEmptyObject( {\n\t\t\t\t...style,\n\t\t\t\ttypography: {\n\t\t\t\t\t...( style.typography || {} ),\n\t\t\t\t\tfontFamily: predefinedFontFamily\n\t\t\t\t\t\t? `var:preset|font-family|${ predefinedFontFamily.slug }`\n\t\t\t\t\t\t: newValue || undefined,\n\t\t\t\t},\n\t\t\t} ),\n\t\t} );\n\t}\n\n\treturn (\n\t\t<FontFamilyControl\n\t\t\tclassName=\"block-editor-hooks-font-family-control\"\n\t\t\tfontFamilies={ fontFamilies }\n\t\t\tvalue={ value }\n\t\t\tonChange={ onChange }\n\t\t/>\n\t);\n}\n\n/**\n * Custom hook that checks if font-family functionality is disabled.\n *\n * @param {string} name The name of the block.\n * @return {boolean} Whether setting is disabled.\n */\nexport function useIsFontFamilyDisabled( { name } ) {\n\tconst fontFamilies = useEditorFeature( 'typography.fontFamilies' );\n\treturn (\n\t\t! fontFamilies ||\n\t\tfontFamilies.length === 0 ||\n\t\t! hasBlockSupport( name, FONT_FAMILY_SUPPORT_KEY )\n\t);\n}\n"]}