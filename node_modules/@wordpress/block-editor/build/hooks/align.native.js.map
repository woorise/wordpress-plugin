{"version":3,"sources":["@wordpress/block-editor/src/hooks/align.native.js"],"names":["ALIGNMENTS","settings","name","WIDE_ALIGNMENTS","excludeBlocks","includes","blockAlign","supports","align","Array","isArray","without","Object","values","alignments","alignWide","attributes","type","enum"],"mappings":";;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AAIA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAFA,IAAMA,UAAU,GAAG,CAAE,MAAF,EAAU,QAAV,EAAoB,OAApB,CAAnB;AAIA;AACA,sBACC,0BADD,EAEC,gCAFD,EAGC,UAAEC,QAAF,EAAYC,IAAZ,EAAsB;AACrB,MACCC,4BAAgBC,aAAhB,CAA8BC,QAA9B,CAAwCH,IAAxC,KACA,6BAAiBD,QAAjB,EAA2B,OAA3B,CAFD,EAGE;AACD,QAAMK,UAAU,GAAGL,QAAQ,CAACM,QAAT,CAAkBC,KAArC;AAEAP,IAAAA,QAAQ,CAACM,QAAT,mCACIN,QAAQ,CAACM,QADb;AAECC,MAAAA,KAAK,EAAEC,KAAK,CAACC,OAAN,CAAeJ,UAAf,IACJK,+BACAL,UADA,0CAEGM,MAAM,CAACC,MAAP,CAAeV,4BAAgBW,UAA/B,CAFH,GADI,GAKJR,UAPJ;AAQCS,MAAAA,SAAS,EAAE;AARZ;AAUAd,IAAAA,QAAQ,CAACe,UAAT,mCACIf,QAAQ,CAACe,UADb;AAECR,MAAAA,KAAK,EAAE;AACNS,QAAAA,IAAI,EAAE,QADA;AAEN;AACA;AACAC,QAAAA,IAAI,YAAOlB,UAAP,GAAmB,EAAnB;AAJE;AAFR;AASA;;AAED,SAAOC,QAAP;AACA,CAhCF","sourcesContent":["/**\n * External dependencies\n */\nimport { without } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { hasBlockSupport } from '@wordpress/blocks';\nimport { WIDE_ALIGNMENTS } from '@wordpress/components';\n\nconst ALIGNMENTS = [ 'left', 'center', 'right' ];\n\nexport * from './align.js';\n\n// Used to filter out blocks that don't support wide/full alignment on mobile\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/react-native-editor/align',\n\t( settings, name ) => {\n\t\tif (\n\t\t\tWIDE_ALIGNMENTS.excludeBlocks.includes( name ) &&\n\t\t\thasBlockSupport( settings, 'align' )\n\t\t) {\n\t\t\tconst blockAlign = settings.supports.align;\n\n\t\t\tsettings.supports = {\n\t\t\t\t...settings.supports,\n\t\t\t\talign: Array.isArray( blockAlign )\n\t\t\t\t\t? without(\n\t\t\t\t\t\t\tblockAlign,\n\t\t\t\t\t\t\t...Object.values( WIDE_ALIGNMENTS.alignments )\n\t\t\t\t\t  )\n\t\t\t\t\t: blockAlign,\n\t\t\t\talignWide: false,\n\t\t\t};\n\t\t\tsettings.attributes = {\n\t\t\t\t...settings.attributes,\n\t\t\t\talign: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\t// Allow for '' since it is used by updateAlignment function\n\t\t\t\t\t// in withToolbarControls for special cases with defined default values.\n\t\t\t\t\tenum: [ ...ALIGNMENTS, '' ],\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn settings;\n\t}\n);\n"]}