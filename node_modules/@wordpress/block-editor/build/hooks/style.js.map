{"version":3,"sources":["@wordpress/block-editor/src/hooks/style.js"],"names":["styleSupportKeys","TYPOGRAPHY_SUPPORT_KEYS","BORDER_SUPPORT_KEY","COLOR_SUPPORT_KEY","SPACING_SUPPORT_KEY","hasStyleSupport","blockType","some","key","VARIABLE_REFERENCE_PREFIX","VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE","VARIABLE_PATH_SEPARATOR_TOKEN_STYLE","compileStyleValue","uncompiledValue","variable","slice","length","split","join","getInlineStyles","styles","output","Object","keys","STYLE_PROPERTY","forEach","propKey","path","value","subPaths","properties","suffix","addAttribute","settings","attributes","style","assign","type","omitKeysNotToSerialize","blockSupports","__experimentalSkipSerialization","addSaveProps","props","filteredStyle","border","addEditProps","existingGetEditWrapperProps","getEditWrapperProps","withBlockControls","BlockEdit","blockName","name","hasSpacingSupport"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA;;AAKA;;AACA;;AAKA;;AAKA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,gBAAgB,8CAClBC,mCADkB,IAErBC,0BAFqB,EAGrBC,wBAHqB,EAIrBC,4BAJqB,EAAtB;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAEC,SAAF;AAAA,SACvBN,gBAAgB,CAACO,IAAjB,CAAuB,UAAEC,GAAF;AAAA,WAAW,6BAAiBF,SAAjB,EAA4BE,GAA5B,CAAX;AAAA,GAAvB,CADuB;AAAA,CAAxB;;AAGA,IAAMC,yBAAyB,GAAG,MAAlC;AACA,IAAMC,uCAAuC,GAAG,GAAhD;AACA,IAAMC,mCAAmC,GAAG,IAA5C;;AACA,SAASC,iBAAT,CAA4BC,eAA5B,EAA8C;AAC7C,MAAK,wBAAYA,eAAZ,EAA6BJ,yBAA7B,CAAL,EAAgE;AAC/D,QAAMK,QAAQ,GAAGD,eAAe,CAC9BE,KADe,CACRN,yBAAyB,CAACO,MADlB,EAEfC,KAFe,CAERP,uCAFQ,EAGfQ,IAHe,CAGTP,mCAHS,CAAjB;AAIA,+BAAqBG,QAArB;AACA;;AACD,SAAOD,eAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASM,eAAT,GAAwC;AAAA,MAAdC,MAAc,uEAAL,EAAK;AAC9C,MAAMC,MAAM,GAAG,EAAf;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAaC,qCAAb,EAA8BC,OAA9B,CAAuC,UAAEC,OAAF,EAAe;AACrD,QAAMC,IAAI,GAAGH,sCAAgBE,OAAhB,EAA0BE,KAAvC;AACA,QAAMC,QAAQ,GAAGL,sCAAgBE,OAAhB,EAA0BI,UAA3C;;AACA,QAAK,iBAAKV,MAAL,EAAaO,IAAb,CAAL,EAA2B;AAC1B,UAAK,CAAC,CAAEE,QAAR,EAAmB;AAClBA,QAAAA,QAAQ,CAACJ,OAAT,CAAkB,UAAEM,MAAF,EAAc;AAC/BV,UAAAA,MAAM,CACLK,OAAO,GAAG,wBAAYK,MAAZ,CADL,CAAN,GAEInB,iBAAiB,CAAE,iBAAKQ,MAAL,6CAAkBO,IAAlB,IAAwBI,MAAxB,GAAF,CAFrB;AAGA,SAJD;AAKA,OAND,MAMO;AACNV,QAAAA,MAAM,CAAEK,OAAF,CAAN,GAAoBd,iBAAiB,CAAE,iBAAKQ,MAAL,EAAaO,IAAb,CAAF,CAArC;AACA;AACD;AACD,GAdD;AAgBA,SAAON,MAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASW,YAAT,CAAuBC,QAAvB,EAAkC;AACjC,MAAK,CAAE5B,eAAe,CAAE4B,QAAF,CAAtB,EAAqC;AACpC,WAAOA,QAAP;AACA,GAHgC,CAKjC;;;AACA,MAAK,CAAEA,QAAQ,CAACC,UAAT,CAAoBC,KAA3B,EAAmC;AAClCb,IAAAA,MAAM,CAACc,MAAP,CAAeH,QAAQ,CAACC,UAAxB,EAAoC;AACnCC,MAAAA,KAAK,EAAE;AACNE,QAAAA,IAAI,EAAE;AADA;AAD4B,KAApC;AAKA;;AAED,SAAOJ,QAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASK,sBAAT,CAAiCH,KAAjC,EAAwCI,aAAxC,EAAwD;AAC9D,SAAO,oBACNJ,KADM,EAEN,UAAEP,KAAF,EAASpB,GAAT;AAAA;;AAAA,WACC,CAAC,wBAAE+B,aAAa,CAAE/B,GAAF,CAAf,+CAAE,mBAAsBgC,+BAAxB,CADF;AAAA,GAFM,CAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,YAAT,CAAuBC,KAAvB,EAA8BpC,SAA9B,EAAyC4B,UAAzC,EAAsD;AAC5D,MAAK,CAAE7B,eAAe,CAAEC,SAAF,CAAtB,EAAsC;AACrC,WAAOoC,KAAP;AACA;;AAH2D,MAKpDP,KALoD,GAK1CD,UAL0C,CAKpDC,KALoD;AAM5D,MAAMQ,aAAa,GAAGL,sBAAsB,CAAEH,KAAF;AAC3CS,IAAAA,MAAM,EAAE,6BAAiBtC,SAAjB,EAA4BJ,0BAA5B;AADmC,KAEzCC,wBAFyC,EAEpB,6BAAiBG,SAAjB,EAA4BH,wBAA5B,CAFoB,EAA5C;AAIAuC,EAAAA,KAAK,CAACP,KAAN,mCACIhB,eAAe,CAAEwB,aAAF,CADnB,GAEID,KAAK,CAACP,KAFV;AAKA,SAAOO,KAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASG,YAAT,CAAuBZ,QAAvB,EAAkC;AACxC,MAAK,CAAE5B,eAAe,CAAE4B,QAAF,CAAtB,EAAqC;AACpC,WAAOA,QAAP;AACA;;AAED,MAAMa,2BAA2B,GAAGb,QAAQ,CAACc,mBAA7C;;AACAd,EAAAA,QAAQ,CAACc,mBAAT,GAA+B,UAAEb,UAAF,EAAkB;AAChD,QAAIQ,KAAK,GAAG,EAAZ;;AACA,QAAKI,2BAAL,EAAmC;AAClCJ,MAAAA,KAAK,GAAGI,2BAA2B,CAAEZ,UAAF,CAAnC;AACA;;AAED,WAAOO,YAAY,CAAEC,KAAF,EAAST,QAAT,EAAmBC,UAAnB,CAAnB;AACA,GAPD;;AASA,SAAOD,QAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,IAAMe,iBAAiB,GAAG,yCAChC,UAAEC,SAAF;AAAA,SAAiB,UAAEP,KAAF,EAAa;AAAA,QACfQ,SADe,GACDR,KADC,CACrBS,IADqB;AAG7B,QAAMC,iBAAiB,GAAG,6BACzBF,SADyB,EAEzB9C,4BAFyB,CAA1B;AAKA,WAAO,CACN,4BAAC,2BAAD;AAAiB,MAAA,GAAG,EAAC;AAArB,OAAuCsC,KAAvC,EADM,EAEN,4BAAC,mBAAD;AAAa,MAAA,GAAG,EAAC;AAAjB,OAA+BA,KAA/B,EAFM,EAGN,4BAAC,gBAAD;AAAW,MAAA,GAAG,EAAC;AAAf,OAA6BA,KAA7B,EAHM,EAIN,4BAAC,SAAD;AAAW,MAAA,GAAG,EAAC;AAAf,OAA2BA,KAA3B,EAJM,EAKNU,iBAAiB,IAChB,4BAAC,4BAAD;AAAqB,MAAA,GAAG,EAAC;AAAzB,OACC,4BAAC,oBAAD,EAAkBV,KAAlB,CADD,CANK,CAAP;AAWA,GAnBD;AAAA,CADgC,EAqBhC,qBArBgC,CAA1B;;AAwBP,sBACC,0BADD,EAEC,yBAFD,EAGCV,YAHD;AAMA,sBACC,kCADD,EAEC,yBAFD,EAGCS,YAHD;AAMA,sBACC,0BADD,EAEC,yBAFD,EAGCI,YAHD;AAMA,sBACC,kBADD,EAEC,gCAFD,EAGCG,iBAHD","sourcesContent":["/**\n * External dependencies\n */\nimport { capitalize, get, has, omitBy, startsWith } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport {\n\tgetBlockSupport,\n\thasBlockSupport,\n\t__EXPERIMENTAL_STYLE_PROPERTY as STYLE_PROPERTY,\n} from '@wordpress/blocks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { BORDER_SUPPORT_KEY, BorderPanel } from './border';\nimport { COLOR_SUPPORT_KEY, ColorEdit } from './color';\nimport { TypographyPanel, TYPOGRAPHY_SUPPORT_KEYS } from './typography';\nimport { SPACING_SUPPORT_KEY, PaddingEdit } from './padding';\nimport SpacingPanelControl from '../components/spacing-panel-control';\n\nconst styleSupportKeys = [\n\t...TYPOGRAPHY_SUPPORT_KEYS,\n\tBORDER_SUPPORT_KEY,\n\tCOLOR_SUPPORT_KEY,\n\tSPACING_SUPPORT_KEY,\n];\n\nconst hasStyleSupport = ( blockType ) =>\n\tstyleSupportKeys.some( ( key ) => hasBlockSupport( blockType, key ) );\n\nconst VARIABLE_REFERENCE_PREFIX = 'var:';\nconst VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE = '|';\nconst VARIABLE_PATH_SEPARATOR_TOKEN_STYLE = '--';\nfunction compileStyleValue( uncompiledValue ) {\n\tif ( startsWith( uncompiledValue, VARIABLE_REFERENCE_PREFIX ) ) {\n\t\tconst variable = uncompiledValue\n\t\t\t.slice( VARIABLE_REFERENCE_PREFIX.length )\n\t\t\t.split( VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE )\n\t\t\t.join( VARIABLE_PATH_SEPARATOR_TOKEN_STYLE );\n\t\treturn `var(--wp--${ variable })`;\n\t}\n\treturn uncompiledValue;\n}\n\n/**\n * Returns the inline styles to add depending on the style object\n *\n * @param  {Object} styles Styles configuration\n * @return {Object}        Flattened CSS variables declaration\n */\nexport function getInlineStyles( styles = {} ) {\n\tconst output = {};\n\tObject.keys( STYLE_PROPERTY ).forEach( ( propKey ) => {\n\t\tconst path = STYLE_PROPERTY[ propKey ].value;\n\t\tconst subPaths = STYLE_PROPERTY[ propKey ].properties;\n\t\tif ( has( styles, path ) ) {\n\t\t\tif ( !! subPaths ) {\n\t\t\t\tsubPaths.forEach( ( suffix ) => {\n\t\t\t\t\toutput[\n\t\t\t\t\t\tpropKey + capitalize( suffix )\n\t\t\t\t\t] = compileStyleValue( get( styles, [ ...path, suffix ] ) );\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\toutput[ propKey ] = compileStyleValue( get( styles, path ) );\n\t\t\t}\n\t\t}\n\t} );\n\n\treturn output;\n}\n\n/**\n * Filters registered block settings, extending attributes to include `style` attribute.\n *\n * @param  {Object} settings Original block settings\n * @return {Object}          Filtered block settings\n */\nfunction addAttribute( settings ) {\n\tif ( ! hasStyleSupport( settings ) ) {\n\t\treturn settings;\n\t}\n\n\t// allow blocks to specify their own attribute definition with default values if needed.\n\tif ( ! settings.attributes.style ) {\n\t\tObject.assign( settings.attributes, {\n\t\t\tstyle: {\n\t\t\t\ttype: 'object',\n\t\t\t},\n\t\t} );\n\t}\n\n\treturn settings;\n}\n\n/**\n * Filters a style object returning only the keys\n * that are serializable for a given block.\n *\n * @param {Object} style Input style object to filter.\n * @param {Object} blockSupports Info about block supports.\n * @return {Object} Filtered style.\n */\nexport function omitKeysNotToSerialize( style, blockSupports ) {\n\treturn omitBy(\n\t\tstyle,\n\t\t( value, key ) =>\n\t\t\t!! blockSupports[ key ]?.__experimentalSkipSerialization\n\t);\n}\n\n/**\n * Override props assigned to save component to inject the CSS variables definition.\n *\n * @param  {Object} props      Additional props applied to save element\n * @param  {Object} blockType  Block type\n * @param  {Object} attributes Block attributes\n * @return {Object}            Filtered props applied to save element\n */\nexport function addSaveProps( props, blockType, attributes ) {\n\tif ( ! hasStyleSupport( blockType ) ) {\n\t\treturn props;\n\t}\n\n\tconst { style } = attributes;\n\tconst filteredStyle = omitKeysNotToSerialize( style, {\n\t\tborder: getBlockSupport( blockType, BORDER_SUPPORT_KEY ),\n\t\t[ COLOR_SUPPORT_KEY ]: getBlockSupport( blockType, COLOR_SUPPORT_KEY ),\n\t} );\n\tprops.style = {\n\t\t...getInlineStyles( filteredStyle ),\n\t\t...props.style,\n\t};\n\n\treturn props;\n}\n\n/**\n * Filters registered block settings to extand the block edit wrapper\n * to apply the desired styles and classnames properly.\n *\n * @param  {Object} settings Original block settings\n * @return {Object}          Filtered block settings\n */\nexport function addEditProps( settings ) {\n\tif ( ! hasStyleSupport( settings ) ) {\n\t\treturn settings;\n\t}\n\n\tconst existingGetEditWrapperProps = settings.getEditWrapperProps;\n\tsettings.getEditWrapperProps = ( attributes ) => {\n\t\tlet props = {};\n\t\tif ( existingGetEditWrapperProps ) {\n\t\t\tprops = existingGetEditWrapperProps( attributes );\n\t\t}\n\n\t\treturn addSaveProps( props, settings, attributes );\n\t};\n\n\treturn settings;\n}\n\n/**\n * Override the default edit UI to include new inspector controls for\n * all the custom styles configs.\n *\n * @param  {Function} BlockEdit Original component\n * @return {Function}           Wrapped component\n */\nexport const withBlockControls = createHigherOrderComponent(\n\t( BlockEdit ) => ( props ) => {\n\t\tconst { name: blockName } = props;\n\n\t\tconst hasSpacingSupport = hasBlockSupport(\n\t\t\tblockName,\n\t\t\tSPACING_SUPPORT_KEY\n\t\t);\n\n\t\treturn [\n\t\t\t<TypographyPanel key=\"typography\" { ...props } />,\n\t\t\t<BorderPanel key=\"border\" { ...props } />,\n\t\t\t<ColorEdit key=\"colors\" { ...props } />,\n\t\t\t<BlockEdit key=\"edit\" { ...props } />,\n\t\t\thasSpacingSupport && (\n\t\t\t\t<SpacingPanelControl key=\"spacing\">\n\t\t\t\t\t<PaddingEdit { ...props } />\n\t\t\t\t</SpacingPanelControl>\n\t\t\t),\n\t\t];\n\t},\n\t'withToolbarControls'\n);\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/style/addAttribute',\n\taddAttribute\n);\n\naddFilter(\n\t'blocks.getSaveContent.extraProps',\n\t'core/style/addSaveProps',\n\taddSaveProps\n);\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/style/addEditProps',\n\taddEditProps\n);\n\naddFilter(\n\t'editor.BlockEdit',\n\t'core/style/with-block-controls',\n\twithBlockControls\n);\n"]}