{"version":3,"sources":["@wordpress/block-editor/src/hooks/font-appearance.js"],"names":["FONT_STYLE_SUPPORT_KEY","FONT_WEIGHT_SUPPORT_KEY","FontAppearanceEdit","props","style","attributes","setAttributes","hasFontStyles","useIsFontStyleDisabled","hasFontWeights","useIsFontWeightDisabled","onChange","newStyles","typography","fontStyle","fontWeight","blockName","name","styleSupport","weightSupport","useIsFontAppearanceDisabled","stylesDisabled","weightsDisabled"],"mappings":";;;;;;;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;;;;;AAEA;AACA;AACA;AACO,IAAMA,sBAAsB,GAAG,yBAA/B;AAEP;AACA;AACA;;;AACO,IAAMC,uBAAuB,GAAG,0BAAhC;AAEP;AACA;AACA;AACA;AACA;AACA;;;;AACO,SAASC,kBAAT,CAA6BC,KAA7B,EAAqC;AAAA;;AAAA,MAE5BC,KAF4B,GAIvCD,KAJuC,CAE1CE,UAF0C,CAE5BD,KAF4B;AAAA,MAG1CE,aAH0C,GAIvCH,KAJuC,CAG1CG,aAH0C;AAM3C,MAAMC,aAAa,GAAG,CAAEC,sBAAsB,CAAEL,KAAF,CAA9C;AACA,MAAMM,cAAc,GAAG,CAAEC,uBAAuB,CAAEP,KAAF,CAAhD;;AAEA,MAAK,CAAEI,aAAF,IAAmB,CAAEE,cAA1B,EAA2C;AAC1C,WAAO,IAAP;AACA;;AAED,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAAEC,SAAF,EAAiB;AACjCN,IAAAA,aAAa,CAAE;AACdF,MAAAA,KAAK,EAAE,6DACHA,KADG;AAENS,QAAAA,UAAU,kCACNT,KADM,aACNA,KADM,uBACNA,KAAK,CAAES,UADD;AAETC,UAAAA,SAAS,EAAEF,SAAS,CAACE,SAFZ;AAGTC,UAAAA,UAAU,EAAEH,SAAS,CAACG;AAHb;AAFJ;AADO,KAAF,CAAb;AAUA,GAXD;;AAaA,MAAMD,SAAS,GAAGV,KAAH,aAAGA,KAAH,4CAAGA,KAAK,CAAES,UAAV,sDAAG,kBAAmBC,SAArC;AAEA,MAAMC,UAAU,GAAGX,KAAH,aAAGA,KAAH,6CAAGA,KAAK,CAAES,UAAV,uDAAG,mBAAmBE,UAAtC;AAEA,SACC,4BAAC,8BAAD;AACC,IAAA,QAAQ,EAAGJ,QADZ;AAEC,IAAA,aAAa,EAAGJ,aAFjB;AAGC,IAAA,cAAc,EAAGE,cAHlB;AAIC,IAAA,KAAK,EAAG;AAAEK,MAAAA,SAAS,EAATA,SAAF;AAAaC,MAAAA,UAAU,EAAVA;AAAb;AAJT,IADD;AAQA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASP,sBAAT,GAA4D;AAAA,iFAAL,EAAK;AAAA,MAAnBQ,SAAmB,QAAzBC,IAAyB;;AAClE,MAAMC,YAAY,GAAG,6BAAiBF,SAAjB,EAA4BhB,sBAA5B,CAArB;AACA,MAAMO,aAAa,GAAG,+BAAkB,4BAAlB,CAAtB;AAEA,SAAO,CAAEW,YAAF,IAAkB,CAAEX,aAA3B;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASG,uBAAT,GAA6D;AAAA,kFAAL,EAAK;AAAA,MAAnBM,SAAmB,SAAzBC,IAAyB;;AACnE,MAAME,aAAa,GAAG,6BAAiBH,SAAjB,EAA4Bf,uBAA5B,CAAtB;AACA,MAAMQ,cAAc,GAAG,+BAAkB,6BAAlB,CAAvB;AAEA,SAAO,CAAEU,aAAF,IAAmB,CAAEV,cAA5B;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASW,2BAAT,CAAsCjB,KAAtC,EAA8C;AACpD,MAAMkB,cAAc,GAAGb,sBAAsB,CAAEL,KAAF,CAA7C;AACA,MAAMmB,eAAe,GAAGZ,uBAAuB,CAAEP,KAAF,CAA/C;AAEA,SAAOkB,cAAc,IAAIC,eAAzB;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { hasBlockSupport } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport FontAppearanceControl from '../components/font-appearance-control';\nimport useEditorFeature from '../components/use-editor-feature';\nimport { cleanEmptyObject } from './utils';\n\n/**\n * Key within block settings' support array indicating support for font style.\n */\nexport const FONT_STYLE_SUPPORT_KEY = '__experimentalFontStyle';\n\n/**\n * Key within block settings' support array indicating support for font weight.\n */\nexport const FONT_WEIGHT_SUPPORT_KEY = '__experimentalFontWeight';\n\n/**\n * Inspector control panel containing the font appearance options.\n *\n * @param  {Object} props Block properties.\n * @return {WPElement}    Font appearance edit element.\n */\nexport function FontAppearanceEdit( props ) {\n\tconst {\n\t\tattributes: { style },\n\t\tsetAttributes,\n\t} = props;\n\n\tconst hasFontStyles = ! useIsFontStyleDisabled( props );\n\tconst hasFontWeights = ! useIsFontWeightDisabled( props );\n\n\tif ( ! hasFontStyles && ! hasFontWeights ) {\n\t\treturn null;\n\t}\n\n\tconst onChange = ( newStyles ) => {\n\t\tsetAttributes( {\n\t\t\tstyle: cleanEmptyObject( {\n\t\t\t\t...style,\n\t\t\t\ttypography: {\n\t\t\t\t\t...style?.typography,\n\t\t\t\t\tfontStyle: newStyles.fontStyle,\n\t\t\t\t\tfontWeight: newStyles.fontWeight,\n\t\t\t\t},\n\t\t\t} ),\n\t\t} );\n\t};\n\n\tconst fontStyle = style?.typography?.fontStyle;\n\n\tconst fontWeight = style?.typography?.fontWeight;\n\n\treturn (\n\t\t<FontAppearanceControl\n\t\t\tonChange={ onChange }\n\t\t\thasFontStyles={ hasFontStyles }\n\t\t\thasFontWeights={ hasFontWeights }\n\t\t\tvalue={ { fontStyle, fontWeight } }\n\t\t/>\n\t);\n}\n\n/**\n * Checks if font style support has been disabled either by not opting in for\n * support or by failing to provide preset styles.\n *\n * @param  {Object} props      Block properties.\n * @param  {string} props.name Name for the block type.\n * @return {boolean}           Whether font style support has been disabled.\n */\nexport function useIsFontStyleDisabled( { name: blockName } = {} ) {\n\tconst styleSupport = hasBlockSupport( blockName, FONT_STYLE_SUPPORT_KEY );\n\tconst hasFontStyles = useEditorFeature( 'typography.customFontStyle' );\n\n\treturn ! styleSupport || ! hasFontStyles;\n}\n\n/**\n * Checks if font weight support has been disabled either by not opting in for\n * support or by failing to provide preset weights.\n *\n * @param  {Object} props      Block properties.\n * @param  {string} props.name Name for the block type.\n * @return {boolean}           Whether font weight support has been disabled.\n */\nexport function useIsFontWeightDisabled( { name: blockName } = {} ) {\n\tconst weightSupport = hasBlockSupport( blockName, FONT_WEIGHT_SUPPORT_KEY );\n\tconst hasFontWeights = useEditorFeature( 'typography.customFontWeight' );\n\n\treturn ! weightSupport || ! hasFontWeights;\n}\n\n/**\n * Checks if font appearance support has been disabled.\n *\n * @param  {Object} props      Block properties.\n * @return {boolean}           Whether font appearance support has been disabled.\n */\nexport function useIsFontAppearanceDisabled( props ) {\n\tconst stylesDisabled = useIsFontStyleDisabled( props );\n\tconst weightsDisabled = useIsFontWeightDisabled( props );\n\n\treturn stylesDisabled && weightsDisabled;\n}\n"]}