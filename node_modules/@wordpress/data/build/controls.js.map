{"version":3,"sources":["@wordpress/data/src/controls.js"],"names":["SELECT","RESOLVE_SELECT","DISPATCH","select","storeKey","selectorName","args","type","resolveSelect","dispatch","actionName","controls","builtinControls","registry","method","hasResolver"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nimport { createRegistryControl } from './factory';\n\nconst SELECT = '@@data/SELECT';\nconst RESOLVE_SELECT = '@@data/RESOLVE_SELECT';\nconst DISPATCH = '@@data/DISPATCH';\n\n/**\n * Dispatches a control action for triggering a synchronous registry select.\n *\n * Note: This control synchronously returns the current selector value, triggering the\n * resolution, but not waiting for it.\n *\n * @param {string} storeKey     The key for the store the selector belongs to.\n * @param {string} selectorName The name of the selector.\n * @param {Array}  args         Arguments for the selector.\n *\n * @example\n * ```js\n * import { controls } from '@wordpress/data';\n *\n * // Action generator using `select`.\n * export function* myAction() {\n *   const isEditorSideBarOpened = yield controls.select( 'core/edit-post', 'isEditorSideBarOpened' );\n *   // Do stuff with the result from the `select`.\n * }\n * ```\n *\n * @return {Object} The control descriptor.\n */\nfunction select( storeKey, selectorName, ...args ) {\n\treturn { type: SELECT, storeKey, selectorName, args };\n}\n\n/**\n * Dispatches a control action for triggering and resolving a registry select.\n *\n * Note: when this control action is handled, it automatically considers\n * selectors that may have a resolver. In such case, it will return a `Promise` that resolves\n * after the selector finishes resolving, with the final result value.\n *\n * @param {string} storeKey      The key for the store the selector belongs to\n * @param {string} selectorName  The name of the selector\n * @param {Array}  args          Arguments for the selector.\n *\n * @example\n * ```js\n * import { controls } from '@wordpress/data';\n *\n * // Action generator using resolveSelect\n * export function* myAction() {\n * \tconst isSidebarOpened = yield controls.resolveSelect( 'core/edit-post', 'isEditorSideBarOpened' );\n * \t// do stuff with the result from the select.\n * }\n * ```\n *\n * @return {Object} The control descriptor.\n */\nfunction resolveSelect( storeKey, selectorName, ...args ) {\n\treturn { type: RESOLVE_SELECT, storeKey, selectorName, args };\n}\n\n/**\n * Dispatches a control action for triggering a registry dispatch.\n *\n * @param {string} storeKey    The key for the store the action belongs to\n * @param {string} actionName  The name of the action to dispatch\n * @param {Array}  args        Arguments for the dispatch action.\n *\n * @example\n * ```js\n * import { controls } from '@wordpress/data-controls';\n *\n * // Action generator using dispatch\n * export function* myAction() {\n *   yield controls.dispatch( 'core/edit-post', 'togglePublishSidebar' );\n *   // do some other things.\n * }\n * ```\n *\n * @return {Object}  The control descriptor.\n */\nfunction dispatch( storeKey, actionName, ...args ) {\n\treturn { type: DISPATCH, storeKey, actionName, args };\n}\n\nexport const controls = { select, resolveSelect, dispatch };\n\nexport const builtinControls = {\n\t[ SELECT ]: createRegistryControl(\n\t\t( registry ) => ( { storeKey, selectorName, args } ) =>\n\t\t\tregistry.select( storeKey )[ selectorName ]( ...args )\n\t),\n\t[ RESOLVE_SELECT ]: createRegistryControl(\n\t\t( registry ) => ( { storeKey, selectorName, args } ) => {\n\t\t\tconst method = registry.select( storeKey )[ selectorName ]\n\t\t\t\t.hasResolver\n\t\t\t\t? 'resolveSelect'\n\t\t\t\t: 'select';\n\t\t\treturn registry[ method ]( storeKey )[ selectorName ]( ...args );\n\t\t}\n\t),\n\t[ DISPATCH ]: createRegistryControl(\n\t\t( registry ) => ( { storeKey, actionName, args } ) =>\n\t\t\tregistry.dispatch( storeKey )[ actionName ]( ...args )\n\t),\n};\n"]}