"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useBoolState = void 0;
const is_1 = require("@itsjonq/is");
const react_1 = require("react");
const tiny_warning_1 = require("tiny-warning");
/**
 * A enhanced hook for managing boolean states.
 *
 * @param {boolean} initialValue An initial state value.
 *
 * @example
 * const [state, stateFns] = useBoolState(false);
 * ...
 * stateFns.toggle(); // Toggles the state.
 */
function useBoolState(initialState) {
    tiny_warning_1.default(is_1.is.boolean(initialState), ['use-enhanced-state', 'useBoolState', 'State must be a boolean.'].join('\n'));
    const [state, setState] = react_1.useState(initialState || false);
    const truthy = react_1.useCallback(() => setState(true), []);
    const falsy = react_1.useCallback(() => setState(false), []);
    const toggle = react_1.useCallback(() => setState((prev) => !prev), []);
    const methods = react_1.useMemo(() => ({
        false: falsy,
        falsy,
        set: setState,
        setState,
        toggle,
        true: truthy,
        truthy,
    }), [falsy, toggle, truthy]);
    return [state, methods];
}
exports.useBoolState = useBoolState;
