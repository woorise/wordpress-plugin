declare type ControlledStateHook<S> = [S | undefined, (next: S) => void];
declare type ControlledStateOptions<S> = {
    /**
     * An initial value for the controlled state. This state is used
     * if there is no currentState (from props).
     */
    initial?: S;
};
/**
 * A enhanced hook for managing and coordinating internal state and
 * state from props. This hook is useful for creating controlled components,
 * such as a custom <Input />.
 *
 * @param {any} initialValue An initial state value.
 *
 * @example
 * const [value, setValue] = useControlledState(valueFromProps);
 */
export declare function useControlledState<S>(currentState?: S, options?: ControlledStateOptions<S>): ControlledStateHook<S>;
export {};
