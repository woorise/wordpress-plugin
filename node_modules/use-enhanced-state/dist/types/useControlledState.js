"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useControlledState = void 0;
const is_1 = require("@itsjonq/is");
const react_1 = require("react");
const defaultOptions = {
    initial: undefined,
};
/**
 * A enhanced hook for managing and coordinating internal state and
 * state from props. This hook is useful for creating controlled components,
 * such as a custom <Input />.
 *
 * @param {any} initialValue An initial state value.
 *
 * @example
 * const [value, setValue] = useControlledState(valueFromProps);
 */
function useControlledState(currentState, options) {
    const { initial } = { ...defaultOptions, ...options };
    const [internalState, setInternalState] = react_1.useState(initial);
    const hasCurrentState = is_1.is.defined(currentState);
    const setState = react_1.useCallback((nextState) => {
        if (!hasCurrentState) {
            setInternalState(nextState);
        }
    }, [hasCurrentState]);
    const state = hasCurrentState ? currentState : internalState;
    return [state, setState];
}
exports.useControlledState = useControlledState;
